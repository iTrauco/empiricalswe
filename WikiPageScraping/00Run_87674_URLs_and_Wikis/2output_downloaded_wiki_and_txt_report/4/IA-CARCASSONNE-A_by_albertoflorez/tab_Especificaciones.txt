[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#partida" id="user-content-partida"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Partida</h2>
<pre><code>var Partida = function(idPartida,jugs,numJugs){
    this.idPartida = idPartida;
    addPartida(this);
    this.initialize(jugs,numJugs);
}
</code></pre>
<p>Es un objeto que esta compuesto por:</p>
<ul>
<li>un tablero</li>
<li>lista de jugadores y puntos</li>
<li>turno actual</li>
</ul>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#tablero" id="user-content-tablero"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Tablero</h2>
<pre><code>var Tablero = function (partida){
//el array estará formado por celdas en el que se almacena (ficha : {es necesario el tipo de la ficha}, pos: {x,y}).
    this.partida = partida; 
    this.fichaActual;
    this.mazo = new Mazo();
    this.cellSet = [];    
    this.maxDim = 100;
    this.posCentral = {x: (this.maxDim /2),y: (this.maxDim /2)};
    this.generate();
    this.objetoResumen;
};
</code></pre>
<p>Es un objeto que esta compuesto por:</p>
<ul>
<li>mazo</li>
<li>array de fichas no puestas</li>
<li>array de celdas con:
<ul>
<li>las fichas puestas</li>
<li>posición de estas fichas</li>
</ul>
</li>
</ul>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#celda" id="user-content-celda"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Celda</h2>
<p>Relaciona la ficha y la posición que ocupa en el tablero:</p>
<pre><code>var Cell = function(ficha,pos){
    this.ficha = ficha;
    this.pos = pos;
};
</code></pre>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#ficha" id="user-content-ficha"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Ficha</h2>
<p>Viene dada por:</p>
<pre><code>function Ficha (tipo, numFicha, escudo, pdato){
    this.dato=entrada[tipo-1].dato || [];
    this.pdato=pdato;
    this.tipo=tipo;
    this.escudo=escudo ||false; //default false
    this.numFicha=numFicha; //no default porque sino la ficha madre no toma valor
    this.giroUI = 0;
    this.seguidor = new Seguidor();
};
</code></pre>
<p>Donde "pdato", "tipo", "dato"(entrada) viene explicado más adelante.</p>
<ul>
<li>
<p>"escudo" establece si en esa ficha hay un escudo en la ciudad.</p>
</li>
<li>
<p>"numFicha" es el id para saber que ficha es.</p>
</li>
<li>
<p>"giroUI" guardamos cuánto ha girado la ficha IU, sirve para que si hay que devolvérsela en algún momento, podamos decirles con que giro pintan el sprite correspondiente.</p>
<ul>
<li>NOTA: nosotros ya la guardamos girada.</li>
</ul>
</li>
<li>
<p>"seguidor" guarda el seguidor de haber uno.</p>
</li>
<li>
<p><strong>Fichas</strong></p>
</li>
</ul>
<p>En esta variable está el numero de tipos diferentes de fichas.
var tipos=19;</p>
<p>En el array "entrada" se recogen los datos de cada ficha particular. (entrada[0]=tipo 1, entrada[18]=tipo 19)
Se agrupan en función del contenido de la ficha:</p>
<ul>
<li>ciudad con caminos</li>
<li>ciudad con campo</li>
<li>ciudad</li>
<li>camino</li>
<li>monasterios</li>
<li>monasterio con caminos</li>
</ul>
<p>La estructura de datos de la ficha es:</p>
<pre><code>{  
    dato: ['c','c','c','f','r','f','f','f','f','f','r','f','r'],  
    pdato: [1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 1 , 1 , 1 ],    
    tipo: 1,  
    cantidad:[4,0]  
}
</code></pre>
<p>Donde "dato" recoge el contenido de las divisiones de la ficha:</p>
<ul>
<li>Las posiciones del array son, en orden: arriba-izquierda, arriba, arriba-derecha, derecha-arriba, derecha, derecha-abajo, abajo-derecha, abajo, abajo-izquierda, izquierda-abajo, izquerda, izquierda-arriba, centro.(de 0 a 12 en el array).</li>
<li>En cada posicion puede haber: c city(ciudad), r road(camino), f field(campo), m monastery(convento), x (cruce de caminos)</li>
</ul>
<p>"pdato" nos sirve para diferenciar los campos, ciudades y caminos en caso de haber más de uno. Establece un id para el elemento en la misma posición en el array "dato"</p>
<p>El "tipo" especifica el numero del sprite.</p>
<p>La variable "cantidad" dice cuantas hay sin escudo y con escudo, en total la suma de ambas posiciones del array.</p>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#seguidor" id="user-content-seguidor"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Seguidor</h2>
<p>Define los atributos del seguidor:</p>
<pre><code>var Seguidor = function(pos, idJug, numFicha){
    this.posSeguidor = pos;
    this.idJugador = idJug;
    this.numFicha = numFicha;
}
</code></pre>
<p>Guardamos la posición que ocupa dentro de la ficha, el tipo que tiene y el id del jugador que lo ha colocado</p>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#areas" id="user-content-areas"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Areas</h2>
<p>A continuación se detallan las estructuras de cada área.
Cuando se añade una ficha perteneciente a un área existente, se inserta el pdato (identificador único de la zona de esta ficha) en el array content del área existente
Cuando se fusionan áreas se unen las propiedades content, propietarios, seguidores, etc... de cada una, además de las especificas de cada área particular, dejando una única área con toda la información.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#campo" id="user-content-campo"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Campo</h3>
<pre><code>var Campo = function(idCampo){
    this.id = idCampo;
    this.content = []; //contiene los componentes de pdata de las fichas que lo forman
    this.propietarios = [];
    this.ciudadesIncluidas = [];
    this.seguidores = [];
    this.propSeguidores = [];
    this.isClosed = false;
    this.jugsConPuntos = [];
}
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#ciudad" id="user-content-ciudad"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Ciudad</h3>
<pre><code>var Ciudad = function(idCiudad,tieneEscudo){
    this.id = idCiudad;
    this.content = []; //contiene los componentes de pdata de las fichas que lo forman
    this.idFichas = [];
    this.isClosed = false;
    this.seguidores = [];
    this.propSeguidores = [];
    this.numEscudos = 0;
    if (tieneEscudo) this.numEscudos++;
    this.ladosLibres = 0;
    this.camposAdyacentes = [];
}
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#camino" id="user-content-camino"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Camino</h3>
<pre><code>var Camino = function(idCamino){
    this.id = idCamino;
    this.content = []; //contiene los componentes de pdato de las fichas que lo forman
    this.idFichas = [];
    this.ladosLibres = 0;
    this.isClosed = false;
    this.seguidores = []; 
    this.propSeguidores = [];
}
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#monasterio" id="user-content-monasterio"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Monasterio</h3>
<pre><code>var Monasterio = function(idMonasterio,pos){
    this.id = idMonasterio;
    this.isClosed = false;
    this.setPosAdyacentes(pos);
    this.seguidores = [];
    this.propSeguidores = [];
    this.numFichas = 1;
}
</code></pre>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#jugador" id="user-content-jugador"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Jugador</h2>
<pre><code>var Jugador = function(idJugador, nombreJugador){
    this.idJugador = idJugador;
    this.campos = [];
    this.ciudades = [];
    this.caminos = [];
    this.monasterios = [];
    this.puntos = 0;
    this.numSeguidores = 7;
    this.nombre = nombreJugador;
    this.ciudadesIncluidas = [];
}
</code></pre>
<p>En caso de que el jugador no sea humano, se crea un jugador máquina IAPlayer con la siguiente estructura:</p>
<pre><code> var IAPlayer = function(idIA){
     this.super = Jugador;
     this.super (idIA);
     this.finish = false;
 }
</code></pre>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#objeto-resumen" id="user-content-objeto-resumen"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Objeto Resumen</h2>
<p>Este objeto lo usamos para guardar la información que debemos enviar a IU:</p>
<pre><code>var ObjetoResumen = function(){
    this.arrayResumenJugs = [];
    this.idSiguienteJug;
    this.arraySeguidoresQuitar = [];
}
</code></pre>
<ul>
<li>idSiguienteJug corresponde al id del jugador que tiene el turno próximo.</li>
<li>arraySeguidoresQuitar tiene las posiciones de las fichas donde hay seguidores que quitar en este turno</li>
<li>arrayResumenJugs tiene la información de los jugadores de la partida en este turno. Se compone de objetos:  {nombre: ---, puntos: ---, numSeguidores: ---}</li>
</ul>
<hr/>
<h2>
<a aria-hidden="true" class="anchor" href="#objeto-resumen-ia" id="user-content-objeto-resumen-ia"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Objeto Resumen IA</h2>
<p>Este objeto lo usamos para guardar la información de los jugadores máquina:</p>
<pre><code>var ObjetoResumenIA = function(){
    this.fichaPuesta = [];
}
</code></pre>
<p>Este método hereda de objetoResumen, con lo que tiene sus mismos atributos, además de el de fichaPuesta. Este especifica la ficha que ha puesto la IA.</p>

        </div>

    </div>]