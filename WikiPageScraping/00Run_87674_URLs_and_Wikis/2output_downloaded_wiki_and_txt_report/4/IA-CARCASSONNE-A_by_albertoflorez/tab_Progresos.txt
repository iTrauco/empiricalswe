[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><strong>REUNIÓN GRUPO IA (13-nov-2014)</strong></p>
<p>Especificación de los elementos del juego.</p>
<p>Hemos estado diseñando una posible interfaz que sirva para controlar las fichas.
Necesitamos ponernos de acuerdo con IU a la hora de considerar las fichas.</p>
<p>Hemos definido los posibles tipos de piezas y se lo hemos enviado a IU.</p>
<p>Lo que les hemos enviado es un documento donde se definen todas las piezas además de decirles cuantas piezas hay de cada tipo.</p>
<p>Definición de una ficha del juego original:</p>
<p>Cada ficha consta de 6 propiedades Arriba 1, Izquierda 2, Abajo 3, Derecha 4, Cruce de caminos 5, Monasterio 6, Escudo 7.</p>
<p>Tipo 1 (3+1 ficha madre):</p>
<ul>
<li>1 Ciudad</li>
<li>2 Camino</li>
<li>3 Campo</li>
<li>4 Camino</li>
<li>5 no</li>
<li>6 no</li>
<li>7 ninguna</li>
</ul>
<p>Y así seguiríamos con cada una de las piezas (lo que está entre paréntesis es el número de piezas que hay de ese tipo)</p>
<p>Hemos estado pensando en la idea de un tablero. Aunque no sabemos cómo considerar las posiciones (IU suponemos que les interesa las posiciones en el canvas pero quizás nosotros podamos hacer una traslación a otro sistema de referencia más fácil).
Hemos estado hablando sobre cómo hacer el recuento de puntos y vemos necesario el ir controlando la unión de piezas para conocer la formación de zonas en el mapa (caminos, ciudades, campos, monasterios). Coincidimos en que eso será más adelante.
Hemos preparado una reunión con los demás grupos el día 19-NOV-2014.</p>
<hr/>
<p><strong>REUNIÓN CON IU Y PL (19-NOV-2014)</strong></p>
<p>En esta primera reunión hemos establecidos los límites lógicos entre grupos.</p>
<p>Hemos llegado al acuerdo de que nosotros debemos proporcionar una interfaz que puedan usar ambos grupos.
Dicha interfaz se encargará de las labores lógicas del juego:</p>
<ul>
<li>Herramienta para poder colocar fichas en el tablero del juego (no tablero visual).</li>
<li>Herramienta para tener control sobre las fichas que están en juego y las que han sido jugadas.</li>
<li>Herramienta para controlar los seguidores.</li>
<li>Herramienta para poder comenzar una partida a partir de datos iniciales (para PL).</li>
<li>Herramienta para poder devolver los datos de una partida (para PL).</li>
</ul>
<p>Hemos decidido al final que cada pieza se dividirá en 9 cuadrantes para poder diferenciarlas bien. Además ellos añadieron más atributos, aunque estos no nos servían a nosotros. Sólo son para poder definir el sprite.</p>
<p>Hemos llegado a un acuerdo de la interfaz de ficha para poder utilizar los mismos atributos.
Nuestro esquema les sirvió.</p>
<p>IU al inicio de la partida cargará las posibles piezas y serán accesibles para nuestra interfaz, a las que les pondremos los métodos necesarios para que nuestra interfaz sea llamada por cada ficha.</p>
<p>Hemos decidido que el trascurso del juego lo llevará el grupo de IU.
Tanto los jugadores reales como la máquina verán nuestro código como una interfaz.
La IA será un objeto jugador con sus propios métodos accesibles de la misma manera que cualquier objeto jugador.</p>
<p>Los turnos no es algo nuestro. El turno se define como una iteración del proceso de juego propio a cada jugador.
IU implementará alguna manera de respetar el turno y de implementar un tiempo de turno (pasado éste se pasa el turno).</p>
<p>Nosotros deberemos implementar un objeto tablero o algo similar que se actualice en cada turno, pero que sea independiente de cada turno.
Para el tablero hemos definido las posiciones con coordenadas y hemos decidido que el ancho de cada pieza será una unidad para que IU solo tenga que multiplicar por el ancho y alto a la escala deseada para pintarlo en el canvas. Es necesario que ellos al hablarnos de posiciones nos hablen con nuestro sistema de referencia para así nosotros no equivocarnos en la lógica (Indispensable para conocer las posibles posiciones de una pieza en el tablero).</p>
<p>No hemos hablado todavía de lo de incluir una IA si el jugador se va. Lo consideraremos más adelante, cuando hayamos avanzado.</p>
<hr/>
<p><strong>Resumen del proyecto a día 5 Diciembre</strong></p>
<p>Hemos decidido que el turno es nuestro. Vamos a modelar las partidas mediante objetos "partida" cuya especificación se encuentra en el apartado correspondiente.</p>
<p>El tablero estará compuesto por:</p>
<ul>
<li>un mazo de fichas no colocadas</li>
<li>las fichas colocadas</li>
<li>la ficha que está en juego actualmente
Esta es la que se puede girar y colocar. A esta ficha también se le va a poder asignar un seguidor.</li>
</ul>
<hr/>
<p><strong>Clase - día 9-dic-2014</strong></p>
<p>Redefinicion de ficha: Como consecuencia de hablar con IU y con Pedro en clase hemos llegado a la conclusión de que es necesario definir las fichas con 13 descriptores en vez de con 9 como se dijo con anterioridad, de forma que las esquinas se dividen en dos subceldas.</p>
<p>Debatimos sobre las funciones de colocar, girar... seguidor.</p>
<p>Comenzamos a pensar las estructuras de los objetos campo, camino, ciudad y monasterio para poder controlar los propietarios de esas zonas, como van aumentando, como se mezclan, etc... Más adelante nos serviremos de esto para contar los puntos de los jugadores.</p>
<hr/>
<p><strong>Clase - día 10-dic-2014</strong></p>
<p>Hablamos con Plataforma sobre cómo vamos a gestionar el inicio y el final de partida. Acordamos que se hará a través de APIs para no acceder a bases de datos ajenas.
Trabajamos sobre la colocación de la ficha y los seguidores en el tablero para conseguir un mínimo de jugabilidad.
Envolvemos con meteor los metodos para ir definiendo la interfaz de IU. Realizamos modificaciones diversas para corregir errores de planteamiento.
Completamos diversas áreas de la wiki.</p>
<hr/>
<p><strong>Avances día 15-dic-2014</strong></p>
<p>En base a lo hablado con IU hemos tomado ciertas decisiones con respecto a algunas tareas que teniamos en pivotaltracker. Hemos decidido que al menos por el momento la reactividad que permita que todos los jugadores vean la ficha actual girandose no nos pertenece y por tanto no debemos encargarnos de ello.
Por otro lado hemos revisado las fichas y las fichas que tienen escudo sólo tienen una ciudad, por tanto no necesitamos añadir nada a nuestra estructura de datos para saber en que ciudad se encuentra el escudo.</p>
<hr/>
<p><strong>Reunión 12 enero</strong></p>
<p>Nos hemos reunido con IU y PL para hablar de cómo va el desarrollo del juego y comenzar a solucionar problemas de integración.
Con PL hemos hablado de cómo devolver el estado final de la partida y puntuaciones y, debido a lo sencillo de su implementación, hemos acordado hablarlo más adelante.
Con IU hemos observado que aun les faltan cosas por hacer para poder integrarlo, por lo que aun no está definido del todo qué se necesita. Quieren que nosotros les llamemos para comenzar la partida y que notros mantengamos el control de puntos y seguidores.</p>
<hr/>
<p><strong>Reunión 14 enero</strong></p>
<p>Nos reunimos con Pedro para hablar de lo que nos falta. Hemos concluido que:</p>
<ul>
<li>PL nos llama para iniciar partida</li>
<li>Cuando iniciamos la partida llamamos a IU para que arranque</li>
<li>Al finalizar la partida llamamos a PL para darles info de puntos, etc.</li>
<li>También llamamos a IU para avisarles del fin de la partida.</li>
</ul>
<p>Necesitamos acordar con IU cómo avisarles cuando se quitan los seguidores, cuando darles los puntos a los jugadores, etc..., y sobre todo como hacer que el jugador IA les dé esa información.<br/>
No es urgente, pero hay que modificar la forma de contar ciudades y caminos si los caminos son circulares puesto que no siguen las reglas del juego.</p>
<pre><code>--- * * * WORK IN PROGRESS * * * ---
</code></pre>

        </div>

    </div>]