[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><code>Routing.js</code> also exposes some additional useful functions.</p>
<ul>
<li><a href="#user-content-refresh"><code>refresh</code></a></li>
<li><a href="#user-content-build"><code>build</code></a></li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#refresh" id="user-content-refresh"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>refresh</h3>
<p>Routing.js only calls the mapped handler functions (<em>i.e.</em>, the <a href="https://github.com/awj100/Routing.js/wiki/Getting-Started#the-before-method-and-execution-halting"><code>before</code></a>, <a href="https://github.com/awj100/Routing.js/wiki/Getting-Started#binding-routes"><code>to</code></a> and <a href="https://github.com/awj100/Routing.js/wiki/Getting-Started#the-leaving-method"><code>leaving</code></a> functions) if the client-side route changes. However, there may be occasions when the developer wishes to force these handler functions to be called.</p>
<p>In such case the mapped process may be invoked by calling</p>
<pre><code>Routing.refresh();
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#build" id="user-content-build"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>build</h3>
<p><code>build</code> returns the supplied route template populated with the supplied parameters. This can be useful when a URL is needed, perhaps for hyperlinks or perhaps in the JavaScript behind the webpage.</p>
<p>Consider the following example.</p>
<pre><code>var params = {
        userId: 123,
        page: 1
    },
    routeTemplate = "#!/user-details/:userId(:/page)";

    populatedRoute = Routing.build(routeTemplate, params); // #!/user-details/123/1
</code></pre>
<p><code>build</code> contains some options:</p>
<ul>
<li>
<p>The route template may be supplied with or without the leading hashbang and forward slash (<code>#!/</code>). The presence of this has no effect on the result.</p>
</li>
<li>
<p><code>build</code> accepts a third parameter, <code>includeHashbang</code>, which indicates whether the result should include the hashbang.<br/>
The default value is <code>true</code>.<br/>
The above example may be modified:</p>
<pre><code>var populatedRoute = Routing.build(routeTemplate, params, false); // user-details/123/1
</code></pre>
</li>
</ul>
<p>If the route template contains a segment which has no corresponding property in the <code>params</code> argument then one of two things can happen:</p>
<ul>
<li>If the segment represents a <strong>required</strong> parameter: the populated route will contain "undefined" for that missing segment.</li>
<li>If the segment represents an <strong>optional</strong> parameter: the segment will be omitted from the result.</li>
</ul>
<pre><code>var params = {},
    routeTemplate = "#!/user-details/:userId(:/page)"  

    populatedRoute = Routing.build(routeTemplate, params); // #!/user-details/undefined
</code></pre>
<p>In the above example,</p>
<ul>
<li>
<code>userId</code> was not supplied to a mandatory segment so was replaced with "undefined".</li>
<li>
<code>page</code> was not supplied to an optional segment so that segment was removed.</li>
</ul>

        </div>

    </div>]