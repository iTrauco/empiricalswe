[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#dbmocklibrarymockdatamanipulation" id="user-content-dbmocklibrarymockdatamanipulation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>DbMockLibrary\MockDataManipulation</h1>
<h1>
<a aria-hidden="true" class="anchor" href="#mockdatamanipulation-extends-datacontainer-class-and-is-therefore-singleton-as-well-its-the-main-database-mocking-class-it-provides-a-number-of-operations-to-be-performed-on-mock-data-that-simulate-actual-database-operationsusage-examples" id="user-content-mockdatamanipulation-extends-datacontainer-class-and-is-therefore-singleton-as-well-its-the-main-database-mocking-class-it-provides-a-number-of-operations-to-be-performed-on-mock-data-that-simulate-actual-database-operationsusage-examples"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>MockDataManipulation extends <a href="https://github.com/ajant/DbMockLibrary/wiki/DataContainer">DataContainer</a> class and is therefore singleton as well. It's the main database mocking class. It provides a number of operations to be performed on mock data, that simulate actual database operations.
Usage examples</h1>
<h2>
<a aria-hidden="true" class="anchor" href="#for-additional-help-look-at-the-tests-additional-input-scenarios-are-testeddeleterowcollection-array-ids" id="user-content-for-additional-help-look-at-the-tests-additional-input-scenarios-are-testeddeleterowcollection-array-ids"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>For additional help, look at the tests, additional input scenarios are tested.
deleteRow($collection, array $ids)</h2>
<p>Deletes one or more rows, indicated by $ids array, from the collection. If any of the rows is missing, exception is thrown.</p>
<pre><code>// dummy data before ['collection' =&gt; ['id1' =&gt; [1],'id2' =&gt; [2]]]
MockDataManipulation::deleteRow('collection', ['id1', 'id2']);
// dummy data after ['collection' =&gt; []]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#dropcollectionsarray-collections--" id="user-content-dropcollectionsarray-collections--"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>dropCollections(array $collections = [])</h2>
<p>Drops one or moe collections. If any if the collections is missing, exception is thrown.</p>
<pre><code>['collection1' =&gt; ['id1' =&gt; [1]], 'collection2' =&gt; ['id3' =&gt; [1]]]
MockDataManipulation::dropCollections(['collection1', 'collection2']);
// dummy data after []
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#getallidsarray-collections---bycollection--false" id="user-content-getallidsarray-collections---bycollection--false"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>getAllIds(array $collections = [], $byCollection = false)</h2>
<p>Retrieves the list of all rows' ids.</p>
<pre><code>// dummy data: ['collection1' =&gt; ['id1' =&gt; [1], 'id2' =&gt; [2]], 'collection2' =&gt; ['id3' =&gt; [1]]]
MockDataManipulation::getAllIds(['collection1', 'collection2']); // ['id1', 'id2', 'id3']
MockDataManipulation::getAllIds(['collection1'], true); // ['collection1' =&gt; ['id1', 'id2']]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#getcollectionelementscollection-id--false" id="user-content-getcollectionelementscollection-id--false"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>getCollectionElements($collection, $id = false)</h2>
<p>Fetches dummy data by collection and optionally by row inside the collection. If collection or row id do not exist, exception is thrown.</p>
<pre><code>// dummy data: ['collection' =&gt; ['id1' =&gt; [1], 'id2' =&gt; [2]]]
MockDataManipulation::getCollectionElements('collection1') // ['id' =&gt; [1], 'id2' =&gt; [2]]
MockDataManipulation::getCollectionElements('collection1', 'id1') // [1]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#revertcollectionsarray-collections--" id="user-content-revertcollectionsarray-collections--"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>revertCollections(array $collections = [])</h2>
<p>Reverts one or more collections to the initial state (state they were in upon initialization of the class). If the collection was not present at the initialization time, but was added later, it is dropped. If one of the collection does not exist and didn't exist in initial data, exception is thrown.</p>
<pre><code>// initial dummy data: ['collection1' =&gt; ['id1' =&gt; [1]]]
// dummy data: ['collection1' =&gt; ['id1' =&gt; [2], 'id2' =&gt; [2]], 'collection2' =&gt; ['id1' =&gt; [1]]]
MockDataManipulation::revertCollections(['collection1', 'collection2'])
// dummy data: ['collection1' =&gt; ['id1' =&gt; [1]]]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#savecollectionvalue-collection" id="user-content-savecollectionvalue-collection"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>saveCollection($value, $collection)</h2>
<p>Adds new, or overwrites existing collection to the dummy data. Value must be two-dimensional array, or the exception is thrown.</p>
<pre><code>// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']]]
MockDataManipulation::saveCollection(['fooBar' =&gt; ['fooBar' =&gt; 'fooBar']], 'collection');
// dummy data: ['collection' =&gt; ['fooBar' =&gt; ['fooBar' =&gt; 'fooBar']]]

// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']]]
MockDataManipulation::saveCollection(['fooBar' =&gt; ['fooBar' =&gt; 'fooBar']], 'fooBar');
// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']], 'fooBar' =&gt; ['fooBar' =&gt; ['fooBar' =&gt; 'fooBar']]]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#savedatavalue-collection---id---field--" id="user-content-savedatavalue-collection---id---field--"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>saveData($value, $collection = '', $id = '', $field = '')</h2>
<p>Changes content of the dummy data, by adding or editing collection, row or field. Value has to be in appropriate format, depending the value of input parameters.</p>
<pre><code>// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']]]
MockDataManipulation::saveData(['fooBar' =&gt; ['fooBar' =&gt; ['fooBar' =&gt; 'fooBar']]]);
// dummy data: ['fooBar' =&gt; ['fooBar' =&gt; ['fooBar' =&gt; 'fooBar']]]

// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']]]
MockDataManipulation::saveData('fooBar', 'collection', 'id', 'fooBar');
// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value', 'fooBar' =&gt; 'fooBar']]]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#savefieldvalue-collection-id-field" id="user-content-savefieldvalue-collection-id-field"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>saveField($value, $collection, $id, $field)</h2>
<p>Adds or alters field in the dummy data. If collection, or row do not exist, exception is thrown.</p>
<pre><code>// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']]]
MockDataManipulation::saveField('fooBar', 'collection', 'id' 'field');
// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'fooBar']]]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#saverowvalue-collection-id" id="user-content-saverowvalue-collection-id"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>saveRow($value, $collection, $id)</h2>
<p>Adds or alters row of dummy data. If collection does not exist, exception is thrown.</p>
<pre><code>// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']]]
MockDataManipulation::saveRow(['fooBar' =&gt; 'fooBar'], 'collection', 'id');
// dummy data: ['collection' =&gt; ['id' =&gt; ['fooBar' =&gt; 'fooBar']]]
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#truncatecollections" id="user-content-truncatecollections"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>truncateCollections</h2>
<p>Empties one or more cllections. If collection doesn't exist, exception is thrown.</p>
<pre><code>// dummy data: ['collection' =&gt; ['id' =&gt; ['field' =&gt; 'value']]]
MockDataManipulation::truncateCollections(['collections');
// dummy data: ['collection' =&gt; []]
</code></pre>

        </div>

    </div>]