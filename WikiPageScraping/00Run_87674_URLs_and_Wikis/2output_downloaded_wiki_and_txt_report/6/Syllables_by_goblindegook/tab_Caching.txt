[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#fragment-caching" id="user-content-fragment-caching"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Fragment caching</h2>
<p>Fragment caching stores and reuses previously rendered HTML snippets that are expensive to generate.  Simply wrap the example structure below around your existing code to cache its output and speed things up a bit.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#usage" id="user-content-usage"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Usage</h3>
<h4>
<a aria-hidden="true" class="anchor" href="#cache-an-object-method-call" id="user-content-cache-an-object-method-call"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cache an object method call</h4>
<p>The <code>cache()</code> method will cache the output of any <code>callable</code> object you pass it.  For example, here's how to cache the output of an object instance method:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$fragment</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Syllables\Cache\</span><span class="pl-c1">Fragment</span>( <span class="pl-s"><span class="pl-pds">'</span>unique-key<span class="pl-pds">'</span></span>, <span class="pl-c1">3600</span> );</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> The method $object-&gt;method() should output a result, otherwise</span></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> nothing will be cached.</span></span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-smi">$fragment</span><span class="pl-k">-&gt;</span>cache( <span class="pl-c1">array</span>( <span class="pl-smi">$object</span>, <span class="pl-s"><span class="pl-pds">'</span>method<span class="pl-pds">'</span></span> ) );</span></pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#cache-a-closure" id="user-content-cache-a-closure"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cache a closure</h4>
<p>Starting in version 5.3, PHP also handles closures. Being <code>callable</code> objects, they're fully supported by the <code>cache()</code> method:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$fragment</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Syllables\Cache\</span><span class="pl-c1">Fragment</span>( <span class="pl-s"><span class="pl-pds">'</span>unique-key<span class="pl-pds">'</span></span>, <span class="pl-c1">3600</span> );</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-smi">$fragment</span><span class="pl-k">-&gt;</span>cache( <span class="pl-k">function</span> () {</span>
<span class="pl-s1">    <span class="pl-c"><span class="pl-c">//</span> Your code goes here. It should output a result, otherwise</span></span>
<span class="pl-s1">    <span class="pl-c"><span class="pl-c">//</span> nothing will be cached.</span></span>
<span class="pl-s1">} );</span></pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#cache-a-closure-with-variables-from-the-parent-scope" id="user-content-cache-a-closure-with-variables-from-the-parent-scope"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cache a closure with variables from the parent scope</h4>
<p>You can access variables from the parent scope by declaring them via the <code>use</code> keyword:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$fragment</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Syllables\Cache\</span><span class="pl-c1">Fragment</span>( <span class="pl-s"><span class="pl-pds">'</span>unique-key<span class="pl-pds">'</span></span>, <span class="pl-c1">3600</span> );</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-smi">$variable</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">'</span><span class="pl-pds">'</span></span>;</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-smi">$fragment</span><span class="pl-k">-&gt;</span>cache( <span class="pl-k">function</span> () <span class="pl-k">use</span> ( <span class="pl-k">&amp;</span><span class="pl-smi">$variable</span> ) {</span>
<span class="pl-s1">    <span class="pl-c"><span class="pl-c">//</span> Your code that references $variable goes here. It should</span></span>
<span class="pl-s1">    <span class="pl-c"><span class="pl-c">//</span> output a result, otherwise nothing will be cached.</span></span>
<span class="pl-s1">} );</span></pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#flush-the-fragment-cache" id="user-content-flush-the-fragment-cache"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Flush the fragment cache</h4>
<p>The <code>flush()</code> method will clear the cache for a particular key.</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$fragment</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Syllables\Cache\</span><span class="pl-c1">Fragment</span>( <span class="pl-s"><span class="pl-pds">'</span>unique-key<span class="pl-pds">'</span></span> );</span>
<span class="pl-s1"><span class="pl-smi">$fragment</span><span class="pl-k">-&gt;</span>flush();</span></pre></div>

        </div>

    </div>]