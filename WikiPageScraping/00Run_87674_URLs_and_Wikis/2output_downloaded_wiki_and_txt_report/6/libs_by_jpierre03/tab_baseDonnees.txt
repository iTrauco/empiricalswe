[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#base-de-donn%C3%A9es" id="user-content-base-de-données"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Base de données</h1>
<h1>
<a aria-hidden="true" class="anchor" href="#foxpro---postgresql" id="user-content-foxpro---postgresql"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>FoxPro -&gt; PostgreSQL</h1>
<ul>
<li>Import de fichier .dbf dans postgresql.</li>
</ul>
<p>Les fichier .dbf contiennent de simples tables.
Cette méthode ne s'applique pas à la conversion de base fox pro gérant les relations.</p>
<pre lang="{.bash}"><code>	find . -type f -name "*.dbf" -exec \
		bash -c 'pgdbf "{}" \
			| iconv -c -f UTF-8 -t UTF-8 \
			|psql -d &lt;user&gt;' \;
</code></pre>
<h1>
<a aria-hidden="true" class="anchor" href="#postgresql" id="user-content-postgresql"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>PostgreSQL</h1>
<ul>
<li><a href="http://cheat.errtheblog.com/s/postgresql/" rel="nofollow">http://cheat.errtheblog.com/s/postgresql/</a></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#peupler-des-tables" id="user-content-peupler-des-tables"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Peupler des tables</h2>
<ul>
<li>Peupler une table rapidement avec des données aléatoires :</li>
</ul>
<pre lang="{.sql}"><code>INSERT INTO Log(level, message)
SELECT 'level2' as level, md5(random()::text) AS descr
	FROM (SELECT * FROM generate_series(1,10*1000*1000) AS id) AS x;
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#cr%C3%A9ation-de-base" id="user-content-création-de-base"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Création de base</h2>
<ul>
<li>
<p>Create the filesystem</p>
<pre lang="{.bash}"><code> $ export PGROOT="/var/lib/postgres"
 $ mkdir -p $PGROOT/data &amp;&amp; chown postgres.postgres $PGROOT/data
 $ su - postgres -c "/usr/bin/initdb -D $PGROOT/data"
</code></pre>
</li>
<li>
<p>Make it UTF8 by default</p>
<pre lang="{.bash}"><code> $ su - postgres -c "/usr/bin/initdb -E utf8 --locale=en_US.UTF-8 $PGROOT/data"
</code></pre>
</li>
<li>
<p>Create Databases</p>
<pre lang="{.bash}"><code> createdb -O owner -T some_template database_name
</code></pre>
<ul>
<li>By default, PostgreSQL listens on TCP port 5432.</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#export-de-base" id="user-content-export-de-base"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Export de base</h2>
<ul>
<li>
<p>Dump all databases</p>
<pre lang="{.bash}"><code> pg_dumpall --clean &gt; databases.sql
</code></pre>
</li>
<li>
<p>Dump a database with compression (-Fc)</p>
<pre lang="{.bash}"><code> pg_dump -Fc --file=database.sql --clean database
</code></pre>
</li>
<li>
<p>Dump a table</p>
<pre lang="{.bash}"><code> pg_dump [-d database] [--schema schema] -t table
</code></pre>
</li>
<li>
<p>Dump a table definition (no data)</p>
<pre lang="{.bash}"><code> pg_dump -s [-d database] [--schema schema] -t table
</code></pre>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#restauration-de-base" id="user-content-restauration-de-base"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Restauration de base</h2>
<ul>
<li>
<p>Restore a database from a dump file</p>
<pre lang="{.bash}"><code> pg_dump -Ft [-h host] [-p port] [-U username[  [--schema=schema] -F c -b -v -f 	&lt;path_to_dump_file&gt; &lt;db_name&gt;
</code></pre>
<ul>
<li>-p, –port=PORT database server port number</li>
<li>-i, –ignore-version proceed even when server version mismatches</li>
<li>-h, –host=HOSTNAME database server host or socket directory</li>
<li>-U, –username=NAME connect as specified database user</li>
<li>-W, –password force password prompt (should happen automatically)</li>
<li>-d, –dbname=NAME connect to database name</li>
<li>-v, –verbose verbose mode</li>
<li>-F, –format=c|t|p output file format (custom, tar, plain text)</li>
<li>-c, –clean clean (drop) schema prior to create</li>
<li>-b, –blobs include large objects in dump</li>
<li>-v, –verbose verbose mode</li>
<li>-f, –file=FILENAME output file name</li>
</ul>
</li>
<li>
<p>Restore a database</p>
<pre lang="{.bash}"><code> pg_restore -Fc database.sql
 pg_restore [-h host] [-p port] [-U user] [--schema=schema] -d database -v -c &lt;path_to_dump_file&gt;
</code></pre>
<ul>
<li>-p, --port=PORT database server port number</li>
<li>-i, --ignore-version proceed even when server version mismatches</li>
<li>-h, --host=HOSTNAME database server host or socket directory</li>
<li>-U, --username=NAME connect as specified database user</li>
<li>-W, --password force password prompt (should happen automatically)</li>
<li>-d, --dbname=NAME connect to database name</li>
<li>-v, --verbose verbose mode</li>
<li>-c, --clean Clean (drop) database objects before recreating them</li>
</ul>
</li>
<li>
<p>Reset password of postgres user</p>
<pre lang="{.bash}"><code> # su postgres
 # psql -d template1
 template1=# ALTER USER postgres WITH PASSWORD '${POSTGRESQL_POSTGRES_PASSWORD}';
</code></pre>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#psql" id="user-content-psql"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>psql</h2>
<ul>
<li>Psql - show a list of databases
<ul>
<li>=&gt; \l</li>
<li>Lowercase L, not the number 1</li>
</ul>
</li>
<li>Psql - show all users
<ul>
<li>=&gt; select * from pg_user;</li>
</ul>
</li>
<li>Psql - show all tables (including system tables)
<ul>
<li>=&gt; <code>select * from pg_tables;</code>{.sql}</li>
</ul>
</li>
<li>Psql - show tables in the current context (database/schema)
<ul>
<li>=&gt; \d</li>
</ul>
</li>
<li>Psql - change current database
<ul>
<li>=&gt; \c database;</li>
</ul>
</li>
<li>Psql - show all schemas in the current database
<ul>
<li>=&gt; \dn</li>
</ul>
</li>
<li>Psql - Grant permissions on a schema to a user
<ul>
<li>=&gt; <code>GRANT ALL ON myschema TO user;</code>{.sql}</li>
</ul>
</li>
<li>Psql - quit psql
<ul>
<li>=&gt; \q</li>
</ul>
</li>
<li>Psql - show help
<ul>
<li>=&gt; \?</li>
</ul>
</li>
<li>Psql - copy a table to a tab delimeted file
<ul>
<li>=&gt; <code>COPY table TO 'table.txt';</code>{.sql}</li>
</ul>
</li>
<li>Psql - load a table from a tab delimeted file
<ul>
<li>=&gt; <code>COPY table FROM 'table.txt';</code>{.sql}</li>
</ul>
</li>
<li>Psql - show permissions on database objects
<ul>
<li>=&gt; \z [object]</li>
<li>r -- <code>SELECT</code>{.sql} ("read")</li>
<li>w -- <code>UPDATE</code>{.sql} ("write")</li>
<li>a -- <code>INSERT</code>{.sql} ("append")</li>
<li>d -- <code>DELETE</code>{.sql}</li>
<li>R -- <code>RULE</code>{.sql}</li>
<li>x -- <code>REFERENCES</code>{.sql} (foreign keys)</li>
<li>t -- <code>TRIGGER</code>{.sql}</li>
<li>X -- <code>EXECUTE</code>{.sql}</li>
<li>U -- <code>USAGE</code>{.sql}</li>
<li>C -- <code>CREATE</code>{.sql}</li>
<li>T -- <code>TEMPORARY</code>{.sql}</li>
<li>arwdRxt -- <code>ALL PRIVILEGES</code>{.sql} (for tables)</li>
<li>-- grant option for preceding privilege</li>
<li>/yyyy -- user who granted this privilege</li>
</ul>
</li>
<li>Run the vacuum utility
<ul>
<li>=&gt; <code>vacuumdb --verbose --analyze --all</code>{.bash}</li>
<li>Note:
<ul>
<li>vacuum reclaims space from deleted records and updates indexes.</li>
<li>It should be set up in cron.</li>
<li>Newer versions of postgresql may run vacuum automatically.</li>
<li>Increase perfomance with shared memory</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#postgresql-examples" id="user-content-postgresql-examples"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>PostgreSQL Examples</h2>
<ul>
<li>
<p>Adding new user called BRIAN:</p>
<pre lang="{.bash}"><code> $ sudo su - postgres
 $ createuser --createdb --username postgres --no-createrole \\
  		--pwprompt BRIAN
 	Enter password for new role:
 	Enter it again:
 	Shall the new role be a superuser? (y/n) n
 $ exit
</code></pre>
</li>
<li>
<p>ALTER TABLE</p>
<ul>
<li>Add a unique constraint to the email column in the customer table</li>
</ul>
<pre lang="{.sql}"><code> ALTER TABLE customer ADD CONSTRAINT customer_email_key UNIQUE (email);
</code></pre>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#postgresql-snippet" id="user-content-postgresql-snippet"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>PostgreSQL-Snippet</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#cr%C3%A9er-un-utilisateur-et-lui-donner-les-droits-sur-une-db" id="user-content-créer-un-utilisateur-et-lui-donner-les-droits-sur-une-db"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Créer un utilisateur et lui donner les droits sur une DB</h3>
<pre lang="{.bash}"><code>su - postgres
</code></pre>
<pre lang="{.sql}"><code>CREATE USER tom WITH PASSWORD 'myPassword';
CREATE DATABASE jerry;
GRANT ALL PRIVILEGES ON DATABASE jerry to tom;
\q
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#changer-le-propri%C3%A9taire-dune-base" id="user-content-changer-le-propriétaire-dune-base"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Changer le propriétaire d'une base</h3>
<pre lang="{.sql}"><code>ALTER TABLE climate.measurement OWNER TO postgres;
</code></pre>
<h1>
<a aria-hidden="true" class="anchor" href="#sqlite" id="user-content-sqlite"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Sqlite</h1>
<h2>
<a aria-hidden="true" class="anchor" href="#sqlite--firefox" id="user-content-sqlite--firefox"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>sqlite &amp; firefox</h2>
<ul>
<li>
<p>Extraire les URL's de la bdd de firefox</p>
<pre lang="{.bash}"><code> sqlite3 places.sqlite "SELECT * FROM moz_places" \
 		| awk -F '|' '{print "\033[4m" $1 "\033[m) " $2}'
</code></pre>
<p>le fichier en question peut se trouver à :</p>
<pre lang="{.bash}"><code> $HOME/.mozilla/firefox/&lt;??&gt;.default
</code></pre>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#exemple-de-script" id="user-content-exemple-de-script"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Exemple de script</h2>
<p>Script qui crée une base <code>dbname.db</code>, avec une table <code>data</code>, qui insère plusieurs lignes de données.
Et qui affiche des données à partir d'une requête.</p>
<pre lang="{.bash}"><code>	#!/bin/bash

	# Defining my databse first table
	STRUCTURE="CREATE TABLE data (id INTEGER PRIMARY KEY,name TEXT,value TEXT);";

	# Creating an Empty db file and filling it with my structure
	cat /dev/null &gt; dbname.db
	echo $STRUCTURE &gt; /tmp/tmpstructure
	sqlite3 dbname.db &lt; /tmp/tmpstructure;
	rm -f /tmp/tmpstructure;

	# Inserting some data into my structure
	sqlite3 dbname.db "INSERT INTO data (name,value) VALUES ('MyName','MyValue')";
	sqlite3 dbname.db "INSERT INTO data (name,value) VALUES
	('MyOtherName','MyOtherValue')";

	# Getting my data
	LIST=`sqlite3 dbname.db "SELECT * FROM data WHERE 1"`;

	# For each row
	for ROW in $LIST; do
		# Parsing data (sqlite3 returns a pipe separated string)
		Id=`echo $ROW | awk '{split($0,a,"|"); print a[1]}'`
		Name=`echo $ROW | awk '{split($0,a,"|"); print a[2]}'`
		Value=`echo $ROW | awk '{split($0,a,"|"); print a[3]}'`

		# Printing my data
		echo -e "\e[4m$Id\e[m) "$Name" -&gt; "$Value;
	done
</code></pre>

        </div>

    </div>]