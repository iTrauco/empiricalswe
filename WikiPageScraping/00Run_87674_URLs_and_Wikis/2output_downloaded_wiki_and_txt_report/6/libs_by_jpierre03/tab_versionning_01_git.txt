[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#git" id="user-content-git"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Git</h1>
<h2>
<a aria-hidden="true" class="anchor" href="#notes-perso" id="user-content-notes-perso"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes perso</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#commit" id="user-content-commit"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Commit</h3>
<ul>
<li>
<p>envoyer un mail avec un diff coloré (html)</p>
<ul>
<li>[<a href="http://blog.chomperstomp.com/making-git-show-post-receive-e-mails-as-an-html-color-formatted-diff/" rel="nofollow">http://blog.chomperstomp.com/making-git-show-post-receive-e-mails-as-an-html-color-formatted-diff/</a>]</li>
<li>[<a href="https://github.com/kenshaw/githooks">https://github.com/kenshaw/githooks</a>]</li>
</ul>
</li>
<li>
<p>commit dans GIT d'un ensemble de fichier/dossiers du même niveau</p>
</li>
</ul>
<pre lang="{.bash}"><code>for i in *; do git add "$i"; git commit "$i" -m "ajout fichier"; done
</code></pre>
<ul>
<li>git changer le nom d'auteur d'une liste de commits - V1</li>
</ul>
<pre lang="{.bash}"><code>git filter-branch -f --env-filter "GIT_AUTHOR_NAME='&lt;name&gt;'; GIT_AUTHOR_EMAIL='&lt;mail&gt;'; GIT_COMMITER_NAME='&lt;name&gt;'; GIT_COMMITTER_EMAIL='&lt;mail&gt;';" HEAD
</code></pre>
<ul>
<li>git changer le nom d'auteur d'une liste de commits - V2  — NON TESTÉ</li>
</ul>
<pre lang="{.bash}"><code>#!/bin/sh

AUTHOR="&lt;name&gt;"
AUTHOR_EMAIL="&lt;mail&gt;"**

COMMITER_NAME="&lt;name&gt;"
COMMITTER_EMAIL="&lt;mail&gt;"
COMMIT="HEAD"

git filter-branch -f --env-filter "GIT_AUTHOR_NAME='${AUTHOR}'; GIT_AUTHOR_EMAIL='${AUTHOR_EMAIL}'; GIT_COMMITER_NAME='${COMMITER_NAME}'; GIT_COMMITTER_EMAIL='${COMMITTER_EMAIL}';" ${COMMIT}
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#suppression-du-fichier-dans-tout-lhistorique" id="user-content-suppression-du-fichier-dans-tout-lhistorique"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Suppression du fichier dans tout l'historique</h3>
<pre lang="{.bash}"><code>git filter-branch --index-filter 'git rm --cached --ignore-unmatch B_ANCIEN/DUT2A/STAGE_DUT_TOUT.tar' HEAD
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#notes-r%C3%A9cup%C3%A9r%C3%A9es-en-ligne---git-snippet" id="user-content-notes-récupérées-en-ligne---git-snippet"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes récupérées en ligne - Git-Snippet</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#setup" id="user-content-setup"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Setup</h3>
<ul>
<li>
<p>clone the repository specified by <code>&lt;repo&gt;</code>; this is similar to <code>"checkout"</code> in some other version control systems such as Subversion and CVS</p>
<pre lang="{.bash}"><code> git clone &lt;repo&gt;
</code></pre>
</li>
<li>
<p>Add colors to your <code>~/.gitconfig</code> file:</p>
<pre><code>    [color]
      ui = auto
    [color "branch"]
      current = yellow reverse
      local = yellow
      remote = green
    [color "diff"]
      meta = yellow bold
      frag = magenta bold
      old = red bold
      new = green bold
    [color "status"]
      added = yellow
      changed = green
      untracked = cyan
</code></pre>
</li>
<li>
<p>Highlight whitespace in diffs</p>
<pre><code>    [color]
      ui = true
    [color "diff"]
      whitespace = red reverse
    [core]
      whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
</code></pre>
</li>
<li>
<p>Add aliases to your <code>~/.gitconfig</code> file:</p>
<pre><code>    [alias]
      st = status
      ci = commit
      br = branch
      co = checkout
      df = diff
      dc = diff --cached
      lg = log -p
      lol = log --graph --decorate --pretty=oneline --abbrev-commit
      lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
      ls = ls-files

      # Show files ignored by git:
      ign = ls-files -o -i --exclude-standard
</code></pre>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#reverting" id="user-content-reverting"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Reverting</h3>
<ul>
<li>
<p>reverse commit specified by <code>&lt;rev&gt;</code> and commit the result.
This does <em>not</em> do the same thing as similarly named commands in other VCS's such as <code>"svn revert »</code> or <code>"bzr revert"</code>, see below</p>
<pre lang="{.bash}"><code> git revert &lt;rev&gt;
</code></pre>
</li>
<li>
<p>re-checkout <code>&lt;file&gt;</code>, overwriting any local changes</p>
<pre lang="{.bash}"><code> git checkout &lt;file&gt;
</code></pre>
</li>
<li>
<p>re-checkout all files, overwriting any local changes.
This is most similar to <code>"svn revert"</code> if you're used to Subversion commands</p>
<pre lang="{.bash}"><code> git checkout .
</code></pre>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#fix-mistakes--undo" id="user-content-fix-mistakes--undo"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Fix mistakes / Undo</h3>
<ul>
<li>
<p>abandon everything since your last commit; this command can be DANGEROUS.
If merging has resulted in conflicts and you'd like to just forget about the merge, this command will do that.</p>
<pre lang="{.bash}"><code> git reset --hard
</code></pre>
</li>
<li>
<p>undo your most recent <em>successful</em> merge <em>and</em> any changes that occurred after.
Useful for forgetting about the merge you just did.
If there are conflicts (the merge was not successful), use <code>"git reset --hard"</code> (above) instead.</p>
<pre lang="{.bash}"><code> git reset --hard ORIG_HEAD or git reset --hard origin/master 
</code></pre>
</li>
<li>
<p>forgot something in your last commit ? That's easy to fix.
Undo your last commit, but keep the changes in the staging area for editing.</p>
<pre lang="{.bash}"><code> git reset --soft HEAD^
</code></pre>
</li>
<li>
<p>redo previous commit, including changes you've staged in the meantime.
Also used to edit commit message of previous commit.</p>
<pre lang="{.bash}"><code> git commit --amend
</code></pre>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#stashing" id="user-content-stashing"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Stashing</h3>
<ul>
<li>
<p>save your local modifications to a new stash (so you can for example <code>"git svn rebase"</code> or <code>"git pull"</code>)</p>
<pre lang="{.bash}"><code> git stash
 git stash save &lt;optional-name&gt;
</code></pre>
</li>
<li>
<p>restore the changes recorded in the stash on top of the current working tree state</p>
<pre lang="{.bash}"><code> git stash apply
</code></pre>
</li>
<li>
<p>restore the changes from the most recent stash, and remove it from the stack of stashed changes</p>
<pre lang="{.bash}"><code> git stash pop
</code></pre>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#remotes" id="user-content-remotes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Remotes</h3>
<ul>
<li>
<p>prune deleted remote-tracking branches from "git branch -r" listing</p>
<pre lang="{.bash}"><code> git remote prune &lt;remote&gt;
</code></pre>
</li>
<li>
<p>add a remote and track its master</p>
<pre lang="{.bash}"><code> git remote add -t master -m master origin git://example.com/git.git/
</code></pre>
</li>
<li>
<p>show information about the remote server.</p>
<pre lang="{.bash}"><code> git remote show &lt;remote&gt;
</code></pre>
</li>
<li>
<p>Track a remote branch as a local branch.</p>
<pre lang="{.bash}"><code> git checkout -b &lt;local branch&gt; &lt;remote&gt;/&lt;remote branch&gt;
</code></pre>
</li>
</ul>
<p>Example:</p>
<pre lang="{.bash}"><code>git checkout -b myfeature origin/myfeature 
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#submodules" id="user-content-submodules"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Submodules</h3>
<ul>
<li>
<p>add the given repository at the given path.
The addition will be part of the next commit.</p>
<pre lang="{.bash}"><code> git submodule add &lt;remote_repository&gt; &lt;path/to/submodule&gt;
</code></pre>
</li>
<li>
<p>Update the registered submodules (clone missing submodules, and checkout the commit specified by the super-repo). <code>—init</code> is needed the first time.</p>
<pre lang="{.bash}"><code> git submodule update [--init]
</code></pre>
</li>
<li>
<p>Executes the given command within each checked out submodule.</p>
<pre lang="{.bash}"><code> git submodule foreach &lt;command&gt;
</code></pre>
</li>
</ul>
<h4>
<a aria-hidden="true" class="anchor" href="#removing-submodules" id="user-content-removing-submodules"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Removing submodules</h4>
<ol>
<li>delete the relevant line from the <code>.gitmodules</code> file.</li>
<li>delete the relevant section from <code>.git/config</code>.</li>
<li>run <code>git rm --cached path_to_submodule</code> (no trailing slash).</li>
<li>commit and delete the now untracked submodule files.</li>
</ol>
<h4>
<a aria-hidden="true" class="anchor" href="#updating-submodules" id="user-content-updating-submodules"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Updating submodules</h4>
<p>To update a submodule to a new commit:</p>
<ol>
<li>
<p>update submodule:</p>
<pre lang="{.bash}"><code>cd &lt;path to submodule&gt;
git pull
</code></pre>
</li>
<li>
<p>commit the new version of submodule:</p>
<pre lang="{.bash}"><code>cd &lt;path to toplevel&gt;
git commit -m "update submodule version"
</code></pre>
</li>
<li>
<p>check that the submodule has the correct version</p>
<pre lang="{.bash}"><code>git submodule status
</code></pre>
</li>
</ol>
<p>If the update in the submodule is not committed in the main repository, it is lost and doing git submodule update will revert to the previous version.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#archive" id="user-content-archive"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Archive</h3>
<ul>
<li>
<p>Will export expanded tree as tar archive at given path</p>
<pre lang="{.bash}"><code> git archive master | tar -x -C /somewhere/else
</code></pre>
</li>
<li>
<p>Will export archive as bz2</p>
<pre lang="{.bash}"><code> git archive master | bzip2 &gt; source-tree.tar.bz2
</code></pre>
</li>
<li>
<p>Will export as zip</p>
<pre lang="{.bash}"><code> git archive --format zip --output /full/path master
</code></pre>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#git-instaweb" id="user-content-git-instaweb"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Git Instaweb</h3>
<ul>
<li>
<p>gestion</p>
<pre lang="{.bash}"><code> git instaweb --httpd=webrick [--start | --stop | --restart]
</code></pre>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#environment-variables" id="user-content-environment-variables"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Environment Variables</h3>
<ul>
<li>
<p>Your full name to be recorded in any newly created commits.
Overrides user.name in <code>.git/config</code></p>
<pre><code>  GIT_AUTHOR_NAME, GIT_COMMITTER_NAME
</code></pre>
</li>
<li>
<p>Your email address to be recorded in any newly created commits.
Overrides user.email in <code>.git/config</code></p>
<pre><code>  GIT_AUTHOR_EMAIL, GIT_COMMITTER_EMAIL
</code></pre>
</li>
<li>
<p>Location of the repository to use (for out of working directory repositories)</p>
<pre><code>  GIT_DIR
</code></pre>
</li>
<li>
<p>Location of the Working Directory - use with GIT_DIR to specifiy the working directory root or to work without being in the working directory at all.</p>
<pre><code>  GIT_WORKING_TREE
</code></pre>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#changing-history" id="user-content-changing-history"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Changing history</h3>
<h4>
<a aria-hidden="true" class="anchor" href="#change-author-for-all-commits-with-given-name" id="user-content-change-author-for-all-commits-with-given-name"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Change author for all commits with given name</h4>
<pre lang="{.bash}"><code>git filter-branch --commit-filter '
	if [ "$GIT_COMMITTER_NAME" = "&lt;Old Name&gt;" ];
	then
		GIT_COMMITTER_NAME="&lt;New Name&gt;";
		GIT_AUTHOR_NAME="&lt;New Name&gt;";
		GIT_COMMITTER_EMAIL="&lt;New Email&gt;";
		GIT_AUTHOR_EMAIL="&lt;New Email&gt;";
		git commit-tree "$@";
	else
		git commit-tree "$@";
	fi' HEAD
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#ignore-changes-on-tracked-files" id="user-content-ignore-changes-on-tracked-files"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Ignore changes on tracked files</h3>
<pre lang="{.bash}"><code>git update-index --assume-unchanged
</code></pre>

        </div>

    </div>]