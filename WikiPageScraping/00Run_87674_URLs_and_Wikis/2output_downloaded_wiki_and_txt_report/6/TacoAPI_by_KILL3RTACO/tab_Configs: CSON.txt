[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>I only realized the power CoffeeScript and CSON after I started using <a href="//atom.io" rel="nofollow">the Atom editor</a>.</p>
<p>#What is CSON?
CSON stands for CoffeeScript Object Notation. It's a simplified version of JSON inspired by YAML.</p>
<p>#Does TacoAPI have a CSON parser?
Yes. It supports the normal features that CSON boasts:</p>
<ul>
<li>Comments (line and block)</li>
<li>Block strings</li>
<li>Optional commas (but commas can still be used to define multiple key/value pairs or values on one line.</li>
</ul>
<p>As well as some other things I decided to add:</p>
<ul>
<li>Keylists (keys separated by commas before the value definition, this may be part of CSON normally but I am unsure)</li>
<li>Variables</li>
<li>Extending keys if they already exist</li>
</ul>
<h1>
<a aria-hidden="true" class="anchor" href="#keylists" id="user-content-keylists"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Keylists</h1>
<p>A value can be attached to multiple keys. When this happens, each key is assigned that value.</p>
<p>CSON:</p>
<div class="highlight highlight-source-coffee"><pre><span class="pl-s"><span class="pl-pds">'</span>i like<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>she likes<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>he likes<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>cookies<span class="pl-pds">'</span></span></pre></div>
<p>JSON:</p>
<div class="highlight highlight-source-json"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>i like<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>cookies<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>she likes<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>cookies<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>he likes<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>cookies<span class="pl-pds">"</span></span>
}</pre></div>
<h1>
<a aria-hidden="true" class="anchor" href="#variables" id="user-content-variables"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Variables</h1>
<p>Variables are defined in a top level object with the name '$_'. Every key in that object is a variable, and an be accessed when a value is a string that matches a variable name preceded by a '$'.</p>
<p>CSON:</p>
<div class="highlight highlight-source-coffee"><pre><span class="pl-s"><span class="pl-pds">'</span>$_<span class="pl-pds">'</span></span><span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">'</span>myString<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>this is my awesome string<span class="pl-pds">'</span></span>
  <span class="pl-s"><span class="pl-pds">'</span>myObject<span class="pl-pds">'</span></span><span class="pl-k">:</span>
    <span class="pl-s"><span class="pl-pds">'</span>likes<span class="pl-pds">'</span></span><span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">'</span>cookies<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>games<span class="pl-pds">'</span></span>]
    <span class="pl-s"><span class="pl-pds">'</span>dislikes<span class="pl-pds">'</span></span><span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">'</span>school<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>reading<span class="pl-pds">'</span></span>]
<span class="pl-s"><span class="pl-pds">'</span>string<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>$myString<span class="pl-pds">'</span></span>
<span class="pl-s"><span class="pl-pds">'</span>object<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>$myObject<span class="pl-pds">'</span></span></pre></div>
<p>JSON:</p>
<div class="highlight highlight-source-json"><pre><span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>this is my awesome string<span class="pl-pds">"</span></span>,
<span class="pl-s"><span class="pl-pds">"</span>object<span class="pl-pds">"</span></span>: 
  <span class="pl-s"><span class="pl-pds">"</span>likes<span class="pl-pds">"</span></span>: [<span class="pl-s"><span class="pl-pds">"</span>cookies<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>games<span class="pl-pds">"</span></span>],
  <span class="pl-s"><span class="pl-pds">"</span>dislikes<span class="pl-pds">"</span></span>: [<span class="pl-s"><span class="pl-pds">"</span>school<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>reading<span class="pl-pds">"</span></span>]</pre></div>
<h1>
<a aria-hidden="true" class="anchor" href="#extension" id="user-content-extension"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Extension</h1>
<p>When a key already exists, the parsed will attempted to be added to that key.</p>
<p>CSON:</p>
<div class="highlight highlight-source-coffee"><pre><span class="pl-s"><span class="pl-pds">'</span>replace me<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-c1">true</span>
<span class="pl-s"><span class="pl-pds">'</span>replace me<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-c1">false</span>
<span class="pl-s"><span class="pl-pds">'</span>add to me<span class="pl-pds">'</span></span><span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">'</span>bleep<span class="pl-pds">'</span></span>]
<span class="pl-s"><span class="pl-pds">'</span>dont extend me<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>extend me<span class="pl-pds">'</span></span><span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">'</span>rawr<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>&lt;3<span class="pl-pds">'</span></span>
<span class="pl-s"><span class="pl-pds">'</span>extend me<span class="pl-pds">'</span></span><span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">'</span>dinos<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>have tiny arms<span class="pl-pds">'</span></span>
<span class="pl-s"><span class="pl-pds">'</span>add to me<span class="pl-pds">'</span></span><span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">'</span>bloop<span class="pl-pds">'</span></span>]</pre></div>
<p>JSON:</p>
<div class="highlight highlight-source-json"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>replace me<span class="pl-pds">"</span></span>: <span class="pl-c1">false</span>,
  <span class="pl-s"><span class="pl-pds">"</span>add to me<span class="pl-pds">"</span></span>: [<span class="pl-s"><span class="pl-pds">"</span>bleep<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bloop<span class="pl-pds">"</span></span>],
  <span class="pl-s"><span class="pl-pds">"</span>dont extend me<span class="pl-pds">"</span></span>: {
    <span class="pl-s"><span class="pl-pds">"</span>rawr<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>&lt;3<span class="pl-pds">"</span></span>
  },
  <span class="pl-s"><span class="pl-pds">"</span>extend me<span class="pl-pds">"</span></span>: {
    <span class="pl-s"><span class="pl-pds">"</span>rawr<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>&lt;3<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>dinos<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>have tiny arms<span class="pl-pds">"</span></span>
  }
}</pre></div>
<p>#Comments
When the parser comes across a comment, the line(s) are ignored. Line comments are lines that start with '#' while block are started (and ended) with '###'.</p>
<p>CSON:</p>
<div class="highlight highlight-source-coffee"><pre><span class="pl-c"><span class="pl-c">#</span>This is a comment</span>
<span class="pl-c"><span class="pl-c">###</span> This is the start of a block comment</span>
<span class="pl-c">woo</span>
<span class="pl-c">yipee</span>
<span class="pl-c">this is the end of a block comment</span>
<span class="pl-c"><span class="pl-c">###</span></span></pre></div>
<p>#Block strings
Block strings in CSON allow you to create really long strings. They are started with triple quotes (either ''' or """)</p>
<p>CSON:</p>
<pre lang="cofeee"><code>'string': '''
This is my awesome string. I don't need to escape any sort of quoting character.

Blank lines are treated as if they weren't there.
Thanks for all the fish
'''
</code></pre>
<p>JSON:</p>
<div class="highlight highlight-source-json"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>This is my awesome string. I don't need to escape any sort of quoting character. Blank lines are treated as if they weren't there. Thanks for all the fish<span class="pl-pds">"</span></span>
}</pre></div>

        </div>

    </div>]