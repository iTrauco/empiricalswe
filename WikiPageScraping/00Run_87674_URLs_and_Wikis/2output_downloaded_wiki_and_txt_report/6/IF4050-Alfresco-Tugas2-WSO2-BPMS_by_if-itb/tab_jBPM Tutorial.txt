[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#a-what-is-jbpm" id="user-content-a-what-is-jbpm"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>A. What is jBPM?</h2>
<p>jBPM is a flexible Business Process Management (BPM) Suite. It is light-weight, fully open-source (distributed under Apache license) and written in Java. It allows you to model, execute, and monitor business processes throughout their life cycle.</p>
<p><img alt="" data-canonical-src="http://docs.jboss.org/jbpm/v6.0/userguide/images/Chapter-1-Overview/Process.png" src="https://camo.githubusercontent.com/d48cbb9b949a18858abff84f98f67c42e4d18271/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e302f7573657267756964652f696d616765732f436861707465722d312d4f766572766965772f50726f636573732e706e67"/></p>
<p>Figure 1. Evaluation process example</p>
<p>A business process allows you to model your business goals by describing the steps that need to be executed to achieve those goals, and the order of those goals are depicted using a flow chart. This process greatly improves the visibility and agility of your business logic. jBPM focuses on executable business processes, which are business processes that contain enough detail so they can actually be executed on a BPM engine. Executable business processes bridge the gap between business users and developers as they are higher-level and use domain-specific concepts that are understood by business users but can also be executed directly.</p>
<p><img alt="overview" data-canonical-src="http://docs.jboss.org/jbpm/v6.0/userguide/images/Chapter-1-Overview/Overview.png" src="https://camo.githubusercontent.com/9bb8d50438a07c0968d4a1f46865d5397bc900a5/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e302f7573657267756964652f696d616765732f436861707465722d312d4f766572766965772f4f766572766965772e706e67"/>
Figure 2. Overview</p>
<p>This figure gives an overview of the different components of the jBPM project.</p>
<p>a. The core engine is the heart of the project and allows you to execute business processes in a flexible manner. It is a pure Java component that you can choose to embed as part of your application or deploy it as a service and connect to it through the web-based UI or remote APIs.</p>
<p>• An optional core service is the human task service that will take care of the human task life cycle if human actors participate in the process.</p>
<p>• Another optional core service is runtime persistence; this will persist the state of all your process instances and log audit information about everything that is happening at runtime.</p>
<p>• Applications can connect to the core engine by through it's Java API or as a set of CDI services, but also remotely through a REST and JMS API.</p>
<p>b. Web-based tools allows you to model, simulate and deploy your processes and other related artifacts (like data models, forms, rules, etc.):</p>
<p>• The process designer allows business users to design and simulate business processes in a web-based environment.</p>
<p>• The data modeler allows non-technical users to view, modify and create data models for use in your processes.
• A web-based form modeler also allows you to create, generate or edit forms related to your processes (to start the process or to complete one of the user tasks).</p>
<p>• Rule authoring allows you to specify different types of business rules (decision tables, guided rules, etc.) for combination with your processes.</p>
<p>• All assets are stored and managed on the Guvnor repository (exposed through GIT) and can be managed (versioning), built and deployed.</p>
<p>c. The web-based management console allows business users to manage their runtime (manage business processes like start new processes, inspect running instances, etc.), to manage their task list and to perform Business Activity Monitoring (BAM) and see reports.</p>
<p>d. The Eclipse-based developer tools are an extension to the Eclipse IDE, targeted towards developers, and allows you to create business processes using drag and drop, test and debug your processes, etc.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#b-installation" id="user-content-b-installation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>B. Installation</h2>
<p>a. Prerequisites</p>
<p>This script assumes you have Java JDK 1.6+ (set as JAVA_HOME), and Ant 1.7+ installed. If you don't, use the following links to download and install them:
Java: <a href="http://java.sun.com/javase/downloads/index.jsp" rel="nofollow">http://java.sun.com/javase/downloads/index.jsp</a>
Ant: <a href="http://ant.apache.org/bindownload.cgi" rel="nofollow">http://ant.apache.org/bindownload.cgi</a></p>
<p>b. Downloading the Installer</p>
<p>First of all, you need to download the installer here: <a href="https://sourceforge.net/projects/jbpm/files/jBPM%206/" rel="nofollow">https://sourceforge.net/projects/jbpm/files/jBPM%206/</a>
and unzip it to your local file system. There are two versions:</p>
<p>• full installer - which already contains a lot of the dependencies that are necessary during the installation</p>
<p>• minimal installer - which only contains the installer and will download all dependencies</p>
<p>In general, it is probably best to download the full installer: jBPM-{version}-installer-full.zip. You can also find the latest snapshot release here (only minimal installer) here:
<a href="https://hudson.jboss.org/jenkins/job/jBPM/lastSuccessfulBuild/artifact/jbpm-distribution/target/" rel="nofollow">https://hudson.jboss.org/jenkins/job/jBPM/lastSuccessfulBuild/artifact/jbpm-distribution/target/</a></p>
<p>c. jBPM Eclispe Plugin</p>
<p>The jBPM installer is capable of downloading and installing an Eclipse installation, including the Drools and jBPM Eclipse plugin (with a full jBPM runtime preconfigured) and the Eclipse BPMN2 Modeler. You can however also download and install the jBPM Eclipse Plugin manually. To do so, you need to:</p>
<p>1.Download Eclipse (Kepler recommended, but older versions like Indigo or Juno should also still work)</p>
<p>2.Start Eclipse</p>
<p>3.Select "Install New Software ..." from the Help menu. Add the Drools and jBPM update site
<a href="http://downloads.jboss.org/jbpm/release/6.0.0.Final/updatesite/" rel="nofollow">http://downloads.jboss.org/jbpm/release/6.0.0.Final/updatesite/</a> . You should see the plugins as shown below. Note that you can also download and unzip the Drools and jBPM update site to your local file system and use that as local update site instead.</p>
<p><img alt="" data-canonical-src="http://docs.jboss.org/jbpm/v6.0/userguide/images/EclipseJBPM/UpdateSite.png" src="https://camo.githubusercontent.com/ea24551c1010ca7ff39272eadc6c6fc110bae594/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e302f7573657267756964652f696d616765732f45636c697073654a42504d2f557064617465536974652e706e67"/>
Figure 3. Plugin Installation Screenshot</p>
<p>4.Select the JBoss jBPM Core and JBoss Drools Core plugins and click "Next &gt;". Click "Next &gt;"</p>
<p>5.Again after reviewing your selecting, accept the terms of the license agreement and click "Finish" to download and install the plugins. If you get a warning about installing software that contains unsigned content, click OK.</p>
<p>6.After successful installation, Eclipse should ask you to restart, click Yes.</p>
<p>7.The plugin should now be installed. To check, check if you can for example see the new jBPM Project wizard: under the "File" menu, select "New Project ..." and there you should be able to see "New jBPM Project" under the jBPM category.</p>
<p>8.Register a jBPM runtime to get started, see the section on jBPM runtimes for more information.</p>
<p>d. jBPM Runtimes</p>
<p>A jBPM runtime is a collection of jar files that represent one specific release of the jBPM project jars. You are required to specify a default jBPM runtime for your Eclipse workspace, but each individual project can override the default and select the appropriate runtime for that project specifically.</p>
<p>To define one or more jBPM runtimes using the Eclipse preferences view you open up your Preferences, by selecting the "Preferences" menu item in the menu "Window". A "Preferences" dialog should show all your settings. On the left side of this dialog, under the jBPM category, select "Installed jBPM runtimes". The panel on the right should then show the currently defined jBPM runtimes. For example, if you used the jBPM Installer, it should look like the figure below.</p>
<p><img alt="" data-canonical-src="http://docs.jboss.org/jbpm/v6.0/userguide/images/EclipseJBPM/PreferencesRuntimes.png" src="https://camo.githubusercontent.com/49783d0d0dac07934ecb524bbe43809aa9edc7be/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e302f7573657267756964652f696d616765732f45636c697073654a42504d2f507265666572656e63657352756e74696d65732e706e67"/>
Figure 4. Add jPBM Runtime</p>
<p>To define a new jBPM runtime, click on the "Add" button. A dialog such as the one shown below should pop up, asking for the name of your runtime and the location on your file system where it can be found. The location of the runtime can be found in jBPM installer package:</p>
<p>../jbpm-installer/lib/jbpm-6.1.0.Final-bin.zip (extract this zip and point the location to this folder)</p>
<p>Now, we are ready to create our jBPM Project!</p>
<h2>
<a aria-hidden="true" class="anchor" href="#c-tutorial-create-a-new-simple-jbpm-project" id="user-content-c-tutorial-create-a-new-simple-jbpm-project"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>C. Tutorial: Create a New Simple jBPM Project</h2>
<p>a. The aim of the new project wizard is to set up an executable sample project to start using processes immediately. This will set up a basic structure, the classpath, sample process and a test case to get you started. To create a new jBPM project, in the "File" menu select "New" and then "Project ..." and under the jBPM category, select "jBPM Project". A dialog as shown below should pop up.</p>
<p><img alt="" data-canonical-src="http://docs.jboss.org/jbpm/v6.0/userguide/images/EclipseJBPM/WizardProject.png" src="https://camo.githubusercontent.com/e0e43eb274355d2bb2444129eedc9aee02ba9c53/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e302f7573657267756964652f696d616765732f45636c697073654a42504d2f57697a61726450726f6a6563742e706e67"/>
Figure 5. jBPM Project Wizard 1</p>
<p>b. Fill in a name for your project and if necessary change the location where this project should be located (by default Eclipse will generate it inside your Eclipse workspace folder) and click "Next &gt;".</p>
<p>c. Now you can optionally include a sample process in your project to get started. You can select to either use a simple "Hello World" process, a slightly more advanced process including human tasks and persistence or simply an empty project. You can also select to include a JUnit test class that you can use to test your process. These can serve as a starting point, and will give you something executable almost immediately, which you can then modify to your needs.</p>
<p><img alt="" data-canonical-src="http://docs.jboss.org/jbpm/v6.0/userguide/images/EclipseJBPM/WizardProject2.png" src="https://camo.githubusercontent.com/354d4c6b2874c89715b0f587170a6505cbd0ad4f/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e302f7573657267756964652f696d616765732f45636c697073654a42504d2f57697a61726450726f6a656374322e706e67"/>
Figure 6. jBPM Project Wizard 2</p>
<p>d. Finally, the last page in the wizard allows you select a jBPM runtime, as shown below. You can either use the default runtime (as configured for you workspace, in your workspace preferences), or you can select a specific runtime for this project.</p>
<p>e. You can also select which version of jBPM you want to generate sample code for.</p>
<p>f. When you selected the simple 'hello world' example, the result is shown below. Feel free to experiment with the plug-in at this point.</p>
<p><img alt="" data-canonical-src="http://docs.jboss.org/jbpm/v6.0/userguide/images/EclipseJBPM/WizardProjectStructure.png" src="https://camo.githubusercontent.com/dde87af6ceb640da4effc011a2a239b0c6f7849b/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e302f7573657267756964652f696d616765732f45636c697073654a42504d2f57697a61726450726f6a6563745374727563747572652e706e67"/>
Figure 7. New jBPM Project Artifacts</p>
<p>Reference: <a href="http://docs.jboss.org/jbpm/v6.0/userguide/" rel="nofollow">http://docs.jboss.org/jbpm/v6.0/userguide/</a></p>

        </div>

    </div>]