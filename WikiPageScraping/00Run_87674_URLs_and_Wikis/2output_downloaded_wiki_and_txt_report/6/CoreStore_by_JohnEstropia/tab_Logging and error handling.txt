[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>One unfortunate thing when using some third-party libraries is that they usually pollute the console with their own logging mechanisms. CoreStore provides its own default logging class, but you can plug-in your own favorite logger by implementing the <code>CoreStoreLogger</code> protocol.</p>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">final</span> <span class="pl-k">class</span> <span class="pl-en">MyLogger</span>: <span class="pl-e">CoreStoreLogger </span>{
    <span class="pl-k">func</span> <span class="pl-en">log</span>(#<span class="pl-smi"><span class="pl-en">level</span></span>: LogLevel, <span class="pl-smi"><span class="pl-en">message</span></span>: <span class="pl-c1">String</span>, <span class="pl-smi"><span class="pl-en">fileName</span></span>: <span class="pl-c1">StaticString</span>, <span class="pl-smi"><span class="pl-en">lineNumber</span></span>: <span class="pl-c1">Int</span>, <span class="pl-smi"><span class="pl-en">functionName</span></span>: <span class="pl-c1">StaticString</span>) {
        <span class="pl-c"><span class="pl-c">//</span> pass to your logger</span>
<span class="pl-c"></span>    }
    
    <span class="pl-k">func</span> <span class="pl-en">handleError</span>(#<span class="pl-smi"><span class="pl-en">error</span></span>: NSError, <span class="pl-smi"><span class="pl-en">message</span></span>: <span class="pl-c1">String</span>, <span class="pl-smi"><span class="pl-en">fileName</span></span>: <span class="pl-c1">StaticString</span>, <span class="pl-smi"><span class="pl-en">lineNumber</span></span>: <span class="pl-c1">Int</span>, <span class="pl-smi"><span class="pl-en">functionName</span></span>: <span class="pl-c1">StaticString</span>) {
        <span class="pl-c"><span class="pl-c">//</span> pass to your logger</span>
<span class="pl-c"></span>    }
    
    <span class="pl-k">func</span> <span class="pl-en">assert</span>(@<span class="pl-en">autoclosure</span> <span class="pl-smi">condition</span>: () <span class="pl-k">-&gt;</span> <span class="pl-c1">Bool</span>, <span class="pl-smi"><span class="pl-en">message</span></span>: <span class="pl-c1">String</span>, <span class="pl-smi"><span class="pl-en">fileName</span></span>: <span class="pl-c1">StaticString</span>, <span class="pl-smi"><span class="pl-en">lineNumber</span></span>: <span class="pl-c1">Int</span>, <span class="pl-smi"><span class="pl-en">functionName</span></span>: <span class="pl-c1">StaticString</span>) {
        <span class="pl-c"><span class="pl-c">//</span> pass to your logger</span>
<span class="pl-c"></span>    }
}</pre></div>
<p>Then pass an instance of this class to <code>CoreStore</code>:</p>
<div class="highlight highlight-source-swift"><pre>CoreStore.<span class="pl-smi">logger</span> <span class="pl-k">=</span> <span class="pl-c1">MyLogger</span>()</pre></div>
<p>Doing so channels all logging calls to your logger.</p>
<p>Note that to keep the call stack information intact, all calls to these methods are <strong>NOT</strong> thread-managed. Therefore you have to make sure that your logger is thread-safe or you may otherwise have to dispatch your logging implementation to a serial queue.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#contents" id="user-content-contents"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Contents</h2>
<ul>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/TL%3BDR-%28a.k.a.-sample-codes%29">TL;DR (a.k.a. sample codes)</a></li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Architecture">Architecture</a></li>
<li>CoreStore Tutorials
<ul>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Setting-up">Setting up</a></li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Migrations">Migrations</a></li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Saving-and-processing-transactions">Saving and processing transactions</a></li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Fetching-and-querying">Fetching and querying</a></li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Logging-and-error-handling">Logging and error handling</a></li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Observing-changes-and-notifications">Observing changes and notifications</a></li>
</ul>
</li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Installation">Installation</a></li>
<li><a class="internal present" href="/JohnEstropia/CoreStore/wiki/Changesets">Changesets</a></li>
</ul>

        </div>

    </div>]