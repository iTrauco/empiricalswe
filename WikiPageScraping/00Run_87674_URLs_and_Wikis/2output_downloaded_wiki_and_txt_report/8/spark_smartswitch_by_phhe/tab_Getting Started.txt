[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h3>
<a aria-hidden="true" class="anchor" href="#whats-in-the-box" id="user-content-whats-in-the-box"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>What's in the box</h3>
<p>Congratulations on being the owner of a brand new Spark Core! Go ahead, open the box, and let's talk about what you see. Your box should include:</p>
<ul>
<li>
<em>One Spark Core</em>. The reason you bought this thing. We'll dig in more here in a bit.</li>
<li>
<em>One breadboard</em>. A breadboard makes it easy to wire components to the Core without solder. Internally, the rows are electrically connected horizontally, and the "rails" along the edges are connected vertically. See the <a href="http://en.wikipedia.org/wiki/Breadboard" rel="nofollow">breadboard article on Wikipedia</a> for more information.</li>
<li>
<em>One USB cable</em>. The included USB cable is used for two things: powering the Spark Core (by connecting it to your computer, to a USB power brick, or to a USB battery pack) and reprogramming. In the long run, reprogramming the Core will generally be done wirelessly, but we have not yet implemented this functionality, so reprogramming must be done over USB.</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#first-steps" id="user-content-first-steps"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>First steps</h3>
<h4>
<a aria-hidden="true" class="anchor" href="#step-1-set-up-a-simple-led-circuit" id="user-content-step-1-set-up-a-simple-led-circuit"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 1: Set up a simple LED circuit</h4>
<p>Wire up an LED and a resistor between pin D0 and GND per the following diagram.  Make sure the short leg of the LED, the cathode, on the flattened/cut side of the LED, is pointing toward the GND pin.</p>
<p><img alt="Spark Core, resistor, and LED on a breadboard" data-canonical-src="https://s3.amazonaws.com/spark-assets/spark-blinky_bb.png" src="https://camo.githubusercontent.com/66f76cfe3f4ee104e6701c16e07a7dcf749396e1/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f737061726b2d6173736574732f737061726b2d626c696e6b795f62622e706e67"/></p>
<h4>
<a aria-hidden="true" class="anchor" href="#step-2-connect-your-spark-core-to-the-internet" id="user-content-step-2-connect-your-spark-core-to-the-internet"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 2: Connect your Spark Core to the internet</h4>
<p>The Spark Core comes with software pre-installed that will connect the Core to the internet over your home Wi-Fi network and, once it's connected, let you control the Digital pins using the Spark Cloud API.</p>
<ul>
<li>Power your Core with a Micro USB cable to any USB charger or your computer.</li>
<li>Quickly click the BTN on the Core once to put it in Smart Config mode.  After a brief delay, two LEDs will rapidly flash slightly out of phase with each other.</li>
<li>If you have an iOS device, install the free "TI WiFi SMARTCONFIG" app from the iTunes store:
<a href="https://itunes.apple.com/us/app/ti-wifi-smartconfig/id580969322?mt=8" rel="nofollow">https://itunes.apple.com/us/app/ti-wifi-smartconfig/id580969322?mt=8</a>
(More info below if you don't have an iOS device.)</li>
<li>Open the app, enter your Wi-Fi network password and the key sparkdevices2013 â€” also make sure to check that circular "checkbox" (checkcircle?) to the right of the key.  Leave the device name the default CC3000.  Watch:
<ul>
<li>LED2 off means the Core got the credentials and is trying them.</li>
<li>LED2 back on solid should coincide with an alert on your phone that the Core is connected to Wi-Fi.</li>
<li>When LED1 stops blinking and stays on, your Core is connected to the Spark Cloud.</li>
</ul>
</li>
</ul>
<p>The Android app isn't in the Google Play store yet, but you can download the APK here: <a href="http://www.ti.com/tool/smartconfig" rel="nofollow">http://www.ti.com/tool/smartconfig</a></p>
<p>TI also recently released a Java applet to for use on a PC.  Download it at that same link.</p>
<p>Unfortunately TI packages these downloads as .exe files in order to ensure you agree to a license.  If, like me, you're an Android user with a Mac laptop, you'll need a friend with Windows to pop open the .exe for you.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#step-3-make-an-api-call" id="user-content-step-3-make-an-api-call"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 3: Make an API call</h4>
<p>Turn on the LED from the interwebz!!! Open up a terminal window and run this <a href="http://curl.haxx.se/" rel="nofollow">curl</a> command, replacing "elroy" with your device's ID.</p>
<pre><code>curl https://api.sprk.io/v1/devices/elroy -d pin=D0 -d level=HIGH
</code></pre>
<p>Feel the power.  Change the level to LOW when you're ready to turn the LED back off.</p>
<p>If you get a certificate error "curl: (60) SSL certificate problem: unable to get local issuer certificate" you might need to go with a -k to turn off curl's certificate verification</p>
<p>Want to toggle a lot of I/O fast? Try these web apps:</p>
<ol>
<li><a href="http://sparkcore.herokuapp.com/" rel="nofollow">http://sparkcore.herokuapp.com/</a></li>
<li><a href="http://zacharycrockett.com/spark-pin-twiddler.html" rel="nofollow">http://zacharycrockett.com/spark-pin-twiddler.html</a></li>
</ol>
<p>Check out the full API documentation:
<a href="http://docs.sparkdevices.com/" rel="nofollow">http://docs.sparkdevices.com/</a></p>

        </div>

    </div>]