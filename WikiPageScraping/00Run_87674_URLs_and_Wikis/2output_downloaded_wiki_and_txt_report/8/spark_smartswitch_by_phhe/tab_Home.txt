[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#smartswitch" id="user-content-smartswitch"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>SmartSwitch</h1>
<p>The SmartSwitch is a input device for (local) network components realized with a <a href="https://www.spark.io/" rel="nofollow">Spark.io Core </a> application.</p>
<p>The figure below illustrates the basic concept. The SmartSwitch is connected to the local area network (LAN) through 802.11 wireless LAN (WLAN). It can control devices on the local network such as SONOS speakers or bascially every connected device that can be controlled by HTTP requests. In addition it is possible to connect to <a href="http://ifttt.com" rel="nofollow">IFTTT</a> a popular internet automation platform (Configuration of IFTTT see: <a class="internal present" href="/phhe/spark_smartswitch/wiki/IFTTT">IFTTT Setup</a>). This enables the SmartSwitch to trigger a wide range of actions on the internet or even on internet connected devices in your home. It is also possible to make the SmarSwitch to react on events sent to/by IFTTT, eg. new Tweet, Post, E-Mail, Events on social media channels or the weather by switching LEDs on and off or (SmartSwitch mobile only) changing colors.</p>
<p><img alt="smartswitch control flow" src="wiki/images/control.png"/></p>
<h2>
<a aria-hidden="true" class="anchor" href="#hardware" id="user-content-hardware"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Hardware</h2>
<p>We created two hardware versions. The SmartSwitch MOBILE, which comes in a custom made laser cut case with four soft buttons and RGB LEDs. The SmartSwitch WALL is basically a modification of a GIRA System 55 compatible actuator usually used in KNX/EIB based home automation installations.</p>
<p><img alt="smartswitch hardware" src="wiki/images/hardware.png"/>
<img alt="smartswitch control flow" src="wiki/images/smartswitch_images.png"/></p>
<h3>
<a aria-hidden="true" class="anchor" href="#components" id="user-content-components"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Components</h3>
<ul>
<li>1 × <a href="https://www.spark.io/" rel="nofollow">Spark.io Core </a>
<ul>
<li><a href="https://docs.spark.io" rel="nofollow">Documentation</a></li>
</ul>
</li>
<li>1 × <a href="http://www.microchip.com/wwwproducts/Devices.aspx?product=MCP23017" rel="nofollow">MCP23017 I2C I/0 Expander</a>
<ul>
<li><a href="http://ww1.microchip.com/downloads/en/DeviceDoc/21952b.pdf" rel="nofollow">Datasheet</a></li>
</ul>
</li>
<li>2 × 4,7K Ohm Resistor
<ul>
<li>I2C Pullup on Spark</li>
</ul>
</li>
<li>For the SmartSwitch with the Button Pad
<ul>
<li>1 ×	<a href="https://www.sparkfun.com/products/7836" rel="nofollow">Button Pad Silicon Rubber</a>
</li>
<li>4 ×	WS2812B LEDs
<ul>
<li>[Datasheet] (<a href="http://www.adafruit.com/datasheets/WS2812B.pdf" rel="nofollow">http://www.adafruit.com/datasheets/WS2812B.pdf</a>)</li>
</ul>
</li>
</ul>
</li>
<li>Gira Buttons
<ul>
<li><a href="http://katalog.gira.de/de_DE/datenblatt.html?id=571789" rel="nofollow">GIRA Buttons Panel</a></li>
<li>6 ×	3K Ohm Resistor
<ul>
<li>for the LEDs</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#functionality" id="user-content-functionality"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Functionality</h2>
<p>Four button events are implemented for now: Single click, Double click, Hold click and Hold.</p>
<p>Hold fires the event continously if the button is hold down longer than a defined threshold. Hold click in contrast only fires the event once if button is hold down for a defined threshold.</p>
<p>The LEDs can be controlled by the <a href="http://docs.spark.io/api/" rel="nofollow">Spark.IO Cloud API</a>:</p>
<ul>
<li>
<p>WS2812B LEDs:</p>
<pre><code>  curl https://api.spark.io/v1/devices/&lt;device_id&gt;/ledrgb -d access_token=&lt;access_token&gt; -d "args=&lt;LEDNumber&gt;,&lt;RED Value&gt;,&lt;GREEN Value&gt;,&lt;BLUE Value&gt;"
  
  curl https://api.spark.io/v1/devices/&lt;device_id&gt;/ledrgball -d access_token=&lt;access_token&gt; -d "args=&lt;LED1_Red&gt;,&lt;LED1_Green&gt;,&lt;LED1_Blue&gt;,&lt;LED2_Red&gt;,&lt;LED2_Green&gt;,&lt;LED2_Blue&gt;,&lt;LED3_Red&gt;,&lt;LED3_Green&gt;,&lt;LED3_Blue&gt;,&lt;LED4_Red&gt;,&lt;LED4_Green&gt;,&lt;LED4_Blue&gt;"
</code></pre>
</li>
<li>
<p>normal LEDs:</p>
<pre><code>  curl https://api.spark.io/v1/devices/&lt;device_id&gt;/led -d access_token=&lt;access_token&gt; -d "args=&lt;LEDNumber&gt;,&lt;HIGH or LOW&gt;"
</code></pre>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#software-modules" id="user-content-software-modules"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Software modules</h2>
<p>Initial there are modules for the following network devices:</p>
<ul>
<li>SONOS
<ul>
<li>Mute Control</li>
<li>Volume Control</li>
</ul>
</li>
<li>RaspberryPi/local Webserver
<ul>
<li>send Request to server</li>
<li>read Request from server</li>
</ul>
</li>
</ul>
<p>In progress:</p>
<ul>
<li>Philips Hue (already possible through IFTTT, planned as local client)
<ul>
<li>On/Off</li>
<li>Dimm</li>
</ul>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#create-own-module" id="user-content-create-own-module"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Create own Module</h3>
<p>It is possible to create a own clients implementation for a local network device. For connecting a own client to the Buttons see <a class="internal present" href="/phhe/spark_smartswitch/wiki/Configuration">Configuration</a>.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#configuration" id="user-content-configuration"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Configuration</h2>
<p>The configuration of the SmartSwitch is done right within the firmware. Settings are made in a JSON based configuration file which is compiled into C code when the make command is called. The compiled firmware and new configuration can be uploaded to the SmartSwitch through the spark cloud over the air or via USB. For details on how to configure your SmartSwitch see <a class="internal present" href="/phhe/spark_smartswitch/wiki/Configuration">Configuration</a>.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#smartswitch-pcb-and-case" id="user-content-smartswitch-pcb-and-case"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>SmartSwitch PCB and Case</h1>
<p>Eagle Files for the PCB and svg files for the case are available at <a href="https://github.com/Trekky12/SmartSwitchPCB">https://github.com/Trekky12/SmartSwitchPCB</a>
<img alt="" src="https://raw.githubusercontent.com/Trekky12/SmartSwitchPCB/master/SmartSwitch.png"/></p>

        </div>

    </div>]