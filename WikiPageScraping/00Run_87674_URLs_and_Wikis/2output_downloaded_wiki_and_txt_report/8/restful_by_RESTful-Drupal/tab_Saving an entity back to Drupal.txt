[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Following is some sample jQuery code which illustrates the simplest use case for saving entity data back to Drupal.</p>
<div class="highlight highlight-source-js"><pre><span class="pl-smi">jQuery</span>.<span class="pl-en">ajax</span>({
    url<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>http://mydrupalsite.com/api/v1.0/entity-endpoint-name<span class="pl-pds">"</span></span>,
    type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>POST<span class="pl-pds">"</span></span>,
    headers<span class="pl-k">:</span> {
        <span class="pl-s"><span class="pl-pds">"</span>Content-Type<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>application/json<span class="pl-pds">"</span></span>,
    },
    contentType<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>application/json<span class="pl-pds">"</span></span>,
    data<span class="pl-k">:</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>({
        <span class="pl-s"><span class="pl-pds">"</span>property_one<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>5<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">"</span>property_two<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>4<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">"</span>etc<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>abc<span class="pl-pds">"</span></span>
    })
})
.<span class="pl-en">done</span>(<span class="pl-k">function</span>(<span class="pl-smi">data</span>, <span class="pl-smi">textStatus</span>, <span class="pl-smi">jqXHR</span>) {
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>HTTP Request Succeeded: <span class="pl-pds">"</span></span> <span class="pl-k">+</span> <span class="pl-smi">jqXHR</span>.<span class="pl-c1">status</span>);
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(data);
})
.<span class="pl-en">fail</span>(<span class="pl-k">function</span>(<span class="pl-smi">jqXHR</span>, <span class="pl-smi">textStatus</span>, <span class="pl-smi">errorThrown</span>) {
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>HTTP Request Failed<span class="pl-pds">"</span></span>);
})
.<span class="pl-en">always</span>(<span class="pl-k">function</span>() {
    <span class="pl-c"><span class="pl-c">/*</span> ... <span class="pl-c">*/</span></span>
});</pre></div>
<p>The properties contained in the <code>data</code> element correspond with those you defined in your custom Drupal module's <code>publicFields()</code> function for this entity type.</p>

        </div>

    </div>]