[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>For a video tutorial covering the basics, see <a href="https://www.youtube.com/watch?v=YnEMqBcKl7k&amp;index=4&amp;list=PLZOQ_ZMpYrZv8_c7jd_CkO_93-DnyVFY5" rel="nofollow">4. Writing the first resource</a> on Youtube.</p>
<p>From here down we assume you have viewed the above and understand the basics. Also, we'll assume you now have a new class file with the appropriate filename and location in your filesystem.</p>
<p><strong>Note</strong>: You will need to flush caches once or twice after defining your plugin before Drupal will fully recognise it.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#annotations" id="user-content-annotations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Annotations</h2>
<p>The resource definition introduces something that may be new to the Drupal 7 developerâ€”the Drupal 8/Symfony-style "annotation". This is essentially a bunch of comments preceding the class, which are actually read by the plugin system (in this case the plug.module) in order to learn all about the class.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#example-annotation" id="user-content-example-annotation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example Annotation:</h3>
<p>e.g.</p>
<pre lang="{.haskell"><code>/**
  * Class Articles
  * @package Drupal\restful\Plugin\resource
  *
  * @Resource(
  *   name = "articles:1.1",
  *   resource = "articles",
  *   label = "Articles",
  *   description = "Export the article content type.",
  *   authenticationOptional = TRUE,
  *   dataProvider = {
  *     "entityType": "node",
  *     "bundles": {
  *       "article"
  *     },
  *   },
  *   majorVersion = 1,
  *   minorVersion = 1
  * )
  */
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#a-note-about-version-numbers" id="user-content-a-note-about-version-numbers"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>A note about version numbers.</h2>
<p>In general a good rule of thumb is that if you are inheriting from an old resource, you bump up the minor version. If you are not, then bump up the major version.</p>
<p>If you're extending a resource that RESTful provides out-of-the-box (e.g. users) but you haven't incremented your version number, RESTful may not see your resource, instead using the default one. e.g. if you're extending RESTful's users v1.0, be sure to call yours users v1.1 or higher.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#full-example" id="user-content-full-example"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Full Example</h2>
<p>In the file <code>/casa_rest/src/Plugin/resource/pictures/v0_1/Pictures__0_1.php</code>:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-pse">&lt;?php</span><span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">/**</span></span></span>
<span class="pl-s1"><span class="pl-c"> * @file</span></span>
<span class="pl-s1"><span class="pl-c"> * Contains \Drupal\casa_rest\Plugin\resource\pictures\v0_1\Pictures__0_1.</span></span>
<span class="pl-s1"><span class="pl-c"> <span class="pl-c">*/</span></span></span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-k">namespace</span> <span class="pl-en">Drupal\casa_rest\Plugin\resource\pictures\v0_1</span>;</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-k">use</span> <span class="pl-c1">Drupal\restful\Plugin\resource\ResourceInterface</span>;</span>
<span class="pl-s1"><span class="pl-k">use</span> <span class="pl-c1">Drupal\restful\Plugin\resource\ResourceNode</span>;</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">/**</span></span></span>
<span class="pl-s1"><span class="pl-c"> * Class Pictures</span></span>
<span class="pl-s1"><span class="pl-c"> * <span class="pl-k">@package</span> Drupal\casa_rest\Plugin\resource\pictures\v0_1</span></span>
<span class="pl-s1"><span class="pl-c"> *</span></span>
<span class="pl-s1"><span class="pl-c"> * @Resource(</span></span>
<span class="pl-s1"><span class="pl-c"> *   name = "pictures:0.1",</span></span>
<span class="pl-s1"><span class="pl-c"> *   resource = "pictures",</span></span>
<span class="pl-s1"><span class="pl-c"> *   label = "Pictures",</span></span>
<span class="pl-s1"><span class="pl-c"> *   description = "A RESTful service resource exposing pictures.",</span></span>
<span class="pl-s1"><span class="pl-c"> *   authenticationTypes = {</span></span>
<span class="pl-s1"><span class="pl-c"> *     "token"</span></span>
<span class="pl-s1"><span class="pl-c"> *   },</span></span>
<span class="pl-s1"><span class="pl-c"> *   authenticationOptional = TRUE,</span></span>
<span class="pl-s1"><span class="pl-c"> *   dataProvider = {</span></span>
<span class="pl-s1"><span class="pl-c"> *     "entityType": "node",</span></span>
<span class="pl-s1"><span class="pl-c"> *     "bundles": {</span></span>
<span class="pl-s1"><span class="pl-c"> *       "picture"</span></span>
<span class="pl-s1"><span class="pl-c"> *     },</span></span>
<span class="pl-s1"><span class="pl-c"> *   },</span></span>
<span class="pl-s1"><span class="pl-c"> *   majorVersion = 0,</span></span>
<span class="pl-s1"><span class="pl-c"> *   minorVersion = 1</span></span>
<span class="pl-s1"><span class="pl-c"> * )</span></span>
<span class="pl-s1"><span class="pl-c"> <span class="pl-c">*/</span></span></span>
<span class="pl-s1"><span class="pl-k">class</span> <span class="pl-en">Pictures__0_1</span> <span class="pl-k">extends</span> <span class="pl-e">ResourceNode</span> <span class="pl-k">implements</span> <span class="pl-e">ResourceInterface</span> {</span>
<span class="pl-s1"></span>
<span class="pl-s1">  <span class="pl-c"><span class="pl-c">/**</span></span></span>
<span class="pl-s1"><span class="pl-c">   * Overrides ResourceEntity::publicFieldsInfo().</span></span>
<span class="pl-s1"><span class="pl-c">   <span class="pl-c">*/</span></span></span>
<span class="pl-s1">  <span class="pl-k">protected</span> <span class="pl-k">function</span> <span class="pl-en">publicFields</span>() {</span>
<span class="pl-s1">    <span class="pl-smi">$fields</span> <span class="pl-k">=</span> <span class="pl-k">parent</span><span class="pl-k">::</span>publicFields();</span>
<span class="pl-s1"></span>
<span class="pl-s1">    <span class="pl-smi">$fields</span>[<span class="pl-s"><span class="pl-pds">'</span>owner<span class="pl-pds">'</span></span>] <span class="pl-k">=&gt;</span> <span class="pl-c1">array</span>(</span>
<span class="pl-s1">      <span class="pl-s"><span class="pl-pds">'</span>property<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>author<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">      <span class="pl-s"><span class="pl-pds">'</span>sub_property<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>uid<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">    );</span>
<span class="pl-s1"></span>
<span class="pl-s1">    <span class="pl-k">return</span> <span class="pl-smi">$fields</span>;</span>
<span class="pl-s1">  }</span>
<span class="pl-s1">}</span></pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#plugin-definition-properties" id="user-content-plugin-definition-properties"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Plugin definition properties</h3>
<p>See <a href="Resource-plugin-definition-properties">Resource plugin definition properties (for 2.x)</a>.</p>
<p>Note the new plugin definition property for 2.x:
<code>menuItem</code>: Defines the endpoint path, similar to an alias. Eg. <code>menuItem = "session/token"</code></p>
<h3>
<a aria-hidden="true" class="anchor" href="#authentication" id="user-content-authentication"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Authentication</h3>
<p>If you need your endpoint to be protected by authentication, you must specify the <code>authentication_types</code> key. Either specify an array of auth types, or <code>TRUE</code> for any.</p>
<pre><code> *   authentication_types =&gt; TRUE, // Try to authenticate users with all available authentication types.
</code></pre>
<p>or</p>
<pre><code> *   authenticationTypes = {
 *     "token"
 *   },
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#a-word-of-caution" id="user-content-a-word-of-caution"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>A word of caution</h3>
<p>If you want to use one specific authentication type, don't use <code>authentication_types =&gt; TRUE</code>. Under certain circumstances the browser may end up sending a cookie with the request, and if you're not intentionally using cookie auth, you are likely not providing the CSRF token that cookie auth requires for write operations.</p>
<p>Example scenarios where this problem could arise:</p>
<ul>
<li>when the client is a Javascript app served from the same domain as the Drupal REST server; in this scenario, if the user ever logs into the Drupal instance, they will gain an auth cookie which will be sent by the browser with every RESTful request your client app makes.</li>
<li>when the client is a Javascript app served from a different domain to the Drupal REST server but you are using a CORS alternative such as <a href="https://github.com/jpillora/xdomain">XDomain</a>; in this case, your client app's requests appear to Drupal as though they originated via the Drupal instance's domain, and if there's a Drupal cookie for that domain it will be sent with the request.</li>
</ul>
<p>If a Drupal auth cookie is inadvertently sent with the request it will either fail to authenticate, in which case RESTful will move onto any other provided auth mechanisms, or it may succeed. If it succeeds, you may end up with a BadRequestException <code>No CSRF token passed in the HTTP header.</code> because although the cookie auth succeeded, you need to send a CSRF token if you intend to use cookie auth (for write OPs).</p>

        </div>

    </div>]