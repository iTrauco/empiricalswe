[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h3>
<a aria-hidden="true" class="anchor" href="#quick-navigation" id="user-content-quick-navigation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Quick Navigation</h3>
<table width="100%">
    <tbody><tr>
<th>Short Name</th>
<th>Full Name</th>
</tr>
    <tr>
<td><a href="#head">HEAD</a></td>
<td>org.spongepowered.asm.mixin.injection.points.MethodHead</td>
</tr>
    <tr>
<td><a href="#return">RETURN</a></td>
<td>org.spongepowered.asm.mixin.injection.points.BeforeReturn</td>
</tr>
    <tr>
<td><a href="#tail">TAIL</a></td>
<td>org.spongepowered.asm.mixin.injection.points.BeforeFinalReturn</td>
</tr>
    <tr>
<td><a href="#invoke">INVOKE</a></td>
<td>org.spongepowered.asm.mixin.injection.points.BeforeInvoke</td>
</tr>
    <tr>
<td><a href="#invokestring">INVOKE_STRING</a></td>
<td>org.spongepowered.asm.mixin.injection.points.BeforeStringInvoke</td>
</tr>
    <tr>
<td><a href="#invokeassign">INVOKE_ASSIGN</a></td>
<td>org.spongepowered.asm.mixin.injection.points.AfterInvoke</td>
</tr>
    <tr>
<td><a href="#field">FIELD</a></td>
<td>org.spongepowered.asm.mixin.injection.points.BeforeFieldAccess</td>
</tr>
    <tr>
<td><a href="#new">NEW</a></td>
<td>org.spongepowered.asm.mixin.injection.points.BeforeNew</td>
</tr>
    <tr>
<td><a href="#constant">CONSTANT</a></td>
<td>org.spongepowered.asm.mixin.injection.points.BeforeConstant</td>
</tr>
</tbody></table>
<p><a name="user-content-head"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#methodhead" id="user-content-methodhead"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>MethodHead</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview" id="user-content-overview"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>HEAD</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.MethodHead</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td><i>None</i></td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td><i>None</i></td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description" id="user-content-description"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>This injection point always returns the first instruction in the candidate list. When selecting within a method, this is always the first instruction in the method. When selecting in a slice, this is always the first instruction in the slice.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes" id="user-content-notes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>This injection point is guaranteed to select only 1 instruction.</p>
</blockquote>
<hr/>
<p><a name="user-content-return"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#beforereturn" id="user-content-beforereturn"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>BeforeReturn</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-1" id="user-content-overview-1"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>RETURN</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.BeforeReturn</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td>
<dl>
<dt>ordinal</dt>
<dd>the ordinal of the <tt>RETURN</tt> instruction to select (indexed from <tt>0</tt>)</dd>
</dl>
</td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td><i>None</i></td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-1" id="user-content-description-1"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>This injection point selects <tt>RETURN</tt> opcodes in the target instruction list. If <tt>ordinal</tt> is not specified, all <tt>RETURN</tt> instructions are selected.</p>
<table>
<thead><tr>
<th>ordinal</th>
<th>search in</th>
<th>result</th>
<th>reason</th>
</tr></thead>
<tbody>
<tr>
<td>Omitted</td>
<td>Method</td>
<td>1 or more instructions</td>
<td>method is guaranteed to always have at least 1 <tt>RETURN</tt>
</td>
</tr>
<tr>
<td>Specified</td>
<td>Method</td>
<td>0 or 1 instructions</td>
<td>
<tt>RETURN</tt> with matching <tt>ordinal</tt> may not be present</td>
</tr>
<tr>
<td>Omitted</td>
<td>Slice</td>
<td>0 or more instructions</td>
<td>Matches all <tt>RETURN</tt>s in slice, slice may not contain any</td>
</tr>
<tr>
<td>Specified</td>
<td>Slice</td>
<td>0 or 1 instructions</td>
<td>Matches one <tt>RETURN</tt>s in slice, slice may not contain a matching insn</td>
</tr>
</tbody>
</table>
### Notes
This is the only injection point which is allowed to be used when an <tt>@Inject</tt> injector targets a constructor.
<p>When used in combination with <a href="https://github.com/SpongePowered/Mixin/wiki/Advanced-Mixin-Usage---Callback-Injectors#5-targets-with-non-void-return-types">cancellable non-void injections</a> this injection point will make the return type available within the <tt>CallbackInfoReturnable</tt> via the <tt>getReturnType()</tt> method.</p>
</blockquote>
<hr/>
<p><a name="user-content-tail"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#beforefinalreturn" id="user-content-beforefinalreturn"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>BeforeFinalReturn</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-2" id="user-content-overview-2"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>TAIL</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.BeforeFinalReturn</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td><i>None</i></td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td><i>None</i></td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-2" id="user-content-description-2"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>This injection point returns the final <code>RETURN</code> opcode in the target method.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes-1" id="user-content-notes-1"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>Note that the last <code>RETURN</code> opcode may not correspond to the notional "bottom" of a method in the original Java source, since conditional expressions can cause the bytecode emitted to differ significantly in order from the original Java.</p>
</blockquote>
<hr/>
<p><a name="user-content-invoke"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#beforeinvoke" id="user-content-beforeinvoke"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>BeforeInvoke</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-3" id="user-content-overview-3"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>INVOKE</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.BeforeInvoke</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td>
<dl>
<dt>target</dt>
<dd>the invocation to target, must be fully-qualified if remapped</dd>
<dt>ordinal</dt>
<dd>the ordinal index of the matching invocation to select (selects all if omitted)</dd>
</dl>
</td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td>
<dl>
<dt>
<tt>boolean</tt> log</dt>
<dd>produces verbose output in the console as the injector scans a method, useful for diagnosing injectors which are behaving incorrectly or in unexpected ways</dd>
</dl>
</td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-3" id="user-content-description-3"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>This injection point searches for <em>invoke</em> instructions within the target instruction list and returns instructions which match the criteria. <code>target</code> should be a parsable <a href="http://jenkins.liteloader.com/job/Mixin/javadoc/index.html?org/spongepowered/asm/mixin/injection/struct/MemberInfo.html" rel="nofollow">MemberInfo</a> which specifies an invocation to search for (omitting <code>target</code> will return all invoke instructions in the target). The <code>ordinal</code> specifies the index of the invocation to select, if omitted then all matching invocations are returned.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes-2" id="user-content-notes-2"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>The <code>ordinal</code> value selects <em>within the instructions matched by <code>target</code></em>, so if there are 4 invoke instructions in the target method, but only 2 match the value specified in target, then specifying <code>ordinal=1</code> selects the second instruction matching <code>target</code> not the second invocation in the method. In other words, <code>target</code> is always applied before <code>ordinal</code>.</p>
</blockquote>
<hr/>
<p><a name="user-content-invokestring"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#beforestringinvoke" id="user-content-beforestringinvoke"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>BeforeStringInvoke</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-4" id="user-content-overview-4"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>INVOKE_STRING</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.BeforeStringInvoke</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td>
<dl>
<dt>target</dt>
<dd>the invocation to target, must be fully-qualified if remapped</dd>
<dt>ordinal</dt>
<dd>the ordinal index of the matching invocation to select (selects all if omitted)</dd>
</dl>
</td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td>
<dl>
<dt>
<tt>string</tt> ldc</dt>
<dd>constant value to match, see description</dd>
<dt>
<tt>boolean</tt> log</dt>
<dd>produces verbose output in the console as the injector scans a method, useful for diagnosing injectors which are behaving incorrectly or in unexpected ways</dd>
</dl>
</td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-4" id="user-content-description-4"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>Like <a href="#invoke">BeforeInvoke</a>, this injection point searches for <em>invoke</em> instructions within the target instruction list and returns instructions which match the criteria. This specialised version will only match methods which accept a single <code>String</code> argument and return <code>void</code>, the string itself must be a literal string and is matched as part of the query process.</p>
<p>The primary purpose of this query is to match specific invocations of <code>Profiler::startSection</code> and similar methods which accept a literal string.</p>
<p>The string constant to match should be specified using the named argument <code>ldc</code>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes-3" id="user-content-notes-3"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>This query can only be used to match invocations where the argument is passed as a <code>String</code> literal.</p>
<p>See notes in <a href="#invoke">BeforeInvoke</a> regarding the application order of <code>target</code> and <code>ordinal</code></p>
</blockquote>
<hr/>
<p><a name="user-content-invokeassign"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#afterinvoke" id="user-content-afterinvoke"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>AfterInvoke</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-5" id="user-content-overview-5"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>INVOKE_ASSIGN</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.AfterInvoke</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td>
<dl>
<dt>target</dt>
<dd>the invocation to target, must be a non-void return type and must be fully-qualified if remapped</dd>
<dt>ordinal</dt>
<dd>the ordinal index of the matching invocation to select (selects all if omitted)</dd>
</dl>
</td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td>
<dl>
<dt>
<tt>boolean</tt> log</dt>
<dd>produces verbose output in the console as the injector scans a method, useful for diagnosing injectors which are behaving incorrectly or in unexpected ways</dd>
</dl>
</td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-5" id="user-content-description-5"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>Like <code>BeforeInvoke</code>, this injection point searches for <em>invoke</em> instructions within the target instruction list and returns instructions which match the criteria. However the method targetted <em>must</em> return a value. If this condition is met then the injection point returns the instruction immediately following the invocation. If the invocation is immediately followed by a <code>STORE</code> instruction (eg. the result of the invocation is stored in a local variable) then the injection point returns the instruction <em>immediately following</em> the <code>STORE</code> instruction.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes-4" id="user-content-notes-4"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>This injection point selects candidate instructions in exactly the same way as <code>BeforeInvoke</code> so the considerations are the same.</p>
</blockquote>
<hr/>
<p><a name="user-content-field"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#beforefieldaccess" id="user-content-beforefieldaccess"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>BeforeFieldAccess</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-6" id="user-content-overview-6"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>FIELD</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.BeforeFieldAccess</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td>
<dl>
<dt>target</dt>
<dd>the field access to target, must be fully-qualified if remapped</dd>
<dt>opcode</dt>
<dd>the instruction opcode to search for (must be one of <tt>GETSTATIC</tt>, <tt>PUTSTATIC</tt>, <tt>GETFIELD</tt> or <tt>PUTFIELD</tt>), matches all field accesses if not specified</dd>
<dt>ordinal</dt>
<dd>the ordinal index of the field access to select (or all if omitted)</dd>
</dl>
</td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td>
<dl>
<dt>
<tt>boolean</tt> log</dt>
<dd>produces verbose output in the console as the injector scans a method, useful for diagnosing injectors which are behaving incorrectly or in unexpected ways</dd>
</dl>
</td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-6" id="user-content-description-6"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>This injection point searches for <code>GETFIELD</code> and <code>PUTFIELD</code> instructions (and their static equivalents) within the target instruction list and returns instructions which match the criteria. <code>target</code> should be a parsable <a href="http://jenkins.liteloader.com/job/Mixin/javadoc/index.html?org/spongepowered/asm/mixin/injection/struct/MemberInfo.html" rel="nofollow">MemberInfo</a> which specifies an field name to search for (omitting <code>target</code> will return all access instructions of the corresponding type in the target). The <code>ordinal</code> specifies the index of the instruction to select, if omitted then all matching field access instructions are returned.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes-5" id="user-content-notes-5"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>The <code>ordinal</code> value selects <em>within the instructions matched by <code>target</code></em>, so if there are 4 field access instructions in the target method, but only 2 match the value specified in <code>target</code>, then specifying <code>ordinal=1</code> selects the second instruction matching <code>target</code> not the second field access in the method. In other words, <code>target</code> is always applied before <code>ordinal</code>.</p>
</blockquote>
<hr/>
<p><a name="user-content-new"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#beforenew" id="user-content-beforenew"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>BeforeNew</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-7" id="user-content-overview-7"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>NEW</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.BeforeNew</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td>
<dl>
<dt>target</dt>
<dd>A constructor descriptor to remap, the descriptor must consist <b>only</b> of the <i>class name</i> or the <i>class name and constructor signature</i>
</dd>
<dt>ordinal</dt>
<dd>the ordinal index of the NEW opcode to select (or all if omitted)</dd>
</dl>
</td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td>
<dl>
<dt>
<tt>String</tt> class</dt>
<dd>alternative to <tt>target</tt> for backwards compatibility (<tt>NEW</tt> originally only supported this argument). Identical to <tt>target</tt>, specify only one or the other</dd>
</dl>
</td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-7" id="user-content-description-7"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>This injection point searches for <code>NEW</code> instructions within the target instruction list and returns instructions which match the criteria. If <code>target</code> is specified then only <code>NEW</code> instructions for the specified type are returned. If the <code>target</code> includes a method signature (which <strong>must</strong> specify void (<code>V</code>) as the return type) then only <code>NEW</code> instructions followed by an <tt>INVOKESPECIAL(&lt;init&gt;)</tt> with a matching signature are returned. Note that <strong>the <code>NEW</code> instruction is always returned, not the <code>INVOKESPECIAL</code></strong>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes-6" id="user-content-notes-6"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>Note that like other injection points, <code>ordinal</code> applies to the overall result of the other injection point parameters. So if using <code>target</code> to identify a subset of <code>NEW</code> opcodes, <code>ordinal</code> will select with that subset rather than from the entire pool of <code>NEW</code> opcodes in the target. In order words, <code>ordinal</code> is always applied <em>last</em>.</p>
</blockquote>
<hr/>
<p><a name="user-content-constant"></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#beforeconstant" id="user-content-beforeconstant"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>BeforeConstant</h2>
<blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#overview-8" id="user-content-overview-8"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Overview</h3>
<table> 
<tbody><tr>
<td nowrap=""><b>Short name</b></td>
<td><tt>CONSTANT</tt></td>
</tr>
<tr>
<td><b>Full name</b></td>
<td><tt>org.spongepowered.asm.mixin.injection.points.BeforeConstant</tt></td>
</tr>
<tr>
<td><b>Options</b></td>
<td>
<dl>
<dt>ordinal</dt>
<dd>the ordinal index of the NEW opcode to select (or all if omitted)</dd>
</dl>
</td>
</tr>
<tr>
<td><b>Arguments</b></td>
<td>
<dl>
<dt>
<tt>boolean</tt> nullValue</dt>
<dd>Set this value to <tt>true</tt> to match <tt>null</tt> literals in the method body</dd>
<dt>
<tt>int</tt> intValue</dt>
<dd>Set this value to an integer literal to match in the method body. Note that it may be necessary to also set the <tt>expandZeroConditions</tt> argument if you wish to match literal zeroes which form part of a conditional expression.</dd>
<dt>
<tt>float</tt> floatValue</dt>
<dd>Set this value to a float literal to match in the method body.</dd>
<dt>
<tt>long</tt> longValue</dt>
<dd>Set this value to a long literal to match in the method body.</dd>
<dt>
<tt>double</tt> doubleValue</dt>
<dd>Set this value to a double literal to match in the method body.</dd>
<dt>
<tt>String</tt> stringValue</dt>
<dd>Set this value to a literal String value to match in the method body.</dd>
<dt>
<tt>String</tt> class</dt>
<dd>Set this to a fully-qualified class name to match a <tt>Class</tt> literal in the method body</dd>
<dt>
<tt>boolean</tt> log</dt>
<dd>Set this value to <tt>true</tt> to emit logging information when applying this injection point query</dd>
<dt>
<tt>String</tt> expandZeroConditions</dt>
<dd>Whilst most constants can be located in the compiled method with relative ease, there exists a special case when a zero is used in a conditional expression. For example:<blockquote><code>if (x &gt;= 0)</code></blockquote>This special case occurs because java includes explicit instructions for this type of comparison, and thus the compiled code might look more like this:<blockquote><code>if (x.isGreaterThanOrEqualToZero())</code></blockquote>Of course if we know that the constant we are searching for is part of a comparison, then we can explicitly search for the <tt>isGreaterThanOrEqualToZero</tt> and convert it back to the original form in order to redirect it just like any other constant access.<br/><br/>To enable this behaviour, you may specify one or more values for this argument based on the type of expression you wish to expand. Since the Java compiler is wont to compile certain expressions as the <i>inverse</i> of their source-level counterparts (eg. compiling a <i>do this if greater than</i> structure to a <i>ignore this if less than or equal</i> structure); specifying a particular expression type implicitly includes the inverse expression as well.<br/><br/>It is worth noting that the effect on ordinals may be hard to predict, and thus care should be taken to ensure that the selected injection points match the expected locations.<br/><br/>Specifying this option has the following effects:<br/><br/><ul>
<li>Matching conditional opcodes in the target method are identified for injection candidacy.</li>
<li>An <tt>intValue</tt> of <tt>0</tt> is implied and does not need to be explicitly defined.</li>
<li>However, explicitly specifying an <tt>intValue</tt> of <tt>0</tt> will cause this selector to also match explicit <tt>0</tt> constants in the method body as well.</li>
</ul>To specify values for this key, separate values of <tt>Condition</tt> with commas or spaces, eg:<blockquote><code>"expandZeroConditions=LESS_THAN_ZERO,GREATER_THAN_ZERO"</code></blockquote>
</dd>
</dl>
</td>
</tr>
</tbody></table>
<h3>
<a aria-hidden="true" class="anchor" href="#description-8" id="user-content-description-8"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h3>
<p>This injection point searches for literal values (constants) within the target instruction list and returns instructions which match the criteria. Note that all of the discriminator arguments are mutually exclusive and <em>only one</em> discriminator should be specified. Specifying more than one discriminator argument will raise an exception.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#notes-7" id="user-content-notes-7"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>Note that like other injection points, <code>ordinal</code> applies to the overall result of the other injection point parameters. In order words, <code>ordinal</code> is always applied <em>last</em>.</p>
</blockquote>

        </div>

    </div>]