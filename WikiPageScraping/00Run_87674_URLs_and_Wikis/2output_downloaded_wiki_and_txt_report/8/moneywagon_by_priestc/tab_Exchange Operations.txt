[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#exchange-operations" id="user-content-exchange-operations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Exchange operations</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#get-current-price" id="user-content-get-current-price"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Get current price</h3>
<p>This gets the current exchange rate between any cryptocurrency and any fiat currency.</p>
<p>command line examples:</p>
<pre><code>$ moneywagon current-price ltc eur
3.798
</code></pre>
<p>Additionally, you can include <code>--verbose</code> to get more output:</p>
<pre><code>$ moneywagon current-price btc usd --verbose
* Trying: &lt;Service: Bitstamp (0 in cache)&gt;
URL: https://www.bitstamp.net/api/ticker/
279.01

</code></pre>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon <span class="pl-k">import</span> Bittrex
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> b <span class="pl-k">=</span> Bittrex()
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> b.get_current_price(<span class="pl-s"><span class="pl-pds">'</span>ltc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>btc<span class="pl-pds">'</span></span>)
<span class="pl-c1">0.01619</span></pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#make-order" id="user-content-make-order"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Make Order</h3>
<p>This example buys 0.05 worth of LTC with bitcoin at 0.1386 LTC/BTC.
Returned is the "order ID" which can then be used to cancel order.</p>
<p>Supported by the following exchanges: GDAX, Poloniex, Bittrex, NovaExchange</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon.services <span class="pl-k">import</span> <span class="pl-c1">GDAX</span>
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> g <span class="pl-k">=</span> GDAX(<span class="pl-v">api_key</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>91ead6e3308a4daa...<span class="pl-pds">'</span></span>, <span class="pl-v">api_secret</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>3617806dc4b...<span class="pl-pds">'</span></span>, <span class="pl-v">api_pass</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>3dfr38s...<span class="pl-pds">'</span></span>)
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> g.make_order(<span class="pl-s"><span class="pl-pds">'</span>ltc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>btc<span class="pl-pds">'</span></span>, <span class="pl-c1">0.05</span>, <span class="pl-c1">0.13860113</span>, <span class="pl-v">side</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>buy<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds">'</span>b1c95c62-2f81-4005-b19c-80608c30d543<span class="pl-pds">'</span></span></pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#cancel-order" id="user-content-cancel-order"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cancel order</h3>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon.services <span class="pl-k">import</span> <span class="pl-c1">GDAX</span>
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> g <span class="pl-k">=</span> GDAX(<span class="pl-v">api_key</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>91ead6e3308a4daa...<span class="pl-pds">'</span></span>, <span class="pl-v">api_secret</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>3617806dc4b...<span class="pl-pds">'</span></span>)
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> g.cancel_order(<span class="pl-s"><span class="pl-pds">'</span>b1c95c62-2f81-4005-b19c-80608c30d543<span class="pl-pds">'</span></span>)</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#list-orders" id="user-content-list-orders"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>List orders</h3>
<p>This lists all orders you have made. Proper authentication credentials are required
for this endpoint. To get all orders for an exchange, use the <code>get_orderbook</code> endpoint instead.</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon.services <span class="pl-k">import</span> <span class="pl-c1">GDAX</span>
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> g <span class="pl-k">=</span> GDAX(<span class="pl-v">api_key</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>91ead6e3308a4daa...<span class="pl-pds">'</span></span>, <span class="pl-v">api_secret</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>3617806dc4b...<span class="pl-pds">'</span></span>, <span class="pl-v">api_pass</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>3dfr38s...<span class="pl-pds">'</span></span>)
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> g.list_orders()
[{<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>created_at<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>2017-07-05T16:00:53.70265Z<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>executed_value<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.0000000000000000<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>fill_fees<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.0000000000000000<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>filled_size<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.00000000<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>id<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0ed4825c-d703-4aa8-aca4-0807bd76b6cd<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>post_only<span class="pl-pds">'</span></span>: <span class="pl-c1">True</span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>price<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>1000.00000000<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>product_id<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>BTC-USD<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>settled<span class="pl-pds">'</span></span>: <span class="pl-c1">False</span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>side<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>buy<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>size<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.30000000<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>status<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>open<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>stp<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>dc<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>time_in_force<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>GTC<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>type<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>limit<span class="pl-pds">'</span></span>}
]</pre></div>
<p>Note: Moneywagon does not yet convert open orders to a unified format across all exchanges.
Each individual exchange will return this data in a unique format.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#initiate-withdraw" id="user-content-initiate-withdraw"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Initiate withdraw</h3>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> n <span class="pl-k">=</span> NovaExchange(<span class="pl-v">api_pass</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>dg38dh3...<span class="pl-pds">'</span></span>, <span class="pl-v">api_key</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>dhwbjfi438shjf...<span class="pl-pds">'</span></span>)
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> n.withdraw(<span class="pl-s"><span class="pl-pds">'</span>dash<span class="pl-pds">'</span></span>, <span class="pl-c1">0.05</span>, <span class="pl-s"><span class="pl-pds">'</span>XmgKAkuZAT6vnunfCX9ewQ6vv8DQGJXamV<span class="pl-pds">'</span></span>)
{<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>address<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>XmgKAkuZAT6vnunfCX9ewQ6vv8DQGJXamV<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>amount<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.05000000<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>amount_after_withdraw<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.10934224<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>amount_before_withdraw<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.15934224<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>amount_in_orders<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.00000000<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>amount_sent<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.04980000<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>currency<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>DASH<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>message<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>Withdrawal requested successfully<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>status<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>success<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>tx_fee<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.00020000<span class="pl-pds">'</span></span>,
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>wd_fee<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>0.00000000<span class="pl-pds">'</span></span>}</pre></div>
<p>The output format of this method is not yet unified amongst all exchange implementations.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#get-deposit-address" id="user-content-get-deposit-address"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Get deposit address</h3>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> n <span class="pl-k">=</span> NovaExchange(<span class="pl-v">api_pass</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>dg38dh3...<span class="pl-pds">'</span></span>, <span class="pl-v">api_key</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>dhwbjfi438shjf...<span class="pl-pds">'</span></span>)
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> n.get_deposit_address(<span class="pl-s"><span class="pl-pds">'</span>dash<span class="pl-pds">'</span></span>)
<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>XqGnkQPntNvshNt5qvfHnGYfjPuJWfYGLU<span class="pl-pds">'</span></span></pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#get-all-supported-markets" id="user-content-get-all-supported-markets"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Get all supported markets</h3>
<p>Use the <code>get_pairs()</code> method to return a list of all pairs supported by the given
service. Always returns lowercase identifiers. Crypto identifier is shown first, then a
dash character, then the fiat currency identifier.</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon.services <span class="pl-k">import</span> Poloniex
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> p <span class="pl-k">=</span> Poloniex()
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> p.get_pairs()
[<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>rep-usd<span class="pl-pds">'</span></span>,
 <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>xvc-btc<span class="pl-pds">'</span></span>,
 <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>pink-btc<span class="pl-pds">'</span></span>,
 <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>sys-btc<span class="pl-pds">'</span></span>,
 <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>emc2-btc<span class="pl-pds">'</span></span>,
 <span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>rads-btc<span class="pl-pds">'</span></span>,
 <span class="pl-c1">...</span>
]</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#utilities" id="user-content-utilities"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Utilities</h2>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon <span class="pl-k">import</span> guess_currency_from_address
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> guess_currency_from_address(<span class="pl-s"><span class="pl-pds">"</span>NJwRrtKcv3ggkwh3j3yka69rH3x5d5gu5m<span class="pl-pds">"</span></span>)
[[<span class="pl-s"><span class="pl-pds">'</span>nmc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>Namecoin<span class="pl-pds">'</span></span>]]
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> guess_currency_from_address(<span class="pl-s"><span class="pl-pds">"</span>1Ng3mALXCEphwLqTZ4x5DutMcRTxpTF299<span class="pl-pds">"</span></span>)
[[<span class="pl-s"><span class="pl-pds">'</span>btc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>Bitcoin<span class="pl-pds">'</span></span>]]
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> guess_currency_from_address(<span class="pl-s"><span class="pl-pds">"</span>EMZSp8Q3MGHZmjhSBvh52r6igstTDo4Jzx<span class="pl-pds">"</span></span>)
[[<span class="pl-s"><span class="pl-pds">'</span>emc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>Emercoin<span class="pl-pds">'</span></span>], [<span class="pl-s"><span class="pl-pds">'</span>erc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>Europecoin<span class="pl-pds">'</span></span>]]
</pre></div>
<p>This can be used as an address verifier, as an exception gets raised when an invalid
address is passed in.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#low-level-api" id="user-content-low-level-api"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Low level API</h2>
<p>The <code>get_current_price</code> function tries multiple services until it find one that returns a result.
If you would rather just use one service with no automatic retrying, use the low level 'service' API:</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon.services <span class="pl-k">import</span> <span class="pl-c1">BTER</span>
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service <span class="pl-k">=</span> BTER()
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service.get_current_price(<span class="pl-s"><span class="pl-pds">'</span>btc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>usd<span class="pl-pds">'</span></span>)
<span class="pl-c1">391.324</span></pre></div>
<p>Not all services will have every single possible function defined:</p>
<pre><code>&gt;&gt;&gt; service.get_historical_transactions('btc', 'blah')
** NotImplementedError: This service does not support getting historical_transactions.
Or rather it has no defined 'get_historical_transactions' method.
</code></pre>
<p>BTER is an exchange, not a block explorer, so it does not have a public API endpoint for getting
historical transactions. Most bock explorers don't have current price functionalities, etc.</p>
<p>If you use the <code>CurrentPrice</code> class, the <code>action</code> method will try all services
until a value is returned (same as the high level API). If you use a service class
that is limited to one API service, such as "BTER",
then only that service will be called.</p>
<p>You can also pass in a list of services classes to get more control of which
services will be used:</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon.services <span class="pl-k">import</span> <span class="pl-c1">BTCE</span>, Bitstamp
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon <span class="pl-k">import</span> CurrentPrice
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service <span class="pl-k">=</span> CurrentPrice(<span class="pl-v">services</span><span class="pl-k">=</span>[<span class="pl-c1">BTCE</span>, Bitstamp])
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service.action(<span class="pl-s"><span class="pl-pds">'</span>btc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>usd<span class="pl-pds">'</span></span>)
(<span class="pl-c1">377.2</span>, <span class="pl-s"><span class="pl-pds">'</span>btce<span class="pl-pds">'</span></span>)</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#caching-considerations" id="user-content-caching-considerations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Caching considerations</h2>
<p>The high level API does not do any caching of any sort. Each call to <code>get_current_price</code> will result in a
request with fresh results. On the other hand, the low level API will never make the request twice.</p>
<p>For instance, consider the following example:</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon.services <span class="pl-k">import</span> <span class="pl-c1">BTER</span>
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service <span class="pl-k">=</span> BTER()
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service.get_current_price(<span class="pl-s"><span class="pl-pds">'</span>ltc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>rur<span class="pl-pds">'</span></span>) <span class="pl-c"><span class="pl-c">#</span> makes two external calls, one for ltc-&gt;btc, one for btc-&gt;rur</span>
<span class="pl-c1">1.33535</span>
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service.get_current_price(<span class="pl-s"><span class="pl-pds">'</span>btc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>rur<span class="pl-pds">'</span></span>) <span class="pl-c"><span class="pl-c">#</span> makes zero external calls (uses btc-&gt; rur result from last call)</span>
<span class="pl-c1">1.33535</span></pre></div>
<p>Note that the BTER exchange does not have a direct orderbook between Litecoin and Russian Ruble.
As a result, moneywagon needs to make two separate API calls to get the correct exchange rate.
The first one to get the LTC-&gt;BTC exchange rate, and the second one to get the BTC-&gt;RUR exchange rate.
Then the two results are multiplied together to get the LTC -&gt; RUR exchange rate.
If your application does a lot of converting at a time, it will be better for performance to use
the low level API.</p>
<p>If you keep the original service instance around and make more calls to get_price,
it will use the result of previous calls:</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> service.get_current_price(<span class="pl-s"><span class="pl-pds">'</span>btc<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>rur<span class="pl-pds">'</span></span>) <span class="pl-c"><span class="pl-c">#</span> will make no external calls</span>
<span class="pl-c1">17865.4210346</span></pre></div>
<p>In other words, if you are using the low level API and you want fresh values, you must make a new instance of the service class.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#tools" id="user-content-tools"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Tools</h1>
<h2>
<a aria-hidden="true" class="anchor" href="#exchangeuniverse" id="user-content-exchangeuniverse"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>ExchangeUniverse</h2>
<p>This utility represents all supported exchange services.</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> moneywagon <span class="pl-k">import</span> ExchangeUniverse
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> e <span class="pl-k">=</span> ExchangeUniverse(<span class="pl-v">verbose</span><span class="pl-k">=</span><span class="pl-c1">True</span>)
Got Response: http:<span class="pl-k">//</span>api.btc38.com<span class="pl-k">/</span>v1<span class="pl-k">/</span>ticker.php<span class="pl-ii">?</span>c<span class="pl-k">=</span><span class="pl-c1">all</span><span class="pl-k">&amp;</span>mk_type<span class="pl-k">=</span>cny
Got Response: http:<span class="pl-k">//</span>api.btc38.com<span class="pl-k">/</span>v1<span class="pl-k">/</span>ticker.php<span class="pl-ii">?</span>c<span class="pl-k">=</span><span class="pl-c1">all</span><span class="pl-k">&amp;</span>mk_type<span class="pl-k">=</span>btc
<span class="pl-c1">BTC38</span> returned error: No <span class="pl-c1">JSON</span> <span class="pl-c1">object</span> could be decoded
Got Response: https:<span class="pl-k">//</span>btc<span class="pl-k">-</span>e.com<span class="pl-k">/</span>api<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">/</span>info
<span class="pl-c1">BTCE</span> returned error: No <span class="pl-c1">JSON</span> <span class="pl-c1">object</span> could be decoded
Got Response: http:<span class="pl-k">//</span>data.bter.com<span class="pl-k">/</span>api<span class="pl-k">/</span><span class="pl-c1">1</span><span class="pl-k">/</span>pairs
Got Response: https:<span class="pl-k">//</span>api.bitfinex.com<span class="pl-k">/</span>v1<span class="pl-k">/</span>symbols
Got Response: https:<span class="pl-k">//</span>api.bitso.com<span class="pl-k">/</span>v3<span class="pl-k">/</span>available_books<span class="pl-k">/</span>
Got Response: https:<span class="pl-k">//</span>bittrex.com<span class="pl-k">/</span>api<span class="pl-k">/</span>v1.1<span class="pl-k">/</span>public<span class="pl-k">/</span>getmarkets
Got Response: https:<span class="pl-k">//</span>bleutrade.com<span class="pl-k">/</span>api<span class="pl-k">/</span>v2<span class="pl-k">/</span>public<span class="pl-k">/</span>getmarkets
Got Response: https:<span class="pl-k">//</span>c<span class="pl-k">-</span>cex.com<span class="pl-k">/</span>t<span class="pl-k">/</span>pairs.json
Got Response: https:<span class="pl-k">//</span>www.cryptopia.co.nz<span class="pl-k">/</span>api<span class="pl-k">/</span>GetTradePairs
Got Response: https:<span class="pl-k">//</span>api.gdax.com<span class="pl-k">/</span>products
Got Response: https:<span class="pl-k">//</span>api.hitbtc.com<span class="pl-k">/</span>api<span class="pl-k">/</span><span class="pl-c1">1</span><span class="pl-k">/</span>public<span class="pl-k">/</span>symbols
Got Response: https:<span class="pl-k">//</span>api.kraken.com<span class="pl-k">/</span><span class="pl-c1">0</span><span class="pl-k">/</span>public<span class="pl-k">/</span>AssetPairs
Got Response: https:<span class="pl-k">//</span>api.liqui.io<span class="pl-k">/</span>api<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">/</span>info
Got Response: https:<span class="pl-k">//</span>api.livecoin.net<span class="pl-k">/</span>exchange<span class="pl-k">/</span>ticker
LiveCoin returned error: <span class="pl-c1">503</span> <span class="pl-k">-</span> Temporarily out of service.
Got Response: https:<span class="pl-k">//</span>novaexchange.com<span class="pl-k">/</span>remote<span class="pl-k">/</span>v2<span class="pl-k">/</span>markets<span class="pl-k">/</span>
Got Response: https:<span class="pl-k">//</span>poloniex.com<span class="pl-k">/</span>public<span class="pl-ii">?</span>command<span class="pl-k">=</span>returnTicker
Got Response: https:<span class="pl-k">//</span>usecryptos.com<span class="pl-k">/</span>jsonapi<span class="pl-k">/</span>pairs
Got Response: https:<span class="pl-k">//</span>api.vircurex.com<span class="pl-k">/</span>api<span class="pl-k">/</span>get_info_for_currency.json
Got Response: https:<span class="pl-k">//</span>yobit.net<span class="pl-k">/</span>api<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">/</span>info
Got Response: https:<span class="pl-k">//</span>yunbi.com<span class="pl-k">/</span>api<span class="pl-k">/</span>v2<span class="pl-k">/</span>markets.json
Got Response: https:<span class="pl-k">//</span>cryptottlivewebapi.xbtce.net:<span class="pl-c1">8443</span><span class="pl-k">/</span>api<span class="pl-k">/</span>v1<span class="pl-k">/</span>public<span class="pl-k">/</span>symbol
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> e.find_pair(<span class="pl-s"><span class="pl-pds">'</span>doge<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>usd<span class="pl-pds">'</span></span>)
{moneywagon.services.YoBit: [<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>doge-usd<span class="pl-pds">'</span></span>],
 moneywagon.services.CexIO: [<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>doge-usd<span class="pl-pds">'</span></span>],
 moneywagon.services.Vircurex: [<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>doge-usd<span class="pl-pds">'</span></span>],
 moneywagon.services.Cryptopia: [<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>doge-usd<span class="pl-pds">'</span></span>],
 moneywagon.services.HitBTC: [<span class="pl-s"><span class="pl-k">u</span><span class="pl-pds">'</span>doge-usd<span class="pl-pds">'</span></span>]}
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-c1">len</span>(e.all_cryptos())
<span class="pl-c1">1702</span></pre></div>

        </div>

    </div>]