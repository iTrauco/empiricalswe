[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#file-system-functions" id="user-content-file-system-functions"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>File system functions</h2>
<p><em>Note: you can also use <code>fs</code> instead of <code>fsd</code></em></p>
<p>Documentation on stock functions can be found at <a href="http://computercraft.info/wiki/Fs_(API)" rel="nofollow">http://computercraft.info/wiki/Fs_(API)</a></p>
<p><code>fsd.normalizePerms(numericPermissions)</code> - turn numeric permissions into text ones(755 =&gt; rwxr-xr-x)</p>
<p><code>fsd.testPerms(path, uid, permission)</code> - check, whether user with specified uid has permission("r", "w" or "x") on path</p>
<p><code>fsd.normalizePath(path)</code> - transform path to normal form ("var/lib//xyz/../something" to /var/lib/something)</p>
<p><code>fsd.resolveLinks(path)</code> - return path to file without symbolic links</p>
<p><code>fsd.newLink(name, path)</code> - create new symbolic link (name =&gt; path)</p>
<p><code>fsd.delLink(name)</code> - delete link, called name</p>
<p><code>fsd.stripPath(base, full)</code> - remove base path from full (/var, /var/lib/something =&gt; /lib/something)</p>
<p><code>fsd.recursList(path)</code> - get recursive listing of path</p>
<p><code>fsd.getMount(path)</code> - get table, containing information about fs, mounted at path</p>
<p><code>fsd.getInfo(path)</code> - get owner, permissions and link target of path</p>
<p><code>fsd.saveFs(mountPath)</code> - save filesystem, mounted at mountPath to disk</p>
<p><code>fsd.loadFs(mountPath)</code> - get filesystem info from disk</p>
<p><code>fsd.sync()</code> - save all the filesystems to disk</p>
<p><code>fsd.deleteNode(path)</code> - remove node information</p>
<p><code>fsd.setNode(path, owner, perms, linkto)</code> - set node info (nil means value stays the same)</p>
<p><code>fsd.mount(device, filesystem, mountPath)</code> - mount device as filesystem on mountPath</p>
<p><code>fsd.umountDev(device)</code> - unmount device</p>
<p><code>fsd.unmountPath(mountPath)</code> - umoun device, mounted at path</p>
<p><code>fsd.getMounts()</code> - get table with currently mounted filesystems</p>
<p><code>fsd.pipe()</code> - get two linked pipes. (one to write, another to read)</p>

        </div>

    </div>]