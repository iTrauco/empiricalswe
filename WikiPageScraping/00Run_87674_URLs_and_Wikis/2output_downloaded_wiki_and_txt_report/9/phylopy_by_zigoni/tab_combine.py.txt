[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#%E6%95%B4%E5%90%88%E6%8B%BC%E6%8E%A5%E5%A4%9A%E4%B8%AA%E5%9F%BA%E5%9B%A0%E7%9A%84%E5%BA%8F%E5%88%97" id="user-content-整合拼接多个基因的序列"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>整合拼接多个基因的序列</h2>
<p><strong>为了完成目标，需要有以下的输入文件：</strong></p>
<ul>
<li>包含所有基因名称的列表文件</li>
<li>包含所有个体名称的列表文件</li>
<li>包含各个基因序列的序列文件</li>
</ul>
<p><strong>combine.py 脚本接受如下参数：</strong></p>
<ul>
<li>-g 基因列表文件名称，默认为genes.txt</li>
<li>-n 个体列表文件名称，默认为names.txt</li>
<li>-f 输出文件格式，可选seq、nex、phy和meg，默认为seq（即phylopy使用的序列文件格式）</li>
<li>-o 输出文件名称，这个名称不包含扩展名，默认为combine</li>
<li>-p 加上此选项将会输出一个RAxML风格的分区文件partition.txt</li>
<li>-s 加上此选项将会输出各个基因的文件，这些文件中仅包含在names.txt中列出的个体，如果输入文件中缺少某些个体，这些个体的序列将会由“?”代替</li>
</ul>
<p>一个典型的命令如下：</p>
<pre><code>combine.py -g used_genes.txt -n fish_individuals.txt -f nex -o dataset1 -p
</code></pre>
<p><strong>注意：</strong></p>
<ul>
<li>各基因的序列文件名必须是“基因名.seq”的形式，例如RAG1.seq</li>
<li>各基因的序列文件中不必包含所有的个体序列（实际工作中经常有缺失的现象），缺失的个体会自动用“?”补齐，同时脚本运行时会提示各基因缺失那些个体</li>
</ul>

        </div>

    </div>]