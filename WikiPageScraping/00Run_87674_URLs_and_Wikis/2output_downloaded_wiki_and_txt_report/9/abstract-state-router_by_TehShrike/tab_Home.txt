[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#things-i-would-like-fixed-in-an-eventual-rewrite" id="user-content-things-i-would-like-fixed-in-an-eventual-rewrite"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Things I would like fixed in an eventual rewrite</h1>
<ul>
<li>all state structure passed in to state router once at construction - no <code>addState</code> method, no
mutability
<ul>
<li>allow cycles in state dependencies - make child states not aware of their parents</li>
<li>throw errors at construction-time if a state doesn't have a parent</li>
<li>no <code>data</code> property on states</li>
</ul>
</li>
<li>ability to lazy-load templates and activation functions
<ul>
<li>template/activate need to be able to be supplied by functions that return promises</li>
</ul>
</li>
<li>more explicit transition hooks</li>
<li>route guards that fire when the user tries to navigate <em>away</em> from a state, and allow the code to stop the transition from happening</li>
<li>the ability to delegate to/call component methods instead of activate/guard/whatever methods passed in with the state object</li>
<li>server-side rendering: add optional "serverSideRender" function to renderer API
<ul>
<li>or... maybe just implement it in its own module that takes the same state array</li>
</ul>
</li>
<li>support "not found" pages by just adding a <code>*</code> route
<ul>
<li>turn <code>notFound</code> event into a regular error</li>
</ul>
</li>
<li>change the resolve function to take an arguments object instead of two ordered arguments before the callback</li>
<li>state transition events should always emit the full list of states being transitioned to (maybe even all the states being transitioned from) instead of just the leaf state.  Essentially <a href="https://github.com/TehShrike/abstract-state-router/pull/113">https://github.com/TehShrike/abstract-state-router/pull/113</a> but replace the first argument with the third argument.</li>
<li>require that a hash-brown-router location implementation always be passed in - don't include the hash one by default
<ul>
<li>don't force people to instantiate the hash-brown-router, just the location</li>
</ul>
</li>
<li>
<code>stateIsActive</code> should iterate over the full list of parameters that affect the state (its parameters and the parameters of its ancestors), instead of just the properties on the object that were passed in</li>
<li>drop the <code>reset</code> method of renderers
<ul>
<li>it will make component code work the way people expect <a href="https://github.com/TehShrike/svelte-state-renderer/issues/7#issuecomment-302726671">https://github.com/TehShrike/svelte-state-renderer/issues/7#issuecomment-302726671</a>
</li>
<li>it will make abstract-state-router code a lot more simple: no more create/change/destroy, just create/destroy</li>
</ul>
</li>
<li>The ability to define placeholder components for states
<ul>
<li>maybe the ability to set a global placeholder component?</li>
</ul>
</li>
</ul>
<p>I'll add to this list as I think of stuff</p>

        </div>

    </div>]