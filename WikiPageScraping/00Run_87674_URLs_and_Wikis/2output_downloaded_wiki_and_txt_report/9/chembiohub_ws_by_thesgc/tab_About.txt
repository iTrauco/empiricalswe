[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>###ChemiReg</p>
<p>ChemiReg allows groups to manage and search their compound data securely. You can import a file of chemical compounds in a variety of standard formats, or sketch molecules directly within the application. Each unique compound is then recorded, given an identifier and validated. We provide configurable validation within each secure project. This allows your administrators to define who has access to your project to create, view and update the compound information, as well as what information is needed as a minimum for each compound. The ChemBio Hub team can provide curation support to ensure data is recorded consistently and in line with the standard repositories. This greatly simplifies the process of depositing data into ChEMBL and PubChem and ensures that preparing data for publication is also much easier.</p>
<p>###InventoryReg</p>
<p>InventoryReg allows groups to manage and search their chemical inventory data securely. A simple upload function allows users to import details in a variety of standard formats. Each item is then given a unique identifier, validated and recorded. Built in security and configuration features mean you define who has access to your project to create, view and update the compound information, as well as what information is needed as a minimum for each item. The ChemBio Hub team can provide curation support to ensure data is recorded consistently. The web-based system provides access from any device, giving flexible access to information about materials in your lab.</p>
<p>A sophisticated search function means you can be confident of getting back all relevant information about the material you are looking for â€“ whether compound, antibody, plasmid or peptide.</p>
<p>###3rd party tools</p>
<p>A great deal of the ChemBio Hub functionality is provided by extremely useful and well maintained 3rd party tools. For full details of the tools we use please look at the ng-chem bower file or the pip and anaconda files within chembiohub_ws.</p>
<p>##How to install and run ChemBio Hub platform</p>
<p>See <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Installation">Installation</a></p>
<p>##Backend Technology</p>
<p>ChemBio Hub platform is built on Django, the Python CMS. You can find out more information on Django <a href="https://www.djangoproject.com/" rel="nofollow">here</a>. ChemBio Hub Platform currently uses version 1.7 of Django, with Python version 2.7.</p>
<p>Django is used primarily to provide a web service architecture for the applications and the user and login functionality. Django was primariliy selected for this purpose because of its open source nature, written in the Python programming language for interaction with chemically-aware software such as RDKit via ChEMBL's web service architecture and also with existing python tools for integrating with the University of Oxford's WebAuth single sign on system.</p>
<p>###Other backend services</p>
<p>ChemBio Hub installation scripts preconfigure a number of backend services including Redis, PostgreSQL, Elasticsearch etc. More details can be found on the [Running the python server and database in production] page</p>
<p>###ChEMBL WebServices</p>
<p>We have based the chemistry registration parts of the ChemBio Hub platform on the <a href="http://chembl.blogspot.co.uk/2014/06/mychembl-launchpadlaunched.html" rel="nofollow">myChEMBL</a> platform provided by <a href="https://www.ebi.ac.uk/chembl/" rel="nofollow">ChEMBL</a>. This has formed the base of our virtual machine which houses the ChemBio Hub platform and allows us to build extra web service based tasks for chemical registration on top of a proven chemically-aware system.</p>
<p>###Login</p>
<p>By default, login is handled by the django login system.</p>
<p>We also include and example custom deployment of ChemBio Hub where the login credentials are checked in python <a href="../blob/master/example_custom_deployment/backends.py">against a different internal database</a>.</p>
<p>As the system is built with Django, theoretically any of the <a href="https://www.djangopackages.com/grids/g/authentication/" rel="nofollow">login mechanisms supported by django</a> could be integrated. Please raise a ticket if you have interest in this.
We have integrated the login parts of our application with University of Oxford's <a href="https://github.com/ox-it/django-webauth">WebAuth system</a> but this is not included in the default install listed here.
###RDKit</p>
<p>For our own chemical registration tasks we utilise <a href="http://rdkit.org/" rel="nofollow">RDKit</a> chemical toolkit. This is used to parse and check SD files, generate chemical data from SMILES strings, normalise structures ready for registration and also perform similarity searching of the registration database within ChemiReg.</p>

        </div>

    </div>]