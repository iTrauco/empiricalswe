[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The project model in ChemBio Hub defines the data model used for the compound batch API.
User permissions also refer to the project API</p>
<ul>
<li><a href="#get-projects">GET Projects to list all projects</a></li>
<li><a href="#get-project">GET Project to get a single projects</a></li>
<li><a href="#post-project">POST Project to create a project</a></li>
<li><a href="#patch-project">PATCH Project to update a project</a></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#get-projects" id="user-content-get-projects"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>GET Projects</strong>
</h2>
<p>Return a list of project objects on the system and all of the fields information associated with them.
This resource is used to provide the projects for the project list page as well as the field schemata that are used in the search page table views and the data editing system.</p>
<ul>
<li>
<p><strong>Testing</strong></p>
<ul>
<li>This API is covered by a scenario for the <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_tests/features/project_list_page.feature">project list</a> and a further scenario for <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_tests/features/restricted_fields.feature">restricted fields</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/config.js#L124">Front end code where this is used</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L389">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_projects/?format={format}&amp;limit={limit}&amp;offset={offset}</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>GET</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">format</td>
<td>json if Ajax</td>
<td>Data format to return</td>
<td>json, xml, yaml</td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">limit</td>
<td>20</td>
<td>Number of results to return</td>
<td></td>
</tr>
<tr>
<td align="center">offset</td>
<td>0</td>
<td>How far to jump backwards</td>
<td></td>
</tr>
<tr>
<td align="center">do_cache</td>
<td></td>
<td>Whether to use or set a cached version</td>
<td>Any true-thy value means true</td>
</tr>
<tr>
<td align="center">id__...</td>
<td>None</td>
<td>Filter for a given project id *</td>
<td></td>
</tr>
<tr>
<td align="center">project_key__...</td>
<td>None</td>
<td>Filter for a given project key *</td>
<td></td>
</tr>
<tr>
<td align="center">project_type__...</td>
<td>None</td>
<td>Filter for which project type this is e.g. project_type__saved_search_project_type=false *</td>
<td></td>
</tr>
</tbody>
</table>
<p>* Find out more about how filtering works in the <a href="http://django-tastypie.readthedocs.io/en/latest/resources.html#basic-filtering" rel="nofollow">tastypie documentation</a></p>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 200 <br/></p>
</li>
<li>
<p>**Notable response attributes **</p>
</li>
</ul>
</li>
</ul>
<p><em>the readonly attributes are described here as they are used in the front end, for the writable attributes needed to create a project see below in the <a href="#post-project">POST Project API</a></em></p>
<table>
<thead>
<tr>
<th>Param</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>tabular_data_schema</td>
<td>The tabular data schema object which is used in the back end code to configure the <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_chem_api/resources.py#L655">export and indexing</a> and in the front end code to configure the <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/config.js#L151">tabular data views (via handsontable)</a> see the <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Tabular-Data-Schema-API">Tabular data schema API</a>
</td>
</tr>
<tr>
<td>objects</td>
<td>The list of project objects</td>
</tr>
<tr>
<td>objects[].name</td>
<td>The name of the project</td>
</tr>
<tr>
<td>objects[].editor</td>
<td>Whether the user making the request has the editor privilege for this project</td>
</tr>
<tr>
<td>objects[].owner</td>
<td>Whether the user making the request has the owner privilege for this project</td>
</tr>
<tr>
<td>objects[].is_superuser</td>
<td>Whether this is a superuser (superusers have all permissions to all projects)</td>
</tr>
<tr>
<td>objects[].project_counter_start</td>
<td>Point where the incremental ID field starts for this project</td>
</tr>
<tr>
<td>objects[].project_key</td>
<td>needs deprecating - slug used in the addcompounds page, not really used elsewhere</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>objects[].project_type</td>
<td>The project type object - determines which template is to be used, see the <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Project-Type-API">Project Type API</a>
</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>objects[].custom_field_config</td>
<td>The custom field config object - one per project - contains the fields used in this project</td>
</tr>
<tr>
<td>objects[].custom_field_config.project_data_fields[]</td>
<td>The record of all the fields attached to this project - see how these records are generated on the <a href="#post-project">POST Project API</a>
</td>
</tr>
<tr>
<td>objects[].custom_field_config.project_data_fields[].edit_form</td>
<td>The edit form that is <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/config.js#L95">used to generate</a> a JSON configuration for <a href="https://github.com/thesgc/ng-chem/blob/master/app/views/add-single-compound.html#L47">submitting to angular schema form</a>
</td>
</tr>
<tr>
<td>objects[].custom_field_config.project_data_fields[].edit_schema</td>
<td>The edit schema that is <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/config.js#L82">used to generate</a> a JSON configuration for <a href="https://github.com/thesgc/ng-chem/blob/master/app/views/add-single-compound.html#L47">submitting to angular schema form</a>
</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>Content:</strong></li>
</ul>

<pre><code>        {
            "meta": {
                "limit": 20,
                "next": null,
                "offset": 0,
                "previous": null,
                "total_count": 1
            },
            "objects": [{
                "assays_configured": false,
                "created": "2016-04-29T08:47:08.507790",
                "created_by": "/dev/api/users/2",
                "custom_field_config": {
                    "created": "2016-04-11T04:27:19.136221",
                    "created_by": "/dev/api/users/2",
                    "data_type": null,
                    "id": 1,
                    "modified": "2016-04-29T08:47:36.878583",
                    "name": "16__test project__project__config",
                    "project_data_fields": [{
                        "allowed_values": "",
                        "created": "2016-04-11T04:27:19.165949",
                        "default": "",
                        "description": "",
                        "edit_form": {
                            "form": [{
                                "data": "custom_fields.Description",
                                "description": "",
                                "disableSuccessState": true,
                                "feedback": true,
                                "key": "Description",
                                "knownBy": "Description",
                                "position": 0,
                                "title": "Description"
                            }]
                        },
                        "edit_schema": {
                            "properties": {
                                "Description": {
                                    "className": "htCenter htMiddle ",
                                    "default": "",
                                    "placeholder": "",
                                    "renderer_named": "defaultCustomFieldRenderer",
                                    "title": "Description",
                                    "type": "string"
                                }
                            }
                        },
                        "field_key": "",
                        "field_type": "char",
                        "id": 1,
                        "modified": "2016-04-26T09:02:47.284708",
                        "name": "Description",
                        "open_or_restricted": "restricted",
                        "part_of_blinded_key": false,
                        "position": 0,
                        "required": false,
                        "resource_uri": "/dev/api/cbh_chemreg_datapoint_fields/1",
                        "view_form": {
                            "form": {
                                "key": "Description",
                                "type": "copyfield"
                            }
                        }
                    }, ...],
                    "resource_uri": "/dev/api/cbh_chemreg_custom_field_config/1"
                },
                "editor": true,
                "id": 16,
                "is_default": false,
                "modified": "2016-04-29T08:47:36.868155",
                "name": "test project",
                "owner": true,
                "project_counter_start": 1,
                "project_key": "test-project",
                "project_type": {
                    "copy_action_name": "Clone Item",
                    "created": "2016-04-10T10:17:38.226437",
                    "custom_field_config_template": [],
                    "custom_field_config_template_id": null,
                    "id": 2,
                    "modified": "2016-04-22T05:50:46.666551",
                    "name": "Inventory",
                    "plate_map_project_type": false,
                    "project_template": {},
                    "resource_uri": "/dev/api/cbh_project_types/2",
                    "saved_search_project_type": false,
                    "set_as_default": false,
                    "show_compounds": false
                },
                "resource_uri": "/dev/api/cbh_projects/16",
                "users_restricted_fields": []
            }],
            "tabular_data_schema": {
                "included_in_tables": {
                    "add_page": {
                        "default": ["project_counter", "image", "id", "originalSmiles", "properties.action", "standardInchiKey", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name"]
                    },
                    "cbh.archiveitems": {
                        "default": ["project_counter", "properties.archived", "image", "uuid", "projectfull.name", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name", "created_by", "timestamp", "id", "multiple_batch_id"]
                    },
                    "cbh.restoreitems": {
                        "default": ["project_counter", "properties.archived", "image", "uuid", "projectfull.name", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name", "created_by", "timestamp", "id", "multiple_batch_id"]
                    },
                    "cbh.searchv2": {
                        "default": ["project_counter", "clone", "image", "uuid", "projectfull.name", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name", "created_by", "timestamp", "id", "multiple_batch_id", "canonical_smiles", "standard_inchi", "standard_inchi_key", "related_molregno.compoundproperties.full_mwt", "related_molregno.compoundproperties.full_molformula", "related_molregno.compoundproperties.alogp"]
                    },
                    "export": {
                        "default": ["project_counter", "image", "uuid", "projectfull.name", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name", "created_by", "timestamp", "id", "multiple_batch_id", "canonical_smiles", "standard_inchi", "standard_inchi_key", "related_molregno.compoundproperties.full_mwt", "related_molregno.compoundproperties.full_molformula", "related_molregno.compoundproperties.alogp"]
                    },
                    "indexing": {
                        "default": ["project_counter", "uuid", "projectfull.name", "properties.archived", "projectfull.project_type.saved_search_project_type", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name", "created_by", "timestamp", "id", "multiple_batch_id", "canonical_smiles", "standard_inchi", "standard_inchi_key", "related_molregno.compoundproperties.full_mwt", "related_molregno.compoundproperties.full_molformula", "related_molregno.compoundproperties.alogp"]
                    },
                    "indexing_temp": {
                        "default": ["row", "originalSmiles", "properties.action", "standardInchiKey", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name", "created_by", "timestamp", "id", "multiple_batch_id"]
                    },
                    "seach_page_edit_mode": {
                        "default": ["project_counter", "properties.archived", "clone", "image", "uuid", "projectfull.name", "custom_fields.Description", "custom_fields.Barcode", "custom_fields.Attachments", "custom_fields.Name"]
                    }
                },
                "schema": {
                    "canonical_smiles": {
                        "className": "htCenter htMiddle ",
                        "data": "canonical_smiles",
                        "editable": false,
                        "field_type": "string",
                        "knownBy": "SMILES",
                        "noSort": true,
                        "searchFormType": "pick_from_list"
                    },
                    ...,
                    "custom_fields.Barcode": {
                        "className": "htCenter htMiddle ",
                        "data": "custom_fields.Barcode",
                        "editable": true,
                        "editor": false,
                        "knownBy": "Barcode",
                        "project_specific_schema": {
                            "16": {
                                "field_type": "char",
                                "open_or_restricted": "open",
                                "renderer_named": "defaultCustomFieldRenderer"
                            }
                        },
                        "projects": [],
                        "renderer_named": "customFieldRenderer"
                    },
                   ...
                }
            },
            "user": {
                "can_create_and_own_projects": true,
                "can_view_assayreg": true,
                "can_view_chemreg": true,
                "date_joined": "2016-04-10T10:17:32.965871",
                "display_name": "superuser",
                "first_name": "",
                "id": 2,
                "is_logged_in": true,
                "is_staff": true,
                "is_superuser": true,
                "last_login": "2016-04-23T12:01:45.340663",
                "last_name": "",
                "resource_uri": "/dev/api/users/2",
                "username": "superuser"
            },
            "user_restricted_fieldnames": {
                "16": []
            }
        }
</code></pre>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>Schema available at   /{namespace}/api/cbh_projects/schema?format=json or view a <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Copy-of-Project-Schema">Copy of Project Schema</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR</p>
<ul>
<li>
<strong>Code:</strong> 403 BAD REQUEST <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<p><strong>Sample Call:</strong></p>
<pre><code>  $http({  method: "get",
              url: configuration.cbh_projects.list_endpoint,
              params: {"limit":10000}, });
</code></pre>
</li>
<li>
<p><strong>Notes:</strong></p>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#get-project" id="user-content-get-project"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>GET Project</strong>
</h2>
<p>Return a single project by ID</p>
<ul>
<li>
<p><strong>Testing</strong></p>
<ul>
<li>This API is not yet tested</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong>Used when editing a project, loading up the edit project pop-up modal <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/projectfields.js#L262">here</a>, calling the injected service which is set up <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/services/projectfactory.js#L22">here</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L389">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_projects/{pk}?format={format}</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>GET</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">format</td>
<td>json if Ajax</td>
<td>Data format to return</td>
<td>json, xml, yaml</td>
</tr>
<tr>
<td align="center">pk</td>
<td>None</td>
<td>The ID of the project</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 200 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>
</li>
</ul>

<pre><code>   {
                "assays_configured": false,
                "created": "2016-04-29T08:47:08.507790",
                "created_by": "/dev/api/users/2",
                "custom_field_config": {
                    "created": "2016-04-11T04:27:19.136221",
                    "created_by": "/dev/api/users/2",
                    "data_type": null,
                    "id": 1,
                    "modified": "2016-04-29T08:47:36.878583",
                    "name": "16__test project__project__config",
                    "project_data_fields": [{
                        "allowed_values": "",
                        "created": "2016-04-11T04:27:19.165949",
                        "default": "",
                        "description": "",
                        "edit_form": {
                            "form": [{
                                "data": "custom_fields.gggggg",
                                "description": "",
                                "disableSuccessState": true,
                                "feedback": true,
                                "key": "gggggg",
                                "knownBy": "gggggg",
                                "position": 0,
                                "title": "gggggg"
                            }]
                        },
                        "edit_schema": {
                            "properties": {
                                "gggggg": {
                                    "className": "htCenter htMiddle ",
                                    "default": "",
                                    "placeholder": "",
                                    "renderer_named": "defaultCustomFieldRenderer",
                                    "title": "gggggg",
                                    "type": "string"
                                }
                            }
                        },
                        "field_key": "",
                        "field_type": "char",
                        "handsontable": {
                            "className": "htCenter htMiddle ",
                            "data": "custom_fields.gggggg",
                            "editable": true,
                            "editor": false,
                            "knownBy": "gggggg",
                            "renderer_named": "customFieldRenderer"
                        },
                        "id": 1,
                        "modified": "2016-04-26T09:02:47.284708",
                        "name": "gggggg",
                        "open_or_restricted": "restricted",
                        "part_of_blinded_key": false,
                        "position": 0,
                        "required": false,
                        "resource_uri": "/dev/api/cbh_chemreg_datapoint_fields/1",
                        "view_form": {
                            "form": {
                                "key": "gggggg",
                                "type": "copyfield"
                            }
                        }
                    }, {
                        "allowed_values": "",
                        "created": "2016-04-21T01:50:42.258245",
                        "default": "",
                        "description": "",
                        "edit_form": {
                            "form": [{
                                "data": "custom_fields.fffff",
                                "description": "",
                                "disableSuccessState": true,
                                "feedback": true,
                                "key": "fffff",
                                "knownBy": "fffff",
                                "position": 1,
                                "title": "fffff"
                            }]
                        },
                        "edit_schema": {
                            "properties": {
                                "fffff": {
                                    "className": "htCenter htMiddle ",
                                    "default": "",
                                    "placeholder": "",
                                    "renderer_named": "defaultCustomFieldRenderer",
                                    "title": "fffff",
                                    "type": "string"
                                }
                            }
                        },
                        "field_key": "",
                        "field_type": "char",
                        "handsontable": {
                            "className": "htCenter htMiddle ",
                            "data": "custom_fields.fffff",
                            "editable": true,
                            "editor": false,
                            "knownBy": "fffff",
                            "renderer_named": "customFieldRenderer"
                        },
                        "id": 2,
                        "modified": "2016-04-26T09:02:47.286115",
                        "name": "fffff",
                        "open_or_restricted": "open",
                        "part_of_blinded_key": false,
                        "position": 1,
                        "required": false,
                        "resource_uri": "/dev/api/cbh_chemreg_datapoint_fields/2",
                        "view_form": {
                            "form": {
                                "key": "fffff",
                                "type": "copyfield"
                            }
                        }
                    }, {
                        "allowed_values": "",
                        "created": "2016-04-25T03:38:12.636090",
                        "default": "",
                        "description": "",
                        "edit_form": {
                            "form": [{
                                "data": "custom_fields.files",
                                "default": {
                                    "attachments": []
                                },
                                "description": "",
                                "disableSuccessState": true,
                                "feedback": true,
                                "key": "files",
                                "knownBy": "files",
                                "position": 2,
                                "title": "files",
                                "uploadOptions": {
                                    "modal": {
                                        "flow": {
                                            "dropEnabled": false,
                                            "imageFunction": "fetchImage(url)",
                                            "imageOnly": false,
                                            "init": {},
                                            "removeFile": "removeFile(formkey, index, url)",
                                            "sizeCheck": "sizeCheck(file, formkey)",
                                            "success": "success(file, formkey)"
                                        },
                                        "title": "Modal Title specified here"
                                    }
                                }
                            }]
                        },
                        "edit_schema": {
                            "properties": {
                                "files": {
                                    "className": "htCenter htMiddle ",
                                    "default": {
                                        "attachments": []
                                    },
                                    "format": "file_upload",
                                    "icon": "&lt;span class ='glyphicon glyphicon-paperclip'&gt;&lt;/span&gt;",
                                    "placeholder": "",
                                    "renderer_named": "fileUploadRenderer",
                                    "title": "files",
                                    "type": "object"
                                }
                            }
                        },
                        "field_key": "",
                        "field_type": "file",
                        "handsontable": {
                            "className": "htCenter htMiddle ",
                            "data": "custom_fields.files",
                            "editable": true,
                            "editor": false,
                            "knownBy": "files",
                            "renderer_named": "customFieldRenderer"
                        },
                        "id": 17,
                        "modified": "2016-04-26T09:02:47.287443",
                        "name": "files",
                        "open_or_restricted": "open",
                        "part_of_blinded_key": false,
                        "position": 2,
                        "required": false,
                        "resource_uri": "/dev/api/cbh_chemreg_datapoint_fields/17",
                        "view_form": {
                            "form": {
                                "key": "files",
                                "type": "attachmentlist"
                            }
                        }
                    }, {
                        "allowed_values": "ggg, gg",
                        "created": "2016-04-26T09:02:47.258570",
                        "default": "",
                        "description": "",
                        "edit_form": {
                            "form": [{
                                "data": "custom_fields.ggggggg",
                                "description": "",
                                "disableSuccessState": true,
                                "feedback": true,
                                "key": "ggggggg",
                                "knownBy": "ggggggg",
                                "options": {
                                    "dataArrivesEventName": "autoCompleteTaggingData",
                                    "fetchDataEventName": "openedTaggingDropdown",
                                    "multiple": true,
                                    "staticItems": [{
                                        "doc_count": 0,
                                        "key": "gg"
                                    }, {
                                        "doc_count": 0,
                                        "key": "ggg"
                                    }],
                                    "tagging": true
                                },
                                "placeholder": "Choose...",
                                "position": 3,
                                "title": "ggggggg",
                                "type": "filtereddropdown"
                            }]
                        },
                        "edit_schema": {
                            "properties": {
                                "ggggggg": {
                                    "className": "htCenter htMiddle ",
                                    "default": [],
                                    "format": "filtereddropdown",
                                    "icon": "&lt;span class ='glyphicon glyphicon-tags'&gt;&lt;/span&gt;",
                                    "items": {
                                        "type": "string"
                                    },
                                    "placeholder": "",
                                    "renderer_named": "defaultCustomFieldRenderer",
                                    "title": "ggggggg",
                                    "type": "array"
                                }
                            }
                        },
                        "field_key": "",
                        "field_type": "uiselecttags",
                        "handsontable": {
                            "className": "htCenter htMiddle ",
                            "data": "custom_fields.ggggggg",
                            "editable": true,
                            "editor": false,
                            "knownBy": "ggggggg",
                            "renderer_named": "customFieldRenderer"
                        },
                        "id": 18,
                        "modified": "2016-04-26T09:02:47.288982",
                        "name": "ggggggg",
                        "open_or_restricted": "open",
                        "part_of_blinded_key": false,
                        "position": 3,
                        "required": false,
                        "resource_uri": "/dev/api/cbh_chemreg_datapoint_fields/18",
                        "view_form": {
                            "form": {
                                "key": "ggggggg",
                                "type": "copyfield"
                            }
                        }
                    }],
                    "resource_uri": "/dev/api/cbh_chemreg_custom_field_config/1"
                },
                "editor": true,
                "id": 16,
                "is_default": false,
                "modified": "2016-04-29T08:47:36.868155",
                "name": "test project",
                "owner": true,
                "project_counter_start": 1,
                "project_key": "test-project",
                "project_type": {
                    "copy_action_name": "Clone Item",
                    "created": "2016-04-10T10:17:38.226437",
                    "custom_field_config_template": [],
                    "custom_field_config_template_id": null,
                    "id": 2,
                    "modified": "2016-04-22T05:50:46.666551",
                    "name": "Inventory",
                    "plate_map_project_type": false,
                    "project_template": {},
                    "resource_uri": "/dev/api/cbh_project_types/2",
                    "saved_search_project_type": false,
                    "set_as_default": false,
                    "show_compounds": false
                },
                "resource_uri": "/dev/api/cbh_projects/16",
                "user": {
                    "can_create_and_own_projects": true,
                    "can_view_assayreg": true,
                    "can_view_chemreg": true,
                    "date_joined": "2016-04-10T10:17:32.965871",
                    "display_name": "superuser",
                    "first_name": "",
                    "id": 2,
                    "is_logged_in": true,
                    "is_staff": true,
                    "is_superuser": true,
                    "last_login": "2016-04-23T12:01:45.340663",
                    "last_name": "",
                    "resource_uri": "/dev/api/users/2",
                    "username": "superuser"
                },
                "users_restricted_fields": []
            }
</code></pre>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>Schema available at   /{namespace}/api/cbh_projects/schema?format=json or view a <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Copy-of-Project-Schema">Copy of Project Schema</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR If the user you request does not exist</p>
<ul>
<li>
<strong>Code:</strong> 404 Nothing here <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<p>{ error : "The error name from the back end" , traceback : "The traceback in python"}</p>
<ul>
<li>
<strong>Code:</strong> 409 INTEGRITY ERROR / CONFLICT <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<p><strong>Sample Call:</strong></p>
<pre><code>  var promise = $http.get("/[your namespace]/api/cbh_projects/56");
  promise.then(function(data){
       //do something with the data         
  });
</code></pre>
</li>
<li>
<p><strong>Notes:</strong></p>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-project" id="user-content-post-project"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Project</strong>
</h2>
<p>Create a project - this method is used when adding new projects via a POST request and adding the schemata. For updating permissions see the <a class="internal absent" href="/thesgc/chembiohub_ws/wiki/Project-Permissions-API">Project Permissions API</a></p>
<ul>
<li>
<p><strong>Testing</strong></p>
<ul>
<li>This API is covered by a scenario for the <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_tests/features/project_create.feature">project creation</a> and a further scenario for <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_tests/features/project_name.feature">name uniqueness</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/projectfields.js#L347">Used in the front end to create projects</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L1306">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/project/</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<pre><code>None
</code></pre>
<ul>
<li>
<p>Data Params</p>
<pre><code>  {
   "project_type": "/dev/api/cbh_project_types/2",
   "custom_field_config": {
  "name": "",
  "project_data_fields": [{
  	"field_type": "char",
  	"open_or_restricted": "open",
  	"required": false,
  	"name": "My Field"
  }]
  },
   "project_counter_start": 1,
   "name": "My Project"
     }
</code></pre>
</li>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 201 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>
</li>
<li>
<p><strong>Create Schema</strong></p>
<pre><code> * Schema available at   /{namespace}/api/cbh_projects/schema?format=json or view a [[Copy of Project Schema]]
</code></pre>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application or have no CSRF token</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR if there is something wrong with the data</p>
<ul>
<li>
<strong>Code:</strong> 403 BAD REQUEST <br/>
<strong>Content:</strong>
</li>
</ul>
<p>OR if the project name is not unique</p>
<ul>
<li>
<strong>Code:</strong> 409 Conflict <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li><strong>Sample Call:</strong></li>
</ul>

<p>angular.module('chembiohubAssayApp')
.controller('projectController', ['$http', 'urlConfig', function ($resource, urlConfig) {</p>
<pre><code>    var namespace = "chembiohub";
    $http.defaults.headers.post['X-CSRFToken'] = $cookies[namespace + "csrftoken"];
    $http.post(urlConfig.cbh_projects.list_endpoint,{// A valid project object - see schema});
</code></pre>
<p>});</p>
<ul>
<li><strong>Notes:</strong></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#patch-project" id="user-content-patch-project"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>PATCH Project</strong>
</h2>
<p>Update a project - this method is used when adding new projects via a PATCH request and adding the schemata. For updating permissions see the <a class="internal absent" href="/thesgc/chembiohub_ws/wiki/Project-Permissions-API">Project Permissions API</a></p>
<ul>
<li>
<p><strong>Testing</strong></p>
<ul>
<li>This API is covered by a scenario for the <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_tests/features/project_update.feature">project update</a> and a further scenario for <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_tests/features/project_name.feature">name uniqueness</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/projectfields.js#L350">Used in the front end to create projects</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L1306">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/project/{pk}/</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">pk</td>
<td>Default None</td>
<td>The ID of the project you are trying to update</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<pre><code>None
</code></pre>
<ul>
<li>
<p>Data Params</p>
<pre><code>  {
   "project_type": "/dev/api/cbh_project_types/2",  #The representation of the project Type being used - can take the form of a URI or {"pk" : 2} or a whole project type object if you want that to be updated
   "custom_field_config": {
  "name": "",   //name will be filled in on the backend
  "project_data_fields": [{              //Only these 4 values are requred in order to create a project field
  	"field_type": "char",          // Choices for the field type can be found in the SkinningConfig API
  	"open_or_restricted": "open",  // Either open to viewers or restricted to owners/editors of this project
  	"required": false,             // Whether the field you are adding is required
  	"name": "My Field"             // Name of the field
  }]
  },
   "project_counter_start": 1,               // Starting point for the increment field
   "name": "My Project",                     // Project name
   "id" : 1,                                 // ID
       "resource_uri" : "/dev/api/cbh_projects/1"  // URI
     }
</code></pre>
</li>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 202 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>
</li>
<li>
<p><strong>Create Schema</strong></p>
<pre><code> * Schema available at   /{namespace}/api/cbh_projects/schema?format=json or view a [[Copy of Project Schema]]
</code></pre>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application or have no CSRF token</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR if there is something wrong with the data</p>
<ul>
<li>
<strong>Code:</strong> 403 BAD REQUEST <br/>
<strong>Content:</strong>
</li>
</ul>
<p>OR if the project name is not unique</p>
<ul>
<li>
<strong>Code:</strong> 409 Conflict <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li><strong>Sample Call:</strong></li>
</ul>

<p>angular.module('chembiohubAssayApp')
.controller('projectController', ['$http', 'urlConfig', function ($resource, urlConfig) {</p>
<pre><code>    var namespace = "chembiohub";
    $http.defaults.headers.patch['X-CSRFToken'] = $cookies[namespace + "csrftoken"];
    var data =  {
     "project_type": "/dev/api/cbh_project_types/2",  #The representation of the project Type being used - can take the form of a URI or {"pk" : 2} or a whole project type object if you want that to be updated
     "custom_field_config": {
	"name": "",   //name will be filled in on the backend
	"project_data_fields": [{              //Only these 4 values are requred in order to create a project field
		"field_type": "char",          // Choices for the field type can be found in the SkinningConfig API
		"open_or_restricted": "open",  // Either open to viewers or restricted to owners/editors of this project
		"required": false,             // Whether the field you are adding is required
		"name": "My Field"             // Name of the field
	}]
    },
     "project_counter_start": 1,               // Starting point for the increment field
     "name": "My Project",                     // Project name
     "id" : 1,                                 // ID
         "resource_uri" : "/dev/api/cbh_projects/1"  // URI
       };
    $http.patch(data.resource_uri , data);
</code></pre>
<p>});</p>
<ul>
<li><strong>Notes:</strong></li>
</ul>

        </div>

    </div>]