[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <ul>
<li><a href="#get-project-types">GET Project Types</a></li>
<li><a href="#get-project-type">GET Project Type</a></li>
<li><a href="#post-project-type----untested">POST Project Type --untested</a></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#get-project-types" id="user-content-get-project-types"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>GET Project Types</strong>
</h2>
<p>Return a list of project type objects on the system.
Note that currently the project types are generated on the system using a django fixture. In order to edit these there is currently no front end interface exposed so they can be edited via the <a class="internal absent" href="/thesgc/chembiohub_ws/wiki/Django-admin-site">Django admin site</a></p>
<ul>
<li>
<p><strong>Tests</strong></p>
<ul>
<li>Tests for this API are located <a href="../blob/master/cbh_tests/features/project_types.feature">here</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/search?utf8=%E2%9C%93&amp;q=ProjectTypeFactory&amp;type=Code">Front end code where this is used</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=ProjectTypeResource">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_project_types/?format={format}&amp;limit={limit}&amp;offset={offset}</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>GET</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">format</td>
<td>json if Ajax</td>
<td>Data format to return</td>
<td>json, xml, yaml</td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">limit</td>
<td>20</td>
<td>Number of results to return</td>
<td></td>
</tr>
<tr>
<td align="center">offset</td>
<td>0</td>
<td>How far to jump backwards</td>
<td></td>
</tr>
<tr>
<td align="center">saved_search_project_type</td>
<td>None</td>
<td>Filter for the saved search project type</td>
<td>true OR false</td>
</tr>
<tr>
<td align="center">plate_map_project_type</td>
<td>None</td>
<td>Filter for the plate_map_project_type *</td>
<td>true OR false</td>
</tr>
</tbody>
</table>
<p>* Find out more about how filtering works in the <a href="http://django-tastypie.readthedocs.io/en/latest/resources.html#basic-filtering" rel="nofollow">tastypie documentation</a></p>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 200 <br/></p>
</li>
<li>
<p><strong>Notable response attributes</strong></p>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">objects</td>
<td>The list of project type objects</td>
</tr>
<tr>
<td align="center">objects[].copy_action_name</td>
<td>The name for how the user clones the object changes dependent on the project type, this name comes from the back end and is used in front end buttons see the front end code <a href="https://github.com/thesgc/ng-chem/blob/master/app/views/templates/single-compound-full.html#L7">here</a>
</td>
</tr>
<tr>
<td align="center">objects[].created</td>
<td>Date and time that the project type object was created</td>
</tr>
<tr>
<td align="center">objects[].custom_field_config_template</td>
<td>Used in the building of the project template - see the back end function <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L1103">here</a>
</td>
</tr>
<tr>
<td align="center">objects[].custom_field_config_template_id</td>
<td>If you wish for this project type to include a set of default fields, find an appropriate custom field config ID to use as a template and add it here</td>
</tr>
<tr>
<td align="center">objects[].id</td>
<td>incremental id of the project type</td>
</tr>
<tr>
<td align="center">objects[].modified</td>
<td>modified data of the project type</td>
</tr>
<tr>
<td align="center">objects[].name</td>
<td>Name of the project type</td>
</tr>
<tr>
<td align="center">objects[].plate_map_project_type</td>
<td>Whether this project type is for plate maps</td>
</tr>
<tr>
<td align="center">objects[].project_template</td>
<td>Template set of fields for the projects that use this project type. Acts like a class inheritance meaning users end up creating variations on a project type template</td>
</tr>
<tr>
<td align="center">objects[].resource_uri</td>
<td>resource URI for this project type see the tastypie docs <a href="http://django-tastypie.readthedocs.io/en/latest/resources.html#why-resource-uris" rel="nofollow">here</a>
</td>
</tr>
<tr>
<td align="center">objects[].saved_search_project_type</td>
<td>Whether this project type is to be used in saved searches</td>
</tr>
<tr>
<td align="center">objects[].set_as_default</td>
<td>Whether this project type should be used as the default project type on the system, set back to false if another project type is set as default</td>
</tr>
<tr>
<td align="center">objects[].show_compounds</td>
<td>Whether this project type should show compounds</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>Content:</strong></li>
</ul>

<pre><code>     {
"meta": {
	"limit": 20,
	"next": null,
	"offset": 0,
	"previous": null,
	"total_count": 4
},
"objects": [{
	"copy_action_name": "Clone /&lt;br/&gt; Add Structure",
	"created": "2015-08-10T04:10:32.730562",
	"custom_field_config_template": [],
	"custom_field_config_template_id": -1,
	"id": 1,
	"modified": "2016-05-03T07:22:13.258571",
	"name": "Chemical",
	"plate_map_project_type": false,
	"project_template": {
		"custom_field_config": {
			"name": "",
			"project_data_fields": [{
				"field_type": "char",
				"open_or_restricted": "open",
				"required": false
			}]
		},
		"name": "",
		"project_type": "/staging/api/cbh_project_types/1"
	},
	"resource_uri": "/staging/api/cbh_project_types/1",
	"saved_search_project_type": false,
	"set_as_default": true,
	"show_compounds": true
}, {
	"copy_action_name": "Clone Item",
	"created": "2015-08-10T04:10:48.920679",
	"custom_field_config_template": [],
	"custom_field_config_template_id": -1,
	"id": 2,
	"modified": "2016-04-21T05:15:56.509393",
	"name": "Inventory",
	"plate_map_project_type": false,
	"project_template": {
		"custom_field_config": {
			"name": "",
			"project_data_fields": [{
				"field_type": "char",
				"open_or_restricted": "open",
				"required": false
			}]
		},
		"name": "",
		"project_type": "/staging/api/cbh_project_types/2"
	},
	"resource_uri": "/staging/api/cbh_project_types/2",
	"saved_search_project_type": false,
	"set_as_default": false,
	"show_compounds": false
}, {
	"copy_action_name": "Clone Item",
	"created": "2016-04-21T03:50:44.860445",
	"custom_field_config_template": [],
	"custom_field_config_template_id": null,
	"id": 7,
	"modified": "2016-04-21T03:51:19.279523",
	"name": "Plate Map",
	"plate_map_project_type": true,
	"project_template": {
		"custom_field_config": {
			"name": "",
			"project_data_fields": [{
				"field_type": "char",
				"name": "Name",
				"open_or_restricted": "open",
				"readonly_on_create": true,
				"required": true
			}, {
				"allowed_values": "96,48",
				"field_type": "radios",
				"name": "Plate Size",
				"open_or_restricted": "open",
				"readonly_on_create": true,
				"required": true
			}, {
				"field_type": "char",
				"name": "Description",
				"open_or_restricted": "open",
				"readonly_on_create": true,
				"required": false
			}, {
				"allowed_values": "working,backup",
				"field_type": "radios",
				"name": "Plate Type",
				"open_or_restricted": "open",
				"readonly_on_create": true,
				"required": true
			}]
		},
		"name": "",
		"project_type": "/staging/api/cbh_project_types/7"
	},
	"resource_uri": "/staging/api/cbh_project_types/7",
	"saved_search_project_type": false,
	"set_as_default": false,
	"show_compounds": false
}, {
	"copy_action_name": "Clone /&lt;br/&gt; Add Structure",
	"created": "2016-02-04T07:42:27.123236",
	"custom_field_config_template": [],
	"custom_field_config_template_id": -1,
	"id": 6,
	"modified": "2016-02-04T07:42:27.124791",
	"name": "Saved searches",
	"plate_map_project_type": false,
	"project_template": {
		"custom_field_config": {
			"name": "",
			"project_data_fields": [{
				"field_type": "char",
				"name": "Alias",
				"open_or_restricted": "open",
				"required": false
			}, {
				"field_type": "char",
				"name": "URL",
				"open_or_restricted": "open",
				"required": false
			}]
		},
		"name": "",
		"project_type": "/staging/api/cbh_project_types/6"
	},
	"resource_uri": "/staging/api/cbh_project_types/6",
	"saved_search_project_type": true,
	"set_as_default": false,
	"show_compounds": true
}]
</code></pre>
<p>}</p>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>Schema available at   /{namespace}/api/cbh_project_types/schema?format=json or view a <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Copy-of-Project-Type-Schema">Copy of Project Type Schema</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR</p>
<ul>
<li>
<strong>Code:</strong> 403 BAD REQUEST <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<p><strong>Sample Call:</strong></p>
<pre><code>  $http({  method: "get",
              url: urlConfig.cbh_project_types.list_endpoint,
              params: {"limit":10000}, });
</code></pre>
</li>
<li>
<p><strong>Notes:</strong></p>
<p>Each time that a default project type is set, the back end code ensures that whichever project type was previously set as default is now made no longer a default. See this code <a href="https://github.com/thesgc/cbh_core_model/blob/master/cbh_core_model/models.py#L248">here</a>.</p>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#get-project-type" id="user-content-get-project-type"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>GET Project Type</strong>
</h2>
<p>Return a single project type by ID</p>
<ul>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong>Not currently used in front end</strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=ProjectTypeResource">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_project_types/{pk}?format={format}</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>GET</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">format</td>
<td>json if Ajax</td>
<td>Data format to return</td>
<td>json, xml, yaml</td>
</tr>
<tr>
<td align="center">pk</td>
<td>None</td>
<td>The ID of the user</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 200 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>
</li>
</ul>

<pre><code>     {
"copy_action_name": "Clone /&lt;br/&gt; Add Structure",
"created": "2015-08-10T04:10:32.730562",
"custom_field_config_template": [],
"custom_field_config_template_id": -1,
"id": 1,
"modified": "2016-05-03T07:22:13.258571",
"name": "Chemical",
"plate_map_project_type": false,
"project_template": {},
"resource_uri": "/staging/api/cbh_project_types/1",
"saved_search_project_type": false,
"set_as_default": true,
"show_compounds": true
</code></pre>
<p>}</p>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>Schema available at   /{namespace}/api/cbh_project_types/schema?format=json or view a <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Copy-of-Project-Type-Schema">Copy of Project Type Schema</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR If the user you request does not exist</p>
<ul>
<li>
<strong>Code:</strong> 404 Nothing here <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<p><strong>Sample Call:</strong></p>
<pre><code>  var promise = $http.get("/[your namespace/api/cbh_project_types/1");
  promise.then(function(data){
       //do something with the data         
  });
</code></pre>
</li>
<li>
<p><strong>Notes:</strong></p>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-project-type----untested" id="user-content-post-project-type----untested"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Project Type -- UNTESTED</strong>
</h2>
<p>Create a project type - this method is only exposed because by default the project type object is saved when we update a project. It is currently not used in the front end</p>
<ul>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong>[Not used in Front end]</strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=ProjectTypeResource">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_project_types/</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<pre><code>None
</code></pre>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 201 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>
</li>
<li>
<p><strong>Create Schema</strong></p>
<pre><code> * Schema available at   /{namespace}/api/cbh_project_types/schema?format=json or view a [[Copy of Project Type Schema]]
</code></pre>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR</p>
<ul>
<li>
<strong>Code:</strong> 403 BAD REQUEST <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li><strong>Sample Call:</strong></li>
</ul>

<p>angular.module('chembiohubAssayApp')
.controller('projectTypeController', ['$http', 'urlConfig', function ($resource, urlConfig) {</p>
<pre><code>    var namespace = "chembiohub";
    $http.defaults.headers.post['X-CSRFToken'] = $cookies[namespace + "csrftoken"];
    $http.post(urlConfig.cbh_project_types.list_endpoint,{// A valid project type object - see schema});
</code></pre>
<p>});</p>
<ul>
<li>
<p><strong>Notes:</strong></p>
<p>This API method has not been tested</p>
</li>
</ul>

        </div>

    </div>]