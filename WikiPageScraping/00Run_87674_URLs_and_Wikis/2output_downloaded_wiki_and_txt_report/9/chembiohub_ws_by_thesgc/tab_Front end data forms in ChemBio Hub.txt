[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The ChemBio Hub platform was developed to make it easy for users to generate complex web forms to enter their data with and also to be able to import that data from Excel or other scientific formats.</p>
<p>The forms in the application are templated using JSON Schema and a set of models in the back end provide a way to store those form definitions against a given project. The following screenshots demonstrate the creation of a project with the add project interface and the form that is generated when an item is added:</p>
<table>
<thead>
<tr>
<th>Action</th>
<th>Screenshot</th>
<th>APIs used</th>
</tr>
</thead>
<tbody>
<tr>
<td>1) User clicks Add Project</td>
<td><img alt="" src="https://raw.githubusercontent.com/thesgc/chembiohub_ws/master/wiki-images/addproject.png"/></td>
<td><a class="internal present" href="/thesgc/chembiohub_ws/wiki/Project-API">Project API</a></td>
</tr>
<tr>
<td>2) User adds a set of fields to the project and presses save</td>
<td><img alt="" src="https://raw.githubusercontent.com/thesgc/chembiohub_ws/master/wiki-images/addfield.png"/></td>
<td><a class="internal present" href="/thesgc/chembiohub_ws/wiki/Project-API">Project API</a></td>
</tr>
<tr>
<td>3) User presses add single inventory item</td>
<td><img alt="" src="https://raw.githubusercontent.com/thesgc/chembiohub_ws/master/wiki-images/addsingle.png"/></td>
<td></td>
</tr>
<tr>
<td>4) Form is rendered using angular schema form</td>
<td></td>
<td>
<a class="internal present" href="/thesgc/chembiohub_ws/wiki/Project-API">Project API</a> schemagetter function in frontend</td>
</tr>
<tr>
<td>5) User adds data and clicks save</td>
<td><img alt="" src="https://raw.githubusercontent.com/thesgc/chembiohub_ws/master/wiki-images/addsingleform.png"/></td>
<td><a class="internal present" href="/thesgc/chembiohub_ws/wiki/Compound-Batch-API">Compound Batch API</a></td>
</tr>
</tbody>
</table>
<p>The JSON Schemata are then rendered as forms using the excellent <a href="https://github.com/json-schema-form/angular-schema-form">angular schema form</a> library but this could also be done with <a href="https://github.com/SteveVitali/react-form-generator">React schema form</a> or <a href="http://www.alpacajs.org/" rel="nofollow">AlpacaJS</a></p>
<p>Clearly JSON schema editors are available but these are often quite complex for the end user, hence a simpler model was developed which hides this complexity and generates the schemata programatically.</p>
<p>The fields used in our JSON Schema Forms are mostly as <a href="https://github.com/json-schema-form/angular-schema-form/blob/development/docs/index.md#default-form-types">per the documentation</a>. There are 2 main exceptions to this:</p>
<p><a class="internal present" href="/thesgc/chembiohub_ws/wiki/Attachments">Attachments</a> and <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Custom-editing-widgets-%28Pick-From-List%29">Custom editing widgets (Pick From List)</a> are described on a separate pages.</p>

        </div>

    </div>]