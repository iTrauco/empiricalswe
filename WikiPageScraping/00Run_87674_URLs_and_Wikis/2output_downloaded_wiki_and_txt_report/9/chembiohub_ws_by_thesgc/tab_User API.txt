[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <ul>
<li><a href="#get-users">GET Users</a></li>
<li><a href="#get-user">GET User</a></li>
<li><a href="#post-user----untested">POST User --untested</a></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#get-users" id="user-content-get-users"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>GET Users</strong>
</h2>
<p>Return a list of user objects on the system</p>
<ul>
<li>
<p><strong>Testing</strong></p>
<ul>
<li>This API is tested in the user list test <a href="../search?utf8=%E2%9C%93&amp;q=%22users+on+the+system%22&amp;type=Code">here</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/config.js#L128">Front end code where this is used</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L1306">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/users/?format={format}&amp;limit={limit}&amp;offset={offset}</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>GET</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">format</td>
<td>json if Ajax</td>
<td>Data format to return</td>
<td>json, xml, yaml</td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">limit</td>
<td>20</td>
<td>Number of results to return</td>
</tr>
<tr>
<td align="center">offset</td>
<td>0</td>
<td>How far to jump backwards</td>
</tr>
<tr>
<td align="center">username</td>
<td>None</td>
<td>Filter for a given username *</td>
</tr>
</tbody>
</table>
<p>* Find out more about how filtering works in the <a href="http://django-tastypie.readthedocs.io/en/latest/resources.html#basic-filtering" rel="nofollow">tastypie documentation</a></p>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 200 <br/></p>
</li>
<li>
<p><strong>Notable response attributes</strong></p>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">objects</td>
<td>The list of user objects</td>
</tr>
<tr>
<td align="center">objects[].display_name</td>
<td>The username or first and last names used to identify the user on the system</td>
</tr>
<tr>
<td align="center">objects[].is_staff</td>
<td>The staff parameter that in theory gives access to the django Admin - in practise only superusers have a link in the top right corner</td>
</tr>
<tr>
<td align="center">objects[].is_superuser</td>
<td>Whether this is a superuser (superusers have all permissions to all projects)</td>
</tr>
<tr>
<td align="center">objects[].can_create_and_own_projects</td>
<td>Whether the user has the "add project" permission (currently only settable in the django admin) This controls whether the add project button is available in the front end</td>
</tr>
<tr>
<td align="center">objects[].can_view_chemreg</td>
<td>needs deprecating</td>
</tr>
<tr>
<td align="center">objects[].can_view_chemreg</td>
<td>needs deprecating</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>Content:</strong></li>
</ul>

<pre><code>     { 
          "meta": {
          "limit": 1000,
          "next": null,
          "offset": 0,
          "previous": null,
          "total_count": 210
      },
      "objects": [{
          "can_create_and_own_projects": true,
          "can_view_assayreg": false,
          "can_view_chemreg": true,
          "date_joined": "2015-07-16T05:10:54",
          "display_name": "Madalina Raducu",
           "first_name": "Madalina",
           "id": 46,
           "is_logged_in": false,
            "is_staff": false,
            "is_superuser": false,
            "last_login": "2015-07-16T05:10:54",
            "last_name": "Raducu",
            "resource_uri": "/staging/api/users/46",
            "username": "donc0153"
       }
    }
</code></pre>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>Schema available at   /{namespace}/api/users/schema?format=json or view a <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Copy-of-User-Schema">Copy of User Schema</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR</p>
<ul>
<li>
<strong>Code:</strong> 403 BAD REQUEST <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<p><strong>Sample Call:</strong></p>
<pre><code>  $http({  method: "get",
              url: configuration.users.list_endpoint,
              params: {"limit":10000}, });
</code></pre>
</li>
<li>
<p><strong>Notes:</strong></p>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#get-user" id="user-content-get-user"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>GET User</strong>
</h2>
<p>Return a single user by ID</p>
<ul>
<li>
<p><strong>Testing</strong></p>
<ul>
<li>This API is not yet tested</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong>Not currently used in front end</strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L1306">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/users/{pk}?format={format}</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>GET</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">format</td>
<td>json if Ajax</td>
<td>Data format to return</td>
<td>json, xml, yaml</td>
</tr>
<tr>
<td align="center">pk</td>
<td>None</td>
<td>The ID of the user</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 200 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>
</li>
</ul>

<pre><code>     {
          "can_create_and_own_projects": true,
          "can_view_assayreg": false,
          "can_view_chemreg": true,
          "date_joined": "2015-07-16T05:10:54",
          "display_name": "Madalina Raducu",
           "first_name": "Madalina",
           "id": 46,
           "is_logged_in": false,
            "is_staff": false,
            "is_superuser": false,
            "last_login": "2015-07-16T05:10:54",
            "last_name": "Raducu",
            "resource_uri": "/staging/api/users/46",
            "username": "donc0153"
       }
</code></pre>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>Schema available at   /{namespace}/api/users/schema?format=json or view a <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Copy-of-User-Schema">Copy of User Schema</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR If the user you request does not exist</p>
<ul>
<li>
<strong>Code:</strong> 404 Nothing here <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<p><strong>Sample Call:</strong></p>
<pre><code>  var promise = $http.get("/[your namespace/api/users/56");
  promise.then(function(data){
       //do something with the data         
  });
</code></pre>
</li>
<li>
<p><strong>Notes:</strong></p>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-user----untested" id="user-content-post-user----untested"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST User -- UNTESTED</strong>
</h2>
<p>Create a user - this method is only exposed because users get saved as part of other functions such as invite</p>
<ul>
<li>
<p><strong>Testing</strong></p>
<ul>
<li>This API is not yet tested</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong>[Not used in Front end]</strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_core_api/resources.py#L1306">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/users/</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<pre><code>None
</code></pre>
<ul>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 201 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>
</li>
<li>
<p><strong>Create Schema</strong></p>
<pre><code> * Schema available at   /{namespace}/api/users/schema?format=json or view a [[Copy of User Schema]]
</code></pre>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR</p>
<ul>
<li>
<strong>Code:</strong> 403 BAD REQUEST <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li><strong>Sample Call:</strong></li>
</ul>

<p>angular.module('chembiohubAssayApp')
.controller('userController', ['$http', 'urlConfig', function ($resource, urlConfig) {</p>
<pre><code>    var namespace = "chembiohub";
    $http.defaults.headers.post['X-CSRFToken'] = $cookies[namespace + "csrftoken"];
    $http.post(urlConfig.users.list_endpoint,{// A valid user object - see schema});
</code></pre>
<p>});</p>
<ul>
<li>
<p><strong>Notes:</strong></p>
<p>This API method has not been tested - passwords would need to be set which would require a new method, some required fields may have been removed from the API</p>
</li>
</ul>

        </div>

    </div>]