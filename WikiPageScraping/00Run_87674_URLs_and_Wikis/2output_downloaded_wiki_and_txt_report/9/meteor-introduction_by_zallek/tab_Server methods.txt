[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <div class="highlight highlight-source-js"><pre><span class="pl-c"><span class="pl-c">//</span> Server: Define methods callable by clients</span>
<span class="pl-smi">Meteor</span>.<span class="pl-en">methods</span>({
  <span class="pl-en">commentPost</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">postId</span>, <span class="pl-smi">comment</span>) {
    <span class="pl-k">if</span> (<span class="pl-k">!</span> <span class="pl-c1">this</span>.<span class="pl-smi">userId</span>) {
      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Meteor.Error</span>(<span class="pl-s"><span class="pl-pds">"</span>not-logged-in<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">"</span>Must be logged in to post a comment.<span class="pl-pds">"</span></span>);
    }

    <span class="pl-smi">Posts</span>.<span class="pl-en">update</span>(postId, $set<span class="pl-k">:</span> {content<span class="pl-k">:</span> comment});
    <span class="pl-k">return</span> <span class="pl-c1">true</span>;
  }
});

<span class="pl-c"><span class="pl-c">//</span> Client: Asynchronous call</span>
<span class="pl-smi">Meteor</span>.<span class="pl-c1">call</span>(<span class="pl-s"><span class="pl-pds">'</span>commentPost<span class="pl-pds">'</span></span>, <span class="pl-c1">10</span>, <span class="pl-s"><span class="pl-pds">"</span>So easy<span class="pl-pds">"</span></span>,
  <span class="pl-k">function</span> (<span class="pl-smi">error</span>, <span class="pl-smi">result</span>) {
    <span class="pl-k">if</span> (error) {
      <span class="pl-c"><span class="pl-c">//</span> handle error</span>
    } <span class="pl-k">else</span> {
      <span class="pl-c"><span class="pl-c">//</span> examine result</span>
    }
  }
);</pre></div>

        </div>

    </div>]