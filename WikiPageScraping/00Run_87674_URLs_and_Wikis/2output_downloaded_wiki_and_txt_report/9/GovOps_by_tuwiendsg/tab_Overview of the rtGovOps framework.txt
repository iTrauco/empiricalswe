[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The rtGovOps is a runtime framework for governance and operations in software-defined IoT cloud system. Generally, rtGovOps provides runtime mechanisms to enable executing <em>Operational Governance Processes</em> in software-defined IoT cloud systems. This repository contains the current implementation of rtGovOps prototype. The main parts of the rtGovOps framework are:</p>
<ul>
<li><a href="#controller">The rtGovOps controller</a></li>
<li><a href="#agents">The rtGovOps agents</a></li>
</ul>
<p>Additionally, this repository contains a <a href="https://github.com/tuwiendsg/GovOps/tree/master/Testbed-setup"><em>virtualized testbed</em></a> (based on Docker containers) for software-defined IoT cloud systems and several <a href="https://github.com/tuwiendsg/GovOps/tree/master/Demo-applications"><em>demo applications</em></a>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#-the-rtgovops-controller" id="user-content--the-rtgovops-controller"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-controller"></a> The rtGovOps controller</h3>
<p>The rtGovOps controller represents a central
point of interaction with all available governance capabilities.
It provides a mediation layer that enables users
to interact with software-defined IoT cloud systems in a conceptually centralized
fashion, without explicitly worrying about the underlying IoT gateways or other IoT devices.</p>
<p>Internally, the governance controller
comprises several cloud-based microservices. These are independently deployable services that expose REST APIs.
These services are mainly implemented in Java and Scala programming languages and they rely on proven
technologies such as Spring Boot (Actuator) to define and manage exposed APIs. These APIs are used by the operational governance processes, e.g., to invoke a governance capabilit, and by the IoT gateways, e.g., to obtain a new capability. Most important services
include:<a href="/tuwiendsg/GovOps/tree/master/rtGovOps-controller/manager">DeploymentManager and ProfileManager</a>,
<a href="/tuwiendsg/GovOps/tree/master/rtGovOps-controller/apimanager">APIManager and GovernanceScopeCoordinator</a> as well as the <a href="/tuwiendsg/GovOps/tree/master/rtGovOps-controller/builder">ImageBuilder</a> and the <a href="/tuwiendsg/GovOps/tree/master/rtGovOps-controller/dms">DependencyManager</a>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#-the-rtgovops-agents" id="user-content--the-rtgovops-agents"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-agents"></a> The rtGovOps agents</h3>
<p>The <a href="/tuwiendsg/GovOps/tree/master/rtGovOps-agents">rtGovOps agents</a> run inside IoT gateways. Generally, they support the controller to deploy, execute/invoke and manage the available governance capabilities. Since these gateways usually have constrained resources such as available memory and computing power, the agents are implemented as a light-weight Shell scripts. The ProvisioningAgent and the Profiler are realized as stand alone components with a well-defined lifecycle. Currently they are periodically executed by the OS or Linux Userland (e.g., BusyBox) as Cron Jobs and they mostly perform the tasks issued by the controller, inside the devices. Additionally, rtGovOps provides a GovernanceAgent. It comprises a generic part (a.k.a the Mapper) and a preinstalled governance capabilities such as the Capabiltiy Manager (cManager). The Mapper is implemented as an extension to a light-weight httpd server and its main responsibility is to dispatch the incoming requests(invocations) to the capabilities.</p>

        </div>

    </div>]