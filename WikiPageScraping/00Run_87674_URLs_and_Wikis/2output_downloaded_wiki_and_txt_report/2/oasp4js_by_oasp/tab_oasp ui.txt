[<div class="wiki-body gollum-asciidoc-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <div>
<div>Table of Contents</div>
<ul>
<li>
<a href="#oasp-ui">OASP UI</a>
<ul>
<li>
<a href="#spinner">Spinner</a>
<ul>
<li><a href="#api">API</a></li>
<li><a href="#getting-spinner-working-in-your-application">Getting spinner working in your application</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<h1 id="user-content-oasp-ui">
<a aria-hidden="true" class="anchor" href="#oasp-ui" id="user-content-oasp-ui"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>OASP UI</h1>
<div>
<p>OASP UI provides components which will make your application more responsive. The module contains such elements as oaspGrid which helps you in creating layout of your dialogs' templates, buttonBar which is a widget for grouping control buttons in a bar, modal which supports you in implementing modal dialogs and spinner for handling long running tasks.</p>
</div>
<div>
<p>In order to use any of the OASP UI components you need to install the oasp4js ng-modules library. Please refer to the <a href="https://github.com/oasp/oasp4js-bower">home page</a> of the oasp4js repository for details how to do it.</p>
</div>
<div>
<p>Below you can find the examples of how to use OASP UI components in your application.</p>
</div>
<div>
<h2 id="user-content-spinner">
<a aria-hidden="true" class="anchor" href="#spinner" id="user-content-spinner"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Spinner</h2>
<div>
<div>
<p>The spinner should be used whenever there is a long running task performed - it tells the user that a task is in progress and prevents him / her from performing some additional actions which could inappropriately influence the long running task. When the task is completed, then the spinner is hidden and control is returned to the user. The main example where spinner comes with help is handling the requests to the server which usually take more time.</p>
</div>
<div>
<p>The screen below shows the spinner launched when the the user signs into the oasp4js sample application:</p>
</div>
<div>
<div>
<img alt="ng modules spinner" src="https://raw.githubusercontent.com/wiki/oasp/oasp4js/img/ng_modules_spinner.png" width="50%"/>
</div>
</div>
<div>
<h3 id="user-content-api">
<a aria-hidden="true" class="anchor" href="#api" id="user-content-api"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>API</h3>
<div>
<p>The oasp.oaspUi.spinner spinner module provides the globalSpinner service with the following API:</p>
</div>
<div>
<ul>
<li>
<p>show() - shows the spinner</p>
</li>
<li>
<p>hide() - hides the spinner</p>
</li>
<li>
<p>showOnRouteChangeStartAndHideWhenComplete() - shows spinner on the route is being changed, hides it when the route change is completed</p>
</li>
<li>
<p>decorateCallOfFunctionReturningPromise(fn) - shows spinner when the fn (function returning promise) is called and hides it when the promise is resolved or rejected</p>
</li>
</ul>
</div>
</div>
<div>
<h3 id="user-content-getting-spinner-working-in-your-application">
<a aria-hidden="true" class="anchor" href="#getting-spinner-working-in-your-application" id="user-content-getting-spinner-working-in-your-application"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting spinner working in your application</h3>
<div>
<p>It is assumed that you have already installed the oasp4js ng-modules in your application.</p>
</div>
<div>
<p>The next step is to add spinner module dependency into your AngularJS application:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-js"><pre><span class="pl-smi">angular</span>.<span class="pl-en">module</span>(<span class="pl-s"><span class="pl-pds">'</span>myApp<span class="pl-pds">'</span></span>, [<span class="pl-s"><span class="pl-pds">'</span>oasp.oaspUi.spinner<span class="pl-pds">'</span></span>, <span class="pl-k">...</span>])</pre></div>
</div>
</div>
<div>
<p>You have to call the spinner directive in your main html file, anywhere in the &lt;body&gt; tag:</p>
</div>
<div>
<div>
<div class="highlight highlight-text-html-basic"><pre>&lt;<span class="pl-ent">div</span> <span class="pl-e">data-spinner</span>=<span class="pl-s"><span class="pl-pds">"</span>globalSpinner<span class="pl-pds">"</span></span>&gt;&lt;/<span class="pl-ent">div</span>&gt;</pre></div>
</div>
</div>
<div>
<p>The next step is to inject the globalSpinner service into controller where you want to use it:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-js"><pre><span class="pl-smi">angular</span>.<span class="pl-en">module</span>(<span class="pl-s"><span class="pl-pds">'</span>myApp<span class="pl-pds">'</span></span>).<span class="pl-en">controller</span>(<span class="pl-s"><span class="pl-pds">'</span>AppCntl<span class="pl-pds">'</span></span>, <span class="pl-k">function</span> (<span class="pl-smi">$scope</span>, <span class="pl-smi">globalSpinner</span>) {
    <span class="pl-c"><span class="pl-c">//</span>controller's code goes here</span>
});</pre></div>
</div>
</div>
<div>
<p>It is also required to attach the spinnerâ€™s css sources which are placed under the following path after the ng-modules installation:</p>
</div>
<div>
<p>&lt;app_dir&gt;/bower_components/oasp/oasp/oasp-ui/css/components/spinner</p>
</div>
<div>
<p>When you are using the OASP4JS Application Template it is enough when you add the following import to the main.less file:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-css"><pre><span class="pl-k">@import</span> <span class="pl-s"><span class="pl-pds">"</span>bower_components/oasp/oasp/oasp-ui/css/components/spinner<span class="pl-pds">"</span></span>;</pre></div>
</div>
</div>
<div>
<p>When you do that you can use the globalSpinner API.</p>
</div>
</div>
</div>
</div>
        </div>

    </div>]