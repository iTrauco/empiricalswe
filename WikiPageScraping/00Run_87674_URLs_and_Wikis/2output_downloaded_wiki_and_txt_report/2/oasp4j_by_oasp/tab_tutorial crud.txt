[<div class="wiki-body gollum-asciidoc-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <div>
<div>Table of Contents</div>
<ul>
<li>
<a href="#creating-a-crud-functionality-for-an-entity">Creating a CRUD functionality for an entity</a>
<ul>
<li><a href="#persitence-provider-configuration">Persitence provider configuration</a></li>
<li>
<a href="#create-the-jpa-entity">Create the JPA entity</a>
<ul>
<li><a href="#optimistic-locking">Optimistic locking</a></li>
<li><a href="#validation">Validation</a></li>
</ul>
</li>
<li>
<a href="#creating-persistence-layer">Creating persistence layer</a>
<ul>
<li><a href="#defining-querys">Defining querys</a></li>
</ul>
</li>
<li><a href="#expose-logic-as-services">Expose logic as services</a></li>
<li>
<a href="#securing-the-application">Securing the application</a>
<ul>
<li><a href="#creating-rest-endpoints">Creating REST endpoints</a></li>
</ul>
</li>
<li>
<a href="#internationalization">Internationalization</a>
<ul>
<li><a href="#pagination">Pagination</a></li>
<li><a href="#sorting">Sorting</a></li>
<li><a href="#testing-endpoints">Testing endpoints</a></li>
<li><a href="#creating-web-services">Creating Web Services</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<h1 id="user-content-creating-a-crud-functionality-for-an-entity">
<a aria-hidden="true" class="anchor" href="#creating-a-crud-functionality-for-an-entity" id="user-content-creating-a-crud-functionality-for-an-entity"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Creating a CRUD functionality for an entity</h1>
<div>
<p>In this tutorial we are going to create an entity for the application and provide services for Create, Read, Update and Delete instances of that entity.</p>
</div>
<div>
<p>It is important to mention OASP packaging convention. OASP use a strict packaging convention to map technical layers and business components to the code. OASP use the following Java-Package schema:</p>
</div>
<div>
<div>
<pre><code>&lt;basepackage&gt;.&lt;component&gt;.&lt;layer&gt;.&lt;scope&gt;[.&lt;detail&gt;]*</code></pre>
</div>
</div>
<div>
<p>In our example application we find the different classes in this packages:</p>
</div>
<div>
<ul>
<li>
<p>Entity and DAO: io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api[.&lt;detail&gt;]</p>
</li>
<li>
<p>Logic: io.oasp.gastronomy.restaurant.tablemanagement.logic[.&lt;detail&gt;]</p>
</li>
<li>
<p>Services: io.oasp.gastronomy.restaurant.tablemanagement.services[.&lt;detail&gt;]</p>
</li>
</ul>
</div>
<div>
<p>For more information you can consult <a href="https://github.com/oasp/oasp4j/wiki/coding-conventions#packages">packaging OASP documentation</a></p>
</div>
<div>
<h2 id="user-content-persitence-provider-configuration">
<a aria-hidden="true" class="anchor" href="#persitence-provider-configuration" id="user-content-persitence-provider-configuration"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Persitence provider configuration</h2>
<div>

</div>
</div>
<div>
<h2 id="user-content-create-the-jpa-entity">
<a aria-hidden="true" class="anchor" href="#create-the-jpa-entity" id="user-content-create-the-jpa-entity"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Create the JPA entity</h2>
<div>
<div>
<p>We are going to create a <code>Table</code> entity. First, we are going to create the <code>Table</code> entity interface. This will be reused between all the objects involved with table on the different layers.</p>
</div>
<div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.ApplicationEntity</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.datatype.TableState</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.validation.constraints.Min</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.validation.constraints.NotNull</span>;
<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * This is the interface for a table of the restaurant.</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">interface</span> <span class="pl-en">Table</span> <span class="pl-k">extends</span> <span class="pl-e">ApplicationEntity</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> the unique table number.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-smi">Long</span> <span class="pl-en">getNumber</span>();

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@param</span> number is the new {<span class="pl-k">@link</span> #getNumber() <span class="pl-corl">number</span>}.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">void</span> <span class="pl-en">setNumber</span>(<span class="pl-smi">Long</span> <span class="pl-v">number</span>);

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> the current {<span class="pl-k">@link</span> TableState <span class="pl-corl">state</span>} of this {<span class="pl-k">@link</span> Table}.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-smi">TableState</span> <span class="pl-en">getState</span>();

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@param</span> state is the new {<span class="pl-k">@link</span> #getState() <span class="pl-corl">state</span>}.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">void</span> <span class="pl-en">setState</span>(<span class="pl-smi">TableState</span> <span class="pl-v">state</span>);

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> the ID of the waiter</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-smi">Long</span> <span class="pl-en">getWaiterId</span>();

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sets the field 'waiterId'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> waiterId New value for waiterId</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">void</span> <span class="pl-en">setWaiterId</span>(<span class="pl-smi">Long</span> <span class="pl-v">waiterId</span>);

}</pre></div>
</div>
</div>
<div>
<p>As you can see, Table should extend <code>ApplicationEntity</code> class. This class provides the neccesary methods for a mutable entity (ID getter and setter basically).</p>
</div>
<div>
<p>In this case, we also need a TableState class for our CRUD example:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.datatype</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Represents the state table.</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">enum</span> <span class="pl-en">TableState</span> {
  <span class="pl-c1">FREE</span>,
  <span class="pl-c1">RESERVED</span>,
  <span class="pl-c1">OCCUPIED</span>;

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> ``true`` if {<span class="pl-k">@link</span> #FREE}, ``false`` otherwise.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">boolean</span> <span class="pl-en">isFree</span>() {

    <span class="pl-k">return</span> (<span class="pl-c1">this</span> <span class="pl-k">==</span> <span class="pl-c1">FREE</span>);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> ``true`` if {<span class="pl-k">@link</span> #RESERVED}, ``false`` otherwise.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">boolean</span> <span class="pl-en">isReserved</span>() {

    <span class="pl-k">return</span> (<span class="pl-c1">this</span> <span class="pl-k">==</span> <span class="pl-c1">RESERVED</span>);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> ``true`` if {<span class="pl-k">@link</span> #OCCUPIED}, ``false`` otherwise.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">boolean</span> <span class="pl-en">isOccupied</span>() {

    <span class="pl-k">return</span> (<span class="pl-c1">this</span> <span class="pl-k">==</span> <span class="pl-c1">OCCUPIED</span>);
  }

}</pre></div>
</div>
</div>
<div>
<p>Finally, we should create the entity implementation:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.dataaccess.api.ApplicationPersistenceEntity</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.Table</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.datatype.TableState</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.persistence.Column</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.persistence.Entity</span>;

<span class="pl-k">@Entity</span>(<span class="pl-c1">name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Table<span class="pl-pds">"</span></span>)
<span class="pl-k">@javax.persistence.Table</span>(<span class="pl-c1">name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>RestaurantTable<span class="pl-pds">"</span></span>)
<span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">TableEntity</span> <span class="pl-k">extends</span> <span class="pl-e">ApplicationPersistenceEntity</span> <span class="pl-k">implements</span> <span class="pl-e">Table</span> {

  <span class="pl-k">private</span> <span class="pl-k">static</span> <span class="pl-k">final</span> <span class="pl-k">long</span> serialVersionUID <span class="pl-k">=</span> <span class="pl-c1">1L</span>;

  <span class="pl-k">private</span> <span class="pl-smi">Long</span> number;

  <span class="pl-k">private</span> <span class="pl-smi">Long</span> waiterId;

  <span class="pl-k">private</span> <span class="pl-smi">TableState</span> state;

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">@Column</span>(<span class="pl-c1">unique</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>)
  <span class="pl-k">public</span> <span class="pl-smi">Long</span> <span class="pl-en">getNumber</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>number;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setNumber</span>(<span class="pl-smi">Long</span> <span class="pl-v">number</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>number <span class="pl-k">=</span> number;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">@Column</span>(<span class="pl-c1">name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>waiter_id<span class="pl-pds">"</span></span>)
  <span class="pl-k">public</span> <span class="pl-smi">Long</span> <span class="pl-en">getWaiterId</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>waiterId;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setWaiterId</span>(<span class="pl-smi">Long</span> <span class="pl-v">waiterId</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>waiterId <span class="pl-k">=</span> waiterId;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-smi">TableState</span> <span class="pl-en">getState</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>state;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setState</span>(<span class="pl-smi">TableState</span> <span class="pl-v">state</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>state <span class="pl-k">=</span> state;
  }

}</pre></div>
</div>
</div>
<div>
<h3 id="user-content-optimistic-locking">
<a aria-hidden="true" class="anchor" href="#optimistic-locking" id="user-content-optimistic-locking"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Optimistic locking</h3>

</div>
<div>
<h3 id="user-content-validation">
<a aria-hidden="true" class="anchor" href="#validation" id="user-content-validation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Validation</h3>
<div>
<p>You can read more about OASP validation in <a href="https://github.com/oasp-forge/oasp4j-wiki/wiki/guide-validation">OASP validation</a></p>
</div>
<div>
<p>For example, we are going to add a validation in TableEntity to validate number property to allow only values greater than 0.</p>
</div>
<div>
<div>
<div class="highlight highlight-source-java"><pre>  <span class="pl-k">@Min</span>(<span class="pl-c1">0</span>)
  <span class="pl-k">@Column</span>(<span class="pl-c1">unique</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>)
  <span class="pl-k">public</span> <span class="pl-smi">Long</span> getNumber() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>number;
  }</pre></div>
</div>
</div>
</div>
</div>
</div>
<div>
<h2 id="user-content-creating-persistence-layer">
<a aria-hidden="true" class="anchor" href="#creating-persistence-layer" id="user-content-creating-persistence-layer"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Creating persistence layer</h2>
<div>
<div>
<p>Data Acccess Objects (DAOs) are part of the persistence layer. They are responsible for a specific entity and should be named &lt;entity&gt;Dao[Impl]. The DAO offers the so called CRUD-functionalities (create, retrieve, update, delete) for the corresponding entity. Additionally a DAO may offer advanced operations such as search or locking methods.</p>
</div>
<div>
<p>For each DAO there is an interface named &lt;entity&gt;Dao that defines the API. For CRUD support and common naming methods we derive it from the interface <code>io.oasp.module.jpa.persistence.api.dao.ApplicationDao</code>.</p>
</div>
<div>
<div>TableDao.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api.dao</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.dataaccess.api.dao.ApplicationDao</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api.TableEntity</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.module.jpa.dataaccess.api.MasterDataDao</span>;

<span class="pl-k">import</span> <span class="pl-smi">java.util.List</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * {<span class="pl-k">@link</span> ApplicationDao <span class="pl-corl">Data Access Object</span>} for {<span class="pl-k">@link</span> TableEntity} entity.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">interface</span> <span class="pl-en">TableDao</span> <span class="pl-k">extends</span> <span class="pl-e">ApplicationDao&lt;tableentity&gt;</span>, <span class="pl-e">MasterDataDao&lt;tableentity&gt;</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Returns a list of free restaurant tables.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@return</span> {<span class="pl-k">@link</span> List} of free restaurant {<span class="pl-k">@link</span> TableEntity}s</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">List&lt;tableentity&gt;</span> <span class="pl-en">getFreeTables</span>();

}</pre></div>
</div>
</div>
<div>
<p>Implementing a DAO is quite simple. We should create a class named &lt;entity&gt;DaoImpl that extends ApplicationMasterDataDaoImpl class and implements our DAO interface.</p>
</div>
<div>
<p>This is the DAO implementation for our table sample:</p>
</div>
<div>
<div>TableDaoImpl.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.impl.dao</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.constants.NamedQueries</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.dataaccess.base.dao.ApplicationMasterDataDaoImpl</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api.TableEntity</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api.dao.TableDao</span>;

<span class="pl-k">import</span> <span class="pl-smi">java.util.List</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Named</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.persistence.Query</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Implementation of {<span class="pl-k">@link</span> TableDao}.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">@Named</span>
<span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">TableDaoImpl</span> <span class="pl-k">extends</span> <span class="pl-e">ApplicationMasterDataDaoImpl&lt;tableentity&gt;</span> <span class="pl-k">implements</span> <span class="pl-e">TableDao</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * The constructor.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-en">TableDaoImpl</span>() {

    <span class="pl-c1">super</span>();
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">Class&lt;tableentity&gt;</span> <span class="pl-en">getEntityClass</span>() {

    <span class="pl-k">return</span> <span class="pl-smi">TableEntity</span><span class="pl-k">.</span>class;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">List&lt;tableentity&gt;</span> <span class="pl-en">getFreeTables</span>() {

    <span class="pl-smi">Query</span> query <span class="pl-k">=</span> getEntityManager()<span class="pl-k">.</span>createNamedQuery(<span class="pl-smi">NamedQueries</span><span class="pl-c1"><span class="pl-k">.</span>GET_FREE_TABLES</span>, <span class="pl-smi">TableEntity</span><span class="pl-k">.</span>class);
    <span class="pl-k">return</span> query<span class="pl-k">.</span>getResultList();
  }

}</pre></div>
</div>
</div>
<div>
<p>As you can see ApplicationMasterDataDaoImpl already implements the CRUD operations so you only have to implement the additional methods that you have declared in your &lt;entity&gt;Dao interface.</p>
</div>
<div>
<h3 id="user-content-defining-querys">
<a aria-hidden="true" class="anchor" href="#defining-querys" id="user-content-defining-querys"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Defining querys</h3>
<div>
<p>OASP advises to specify all queries in one mapping file called NamedQueries.xml. So we are going to create a query to get free tables that we have used in TableDaoImpl.</p>
</div>
<div>
<div>src/main/resources/config/app/dataaccess/NamedQueries.xml</div>
<div>
<div class="highlight highlight-text-xml"><pre><span class="pl-c"><span class="pl-c">&lt;!--</span>?xml version="1.0" encoding="UTF-8"?<span class="pl-c">--&gt;</span></span>
&lt;<span class="pl-ent">entity-mappings</span> <span class="pl-e">version</span>=<span class="pl-s"><span class="pl-pds">"</span>1.0<span class="pl-pds">"</span></span> <span class="pl-e">xmlns</span>=<span class="pl-s"><span class="pl-pds">"</span>http://java.sun.com/xml/ns/persistence/orm<span class="pl-pds">"</span></span> <span class="pl-e">xmlns</span><span class="pl-e">:</span><span class="pl-e">xsi</span>=<span class="pl-s"><span class="pl-pds">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="pl-pds">"</span></span> <span class="pl-e">xsi</span><span class="pl-e">:</span><span class="pl-e">schemalocation</span>=<span class="pl-s"><span class="pl-pds">"</span>http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd<span class="pl-pds">"</span></span>&gt;

  &lt;<span class="pl-ent">named-query</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>get.free.tables<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">query</span>&gt;<span class="pl-c"><span class="pl-c">&lt;!--</span>[CDATA[SELECT t FROM Table t WHERE t.state = io.oasp.gastronomy.restaurant.tablemanagement.common.api.datatype.TableState.FREE]]<span class="pl-c">--&gt;</span></span>&lt;/<span class="pl-ent">query</span>&gt;
  &lt;/<span class="pl-ent">named-query</span>&gt;

&lt;/<span class="pl-ent">entity-mappings</span>&gt;</pre></div>
</div>
</div>
<div>
<p>To avoid redundant occurrences of the query name we define the constants for each named query:</p>
</div>
<div>
<div>NamedQueries.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.constants</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Constants of the named queries defined in ``NamedQueries.xml``.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">abstract</span> <span class="pl-k">class</span> <span class="pl-en">NamedQueries</span> {

  <span class="pl-c"><span class="pl-c">//</span> put your query names from NamedQueries.xml as constants here</span>
  <span class="pl-c"><span class="pl-c">/*</span>* @see io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.impl.dao.TableDaoImpl#getFreeTables() <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">static</span> <span class="pl-k">final</span> <span class="pl-smi">String</span> <span class="pl-c1">GET_FREE_TABLES</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>get.free.tables<span class="pl-pds">"</span></span>;

}</pre></div>
</div>
</div>
<div>
<p>Note that changing the name of the java constant can be done easily with refactoring. Further you can trace where the query is used by searching the references of the constant.</p>
</div>
</div>
</div>
</div>
<div>
<h2 id="user-content-expose-logic-as-services">
<a aria-hidden="true" class="anchor" href="#expose-logic-as-services" id="user-content-expose-logic-as-services"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Expose logic as services</h2>
<div>
<div>
<p>The logic layer is for internal use of an application. In order to access the functionality of the logic layer from other applications it should be exposed with a bridge layer called the service layer.</p>
</div>
<div>
<p>This layer should be in charge of converting between Java objects to its serialized form and back. It also provide the means to publish to an endpoint and securize the access to certain users. Last but not less important it is responsible to wrap any error coming from the logic layer to a format that would be understood by the client of the service.</p>
</div>
<div>
<p>In OASP, we propose to divide the CRUD logic into different files to sepparate responsability:</p>
</div>
<div>
<ul>
<li>
<p>An interface and an implementing class for CRUD read only methods, UCFind[XXX]. E.g. UCFindTable.</p>
</li>
<li>
<p>An interface and an implementing class fro CRUD write methods, UCManage[XXX]. E.g. UCManageTable.</p>
</li>
</ul>
</div>
<div>
<div>UCFindTable.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.to.TableEto</span>;

<span class="pl-k">import</span> <span class="pl-smi">java.util.List</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Interface of UcFindTable to centralize documentation and signatures of methods.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">interface</span> <span class="pl-en">UcFindTable</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Returns a restaurant table by its id 'id'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> id The id 'id' of the restaurant table.</span>
<span class="pl-c">   * <span class="pl-k">@return</span> The restaurant {<span class="pl-k">@link</span> TableEto} with id 'id'</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-smi">TableEto</span> <span class="pl-en">findTable</span>(<span class="pl-smi">Long</span> <span class="pl-v">id</span>);

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Returns a list of all existing restaurant tables.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@return</span> {<span class="pl-k">@link</span> List} of all existing restaurant {<span class="pl-k">@link</span> TableEto}s</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">findAllTables</span>();

 <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Returns a list of all existing free restaurant tables.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@return</span> {<span class="pl-k">@link</span> List} of all existing free restaurant {<span class="pl-k">@link</span> TableEto}s</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">findFreeTables</span>();

}</pre></div>
</div>
</div>
<div>
<div>UCFindTableImpl.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.impl.usecase</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.constants.PermissionConstants</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.logic.api.UseCase</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api.TableEntity</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.to.TableEto</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcFindTable</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.base.usecase.AbstractTableUc</span>;

<span class="pl-k">import</span> <span class="pl-smi">java.util.List</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.annotation.security.RolesAllowed</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Named</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Implementation of {<span class="pl-k">@link</span> UcFindTable}.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">@Named</span>
<span class="pl-k">@UseCase</span>
<span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">UcFindTableImpl</span> <span class="pl-k">extends</span> <span class="pl-e">AbstractTableUc</span> <span class="pl-k">implements</span> <span class="pl-e">UcFindTable</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">@RolesAllowed</span>(<span class="pl-smi">PermissionConstants</span><span class="pl-c1"><span class="pl-k">.</span>FIND_TABLE</span>)
  <span class="pl-k">public</span> <span class="pl-smi">TableEto</span> <span class="pl-en">findTable</span>(<span class="pl-smi">Long</span> <span class="pl-v">id</span>) {

    <span class="pl-k">return</span> getBeanMapper()<span class="pl-k">.</span>map(getTableDao()<span class="pl-k">.</span>findOne(id), <span class="pl-smi">TableEto</span><span class="pl-k">.</span>class);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">@RolesAllowed</span>(<span class="pl-smi">PermissionConstants</span><span class="pl-c1"><span class="pl-k">.</span>FIND_TABLE</span>)
  <span class="pl-k">public</span> <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">findAllTables</span>() {

    <span class="pl-k">List&lt;tableentity&gt;</span> tables <span class="pl-k">=</span> getTableDao()<span class="pl-k">.</span>findAll();
    <span class="pl-k">return</span> getBeanMapper()<span class="pl-k">.</span>mapList(tables, <span class="pl-smi">TableEto</span><span class="pl-k">.</span>class);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">@RolesAllowed</span>(<span class="pl-smi">PermissionConstants</span><span class="pl-c1"><span class="pl-k">.</span>FIND_TABLE</span>)
  <span class="pl-k">public</span> <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">findFreeTables</span>() {

    <span class="pl-k">List&lt;tableentity&gt;</span> tables <span class="pl-k">=</span> getTableDao()<span class="pl-k">.</span>getFreeTables();
    <span class="pl-k">return</span> getBeanMapper()<span class="pl-k">.</span>mapList(tables, <span class="pl-smi">TableEto</span><span class="pl-k">.</span>class);
  }

}</pre></div>
</div>
</div>
<div>
<div>UCManageTable.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.to.TableEto</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.validation.Valid</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Interface of UcManageTable to centralize documentation and signatures of methods.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">interface</span> <span class="pl-en">UcManageTable</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Deletes a restaurant table from the database by its id 'id'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> tableId Id of the restaurant table to delete</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">void</span> <span class="pl-en">deleteTable</span>(<span class="pl-smi">Long</span> <span class="pl-v">tableId</span>);

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Creates a new restaurant table and store it in the database.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> table the {<span class="pl-k">@link</span> TableEto} to create.</span>
<span class="pl-c">   * <span class="pl-k">@return</span> the new {<span class="pl-k">@link</span> TableEto} that has been saved with ID and version.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-smi">TableEto</span> <span class="pl-en">saveTable</span>(<span class="pl-k">@Valid</span> <span class="pl-smi">TableEto</span> <span class="pl-v">table</span>);

}</pre></div>
</div>
</div>
<div>
<div>UCManageTableImpl.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.impl.usecase</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.constants.PermissionConstants</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.exception.IllegalEntityStateException</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.logic.api.UseCase</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.datatype.TableState</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api.TableEntity</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.to.TableEto</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcManageTable</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.base.usecase.AbstractTableUc</span>;

<span class="pl-k">import</span> <span class="pl-smi">java.util.Objects</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.annotation.security.RolesAllowed</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Named</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.validation.Valid</span>;

<span class="pl-k">import</span> <span class="pl-smi">org.springframework.validation.annotation.Validated</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Implementation of {<span class="pl-k">@link</span> UcManageTable}.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">@Named</span>
<span class="pl-k">@UseCase</span>
<span class="pl-k">@Validated</span>
<span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">UcManageTableImpl</span> <span class="pl-k">extends</span> <span class="pl-e">AbstractTableUc</span> <span class="pl-k">implements</span> <span class="pl-e">UcManageTable</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">@RolesAllowed</span>(<span class="pl-smi">PermissionConstants</span><span class="pl-c1"><span class="pl-k">.</span>DELETE_TABLE</span>)
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">deleteTable</span>(<span class="pl-smi">Long</span> <span class="pl-v">tableId</span>) {

    <span class="pl-smi">TableEntity</span> table <span class="pl-k">=</span> getTableDao()<span class="pl-k">.</span>find(tableId);

    <span class="pl-k">if</span> (<span class="pl-k">!</span>table<span class="pl-k">.</span>getState()<span class="pl-k">.</span>isFree()) {
      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-smi">IllegalEntityStateException</span>(table, table<span class="pl-k">.</span>getState());
    }

    getTableDao()<span class="pl-k">.</span>delete(table);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">@RolesAllowed</span>(<span class="pl-smi">PermissionConstants</span><span class="pl-c1"><span class="pl-k">.</span>SAVE_TABLE</span>)
  <span class="pl-k">public</span> <span class="pl-smi">TableEto</span> <span class="pl-en">saveTable</span>(<span class="pl-k">@Valid</span> <span class="pl-smi">TableEto</span> <span class="pl-v">table</span>) {

    <span class="pl-smi">Objects</span><span class="pl-k">.</span>requireNonNull(table, <span class="pl-s"><span class="pl-pds">"</span>table<span class="pl-pds">"</span></span>);

    <span class="pl-smi">TableEntity</span> tableEntity <span class="pl-k">=</span> getBeanMapper()<span class="pl-k">.</span>map(table, <span class="pl-smi">TableEntity</span><span class="pl-k">.</span>class);
    <span class="pl-c"><span class="pl-c">//</span> initialize</span>
    <span class="pl-k">if</span> (tableEntity<span class="pl-k">.</span>getState() <span class="pl-k">==</span> <span class="pl-c1">null</span>) {
      tableEntity<span class="pl-k">.</span>setState(<span class="pl-smi">TableState</span><span class="pl-c1"><span class="pl-k">.</span>FREE</span>);
    }

    getTableDao()<span class="pl-k">.</span>save(tableEntity);
    <span class="pl-k">return</span> getBeanMapper()<span class="pl-k">.</span>map(tableEntity, <span class="pl-smi">TableEto</span><span class="pl-k">.</span>class);
  }

}</pre></div>
</div>
</div>
<div>
<p>As you can see, implementation classes extend AbstractTableUC class. This class provides the DAO class injection.</p>
</div>
<div>
<div>AbstractTableUC.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.base.usecase</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.logic.base.AbstractUc</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.dataaccess.api.dao.TableDao</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Inject</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">abstract</span> <span class="pl-k">class</span> <span class="pl-en">AbstractTableUc</span> <span class="pl-k">extends</span> <span class="pl-e">AbstractUc</span> {

  <span class="pl-c"><span class="pl-c">/*</span>* @see #getTableDao() <span class="pl-c">*/</span></span>
  <span class="pl-k">private</span> <span class="pl-smi">TableDao</span> tableDao;

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> the {<span class="pl-k">@link</span> TableDao} instance.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-smi">TableDao</span> <span class="pl-en">getTableDao</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>tableDao;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@param</span> tableDao the {<span class="pl-k">@link</span> TableDao} to {<span class="pl-k">@link</span> Inject}.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Inject</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setTableDao</span>(<span class="pl-smi">TableDao</span> <span class="pl-v">tableDao</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>tableDao <span class="pl-k">=</span> tableDao;
  }

}</pre></div>
</div>
</div>
<div>
<p>Finally, we are going to create an interface and the implementating class that joins both UC classes. OASP naming convention for this classes are: [XXX]management and [XXX]managementImpl.</p>
</div>
<div>
<div>Tablemanagement.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcFindTable</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcManageTable</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Interface for TableManagement component.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">interface</span> <span class="pl-en">Tablemanagement</span> <span class="pl-k">extends</span> <span class="pl-e">UcFindTable</span>, <span class="pl-e">UcManageTable</span> {

}</pre></div>
</div>
</div>
<div>
<div>TablemanagementImpl.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.impl</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.base.AbstractBeanMapperSupport</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.logic.api.UseCase</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.Tablemanagement</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.to.TableEto</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcFindTable</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcManageTable</span>;

<span class="pl-k">import</span> <span class="pl-smi">java.util.List</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Inject</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Named</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Implementation of {<span class="pl-k">@link</span> Tablemanagement}.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">@Named</span>
<span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">TablemanagementImpl</span> <span class="pl-k">extends</span> <span class="pl-e">AbstractBeanMapperSupport</span> <span class="pl-k">implements</span> <span class="pl-e">Tablemanagement</span> {

  <span class="pl-k">private</span> <span class="pl-smi">UcFindTable</span> ucFindTable;

  <span class="pl-k">private</span> <span class="pl-smi">UcManageTable</span> ucManageTable;

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * The constructor.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-en">TablemanagementImpl</span>() {

    <span class="pl-c1">super</span>();
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sets the field 'ucFindTable'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> ucFindTable New value for ucFindTable</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Inject</span>
  <span class="pl-k">@UseCase</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setUcFindTable</span>(<span class="pl-smi">UcFindTable</span> <span class="pl-v">ucFindTable</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>ucFindTable <span class="pl-k">=</span> ucFindTable;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sets the field 'ucManageTable'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> ucManageTable New value for ucManageTable</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Inject</span>
  <span class="pl-k">@UseCase</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setUcManageTable</span>(<span class="pl-smi">UcManageTable</span> <span class="pl-v">ucManageTable</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>ucManageTable <span class="pl-k">=</span> ucManageTable;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-smi">TableEto</span> <span class="pl-en">findTable</span>(<span class="pl-smi">Long</span> <span class="pl-v">id</span>) {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>ucFindTable<span class="pl-k">.</span>findTable(id);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">findAllTables</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>ucFindTable<span class="pl-k">.</span>findAllTables();
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">findAllTables</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>ucFindTable<span class="pl-k">.</span>findAllTables();
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   *</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-smi">TableEto</span> <span class="pl-en">saveTable</span>(<span class="pl-smi">TableEto</span> <span class="pl-v">table</span>) {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>ucManageTable<span class="pl-k">.</span>saveTable(table);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * {<span class="pl-k">@inheritDoc</span>}</span>
<span class="pl-c">   *</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Override</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">deleteTable</span>(<span class="pl-smi">Long</span> <span class="pl-v">id</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>ucManageTable<span class="pl-k">.</span>deleteTable(id);
  }

}</pre></div>
</div>
</div>
<div>
<p>This code shows that is merely a delegation for the injected UC and can be automatically generated with eclipse’s powerful refactoring capabilities.</p>
</div>
</div>
</div>
<div>
<h2 id="user-content-securing-the-application">
<a aria-hidden="true" class="anchor" href="#securing-the-application" id="user-content-securing-the-application"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Securing the application</h2>
<div>
<div>
<p>OASP focus on role-based authorization to cope with authorization for executing use case of an application. OASP use the JSR250 annotations, mainly @RolesAllowed, as you have seen, for authorizing method calls against the permissions defined in the annotation body.
So, finally, we have to create a class to declare the RollesAllowed annotation value as constants:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.constants</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Contains constants for the keys of all</span>
<span class="pl-c"> * {<span class="pl-k">@link</span> io.oasp.module.security.common.api.accesscontrol.AccessControlPermission}s.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">abstract</span> <span class="pl-k">class</span> <span class="pl-en">PermissionConstants</span> {

  <span class="pl-c"><span class="pl-c">/*</span>* {@link io.oasp.module.security.common.api.accesscontrol.AccessControlPermission} to retrieve table. <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">static</span> <span class="pl-k">final</span> <span class="pl-smi">String</span> <span class="pl-c1">FIND_TABLE</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>FindTable<span class="pl-pds">"</span></span>;

  <span class="pl-c"><span class="pl-c">/*</span>* {@link io.oasp.module.security.common.api.accesscontrol.AccessControlPermission} to save table. <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">static</span> <span class="pl-k">final</span> <span class="pl-smi">String</span> <span class="pl-c1">SAVE_TABLE</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>SaveTable<span class="pl-pds">"</span></span>;

  <span class="pl-c"><span class="pl-c">/*</span>* {@link io.oasp.module.security.common.api.accesscontrol.AccessControlPermission} to remove table. <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">static</span> <span class="pl-k">final</span> <span class="pl-smi">String</span> <span class="pl-c1">DELETE_TABLE</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>DeleteTable<span class="pl-pds">"</span></span>;
}</pre></div>
</div>
</div>
<div>
<h3 id="user-content-creating-rest-endpoints">
<a aria-hidden="true" class="anchor" href="#creating-rest-endpoints" id="user-content-creating-rest-endpoints"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Creating REST endpoints</h3>
<div>
<p>Web applications need to get data from the server, so we have to expose the methods defined in the logic layer to this applications. We need a class that exposes methods as URLs to allow to the applications get the data. By convention, we call this class <code>[XXX]managementRestServiceImpl</code> where <code>[XXX]</code> will be the name of the entity.</p>
</div>
<div>
<p>This is an example of a REST API for our <code>Table</code> use case using JAX-RS. OASP recommends to use CXF as the implementation for JAX-RS but other libraries following the standard will perform equally.</p>
</div>
<div>
<p>Also note that the implementation does not follow the canonical RESTFUL approach as Devon proposes a more pragmatic way to use REST. Please refer to the Platform Guide <a href="https://github.com/oasp-forge/oasp4j-wiki/wiki/guide-service-layer">service layer</a> chapter for more information on the subject.</p>
</div>
<div>
<div>TablemanagementRestServiceImpl.java</div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.service.impl.rest</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.Table</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.Tablemanagement</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.to.TableEto</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcFindTable</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.usecase.UcManageTable</span>;

<span class="pl-k">import</span> <span class="pl-smi">java.util.List</span>;

<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Inject</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.inject.Named</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.BadRequestException</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.Consumes</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.DELETE</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.GET</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.NotFoundException</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.POST</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.Path</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.PathParam</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.Produces</span>;
<span class="pl-k">import</span> <span class="pl-smi">javax.ws.rs.core.MediaType</span>;

<span class="pl-k">import</span> <span class="pl-smi">net.sf.mmm.util.exception.api.ObjectNotFoundUserException</span>;

<span class="pl-k">import</span> <span class="pl-smi">org.springframework.transaction.annotation.Transactional</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * The service class for REST calls in order to execute the methods in {<span class="pl-k">@link</span> Tablemanagement}.</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">@Path</span>(<span class="pl-s"><span class="pl-pds">"</span>/tablemanagement/v1<span class="pl-pds">"</span></span>)
<span class="pl-k">@Named</span>(<span class="pl-s"><span class="pl-pds">"</span>TablemanagementRestService<span class="pl-pds">"</span></span>)
<span class="pl-k">@Consumes</span>(<span class="pl-smi">MediaType</span><span class="pl-c1"><span class="pl-k">.</span>APPLICATION_JSON</span>)
<span class="pl-k">@Produces</span>(<span class="pl-smi">MediaType</span><span class="pl-c1"><span class="pl-k">.</span>APPLICATION_JSON</span>)
<span class="pl-k">@Transactional</span>
<span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">TablemanagementRestServiceImpl</span> {

  <span class="pl-k">private</span> <span class="pl-smi">Tablemanagement</span> tableManagement;

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * This method sets the field &lt;<span class="pl-ent">tt</span>&gt;tableManagement&lt;/tt&gt;.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> tableManagement the new value of the field tableManagement</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@Inject</span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setTableManagement</span>(<span class="pl-smi">Tablemanagement</span> <span class="pl-v">tableManagement</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>tableManagement <span class="pl-k">=</span> tableManagement;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Delegates to {<span class="pl-k">@link</span> UcFindTable#findTable}.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> id the ID of the {<span class="pl-k">@link</span> TableEto}</span>
<span class="pl-c">   * <span class="pl-k">@return</span> the {<span class="pl-k">@link</span> TableEto}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@GET</span>
  <span class="pl-k">@Path</span>(<span class="pl-s"><span class="pl-pds">"</span>/table/{id}/<span class="pl-pds">"</span></span>)
  <span class="pl-k">public</span> <span class="pl-smi">TableEto</span> <span class="pl-en">getTable</span>(<span class="pl-k">@PathParam</span>(<span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span>) <span class="pl-smi">String</span> <span class="pl-v">id</span>) {

    <span class="pl-smi">Long</span> idAsLong;
    <span class="pl-k">if</span> (id <span class="pl-k">==</span> <span class="pl-c1">null</span>) {
      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-smi">BadRequestException</span>(<span class="pl-s"><span class="pl-pds">"</span>missing id<span class="pl-pds">"</span></span>);
    }
    <span class="pl-k">try</span> {
      idAsLong <span class="pl-k">=</span> <span class="pl-smi">Long</span><span class="pl-k">.</span>parseLong(id);
    } <span class="pl-k">catch</span> (<span class="pl-smi">NumberFormatException</span> e) {
      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-smi">BadRequestException</span>(<span class="pl-s"><span class="pl-pds">"</span>id is not a number<span class="pl-pds">"</span></span>);
    } <span class="pl-k">catch</span> (<span class="pl-smi">NotFoundException</span> e) {
      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-smi">BadRequestException</span>(<span class="pl-s"><span class="pl-pds">"</span>table not found<span class="pl-pds">"</span></span>);
    }
    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>tableManagement<span class="pl-k">.</span>findTable(idAsLong);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Delegates to {<span class="pl-k">@link</span> UcFindTable#findAllTables}.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@return</span> list of all existing restaurant {<span class="pl-k">@link</span> TableEto}s</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@GET</span>
  <span class="pl-k">@Path</span>(<span class="pl-s"><span class="pl-pds">"</span>/table/<span class="pl-pds">"</span></span>)
  <span class="pl-k">public</span> <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">getAllTables</span>() {

    <span class="pl-k">List&lt;tableeto&gt;</span> allTables <span class="pl-k">=</span> <span class="pl-c1">this</span><span class="pl-k">.</span>tableManagement<span class="pl-k">.</span>findAllTables();
    <span class="pl-k">return</span> allTables;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Delegates to {<span class="pl-k">@link</span> UcFindTable#findFreeTables}.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@return</span> list of all existing free {<span class="pl-k">@link</span> TableEto}s</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@GET</span>
  <span class="pl-k">@Path</span>(<span class="pl-s"><span class="pl-pds">"</span>/freetables/<span class="pl-pds">"</span></span>)
  <span class="pl-k">public</span> <span class="pl-k">List&lt;tableeto&gt;</span> <span class="pl-en">getFreeTables</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>tableManagement<span class="pl-k">.</span>findFreeTables();
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Delegates to {<span class="pl-k">@link</span> UcManageTable#saveTable}.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> table the {<span class="pl-k">@link</span> TableEto} to be created</span>
<span class="pl-c">   * <span class="pl-k">@return</span> the recently created {<span class="pl-k">@link</span> TableEto}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@POST</span>
  <span class="pl-k">@Path</span>(<span class="pl-s"><span class="pl-pds">"</span>/table/<span class="pl-pds">"</span></span>)
  <span class="pl-k">public</span> <span class="pl-smi">TableEto</span> <span class="pl-en">saveTable</span>(<span class="pl-smi">TableEto</span> <span class="pl-v">table</span>) {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>tableManagement<span class="pl-k">.</span>saveTable(table);
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Delegates to {<span class="pl-k">@link</span> UcManageTable#deleteTable}.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> id ID of the {<span class="pl-k">@link</span> TableEto} to be deleted</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">@DELETE</span>
  <span class="pl-k">@Path</span>(<span class="pl-s"><span class="pl-pds">"</span>/table/{id}/<span class="pl-pds">"</span></span>)
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">deleteTable</span>(<span class="pl-k">@PathParam</span>(<span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span>) <span class="pl-smi">Long</span> <span class="pl-v">id</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>tableManagement<span class="pl-k">.</span>deleteTable(id);
  }
}</pre></div>
</div>
</div>
<div>
<p>Is important to mention:</p>
</div>
<div>
<ul>
<li>
<p>We send and receive the information in JSON format.</p>
</li>
<li>
<p>We specify the version of the entire API or every method.</p>
</li>
</ul>
</div>
<div>
<p>Finally, we need to add this implementation into JAX-RS server bean definition:</p>
</div>
<div>
<div>
<div class="highlight highlight-text-xml"><pre>  &lt;<span class="pl-ent">jaxrs</span><span class="pl-ent">:</span><span class="pl-ent">server</span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>CxfRestServices<span class="pl-pds">"</span></span> <span class="pl-e">address</span>=<span class="pl-s"><span class="pl-pds">"</span>/rest<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">jaxrs</span><span class="pl-ent">:</span><span class="pl-ent">providers</span>&gt;
      &lt;<span class="pl-ent">bean</span> <span class="pl-e">class</span>=<span class="pl-s"><span class="pl-pds">"</span>com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider<span class="pl-pds">"</span></span>&gt;
      &lt;<span class="pl-ent">property</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>mapper<span class="pl-pds">"</span></span>&gt;
        &lt;<span class="pl-ent">ref</span> <span class="pl-e">bean</span>=<span class="pl-s"><span class="pl-pds">"</span>JacksonObjectMapper<span class="pl-pds">"</span></span>&gt;
      &lt;/<span class="pl-ent">ref</span>&gt;&lt;/<span class="pl-ent">property</span>&gt;
      &lt;/<span class="pl-ent">bean</span>&gt;
      &lt;<span class="pl-ent">ref</span> <span class="pl-e">bean</span>=<span class="pl-s"><span class="pl-pds">"</span>RestServiceExceptionFacade<span class="pl-pds">"</span></span>&gt;
    &lt;/<span class="pl-ent">ref</span>&gt;&lt;/<span class="pl-ent">jaxrs</span><span class="pl-ent">:</span><span class="pl-ent">providers</span>&gt;
    &lt;<span class="pl-ent">jaxrs</span><span class="pl-ent">:</span><span class="pl-ent">servicebeans</span>&gt;
      &lt;<span class="pl-ent">ref</span> <span class="pl-e">bean</span>=<span class="pl-s"><span class="pl-pds">"</span>TablemanagementRestService<span class="pl-pds">"</span></span>&gt;
      &lt;<span class="pl-ent">ref</span> <span class="pl-e">bean</span>=<span class="pl-s"><span class="pl-pds">"</span>SecurityRestService<span class="pl-pds">"</span></span>&gt;
    &lt;/<span class="pl-ent">ref</span>&gt;&lt;/<span class="pl-ent">ref</span>&gt;&lt;/<span class="pl-ent">jaxrs</span><span class="pl-ent">:</span><span class="pl-ent">servicebeans</span>&gt;
  &lt;/<span class="pl-ent">jaxrs</span><span class="pl-ent">:</span><span class="pl-ent">server</span>&gt;</pre></div>
</div>
</div>
<div>
<p>As you can see, we have defined the REST URLs for our Table user case. Now, for example, you can find all tables on this URL:</p>
</div>
<div>
<div>
<pre><code>http://server:port/application-name/tablemanagement/v1/table/</code></pre>
</div>
</div>
<div>
<h4 id="user-content-dto-conversion">
<a aria-hidden="true" class="anchor" href="#dto-conversion" id="user-content-dto-conversion"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>DTO conversion</h4>
<div>
<p>In the logic API, the methods of the classes should return Data Transfer Object (DTO) instead of entities. So, in OASP we have a mechanism to convert the entities into DTOs.</p>
</div>
<div>
<p>This is an example of how to convert a entity into a DTO:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-java"><pre>    <span class="pl-c"><span class="pl-c">//</span> Conversion for lists</span>
    getBeanMapper()<span class="pl-k">.</span>mapList(tableList, <span class="pl-smi">TableDto</span><span class="pl-k">.</span>class);

    <span class="pl-c"><span class="pl-c">//</span> Conversion for objects</span>
    getBeanMapper()<span class="pl-k">.</span>map(table, <span class="pl-smi">TableDto</span><span class="pl-k">.</span>class);</pre></div>
</div>
</div>
<div>
<p>In the example, we use the function getBeanMapper(). This function provides us an API to convert entities into DTOs. In the logic layer, we only have to extend the class AbstractUc to access to this functionality.</p>
</div>
</div>
<div>
<h4 id="user-content-exceptions">
<a aria-hidden="true" class="anchor" href="#exceptions" id="user-content-exceptions"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Exceptions</h4>
<div>
<h5 id="user-content-user-exceptions">
<a aria-hidden="true" class="anchor" href="#user-exceptions" id="user-content-user-exceptions"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>User exceptions</h5>

</div>
<div>
<h5 id="user-content-non-controlled-exceptions">
<a aria-hidden="true" class="anchor" href="#non-controlled-exceptions" id="user-content-non-controlled-exceptions"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Non controlled exceptions</h5>

</div>
</div>
</div>
</div>
</div>
<div>
<h2 id="user-content-internationalization">
<a aria-hidden="true" class="anchor" href="#internationalization" id="user-content-internationalization"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Internationalization</h2>
<div>
<div>
<h3 id="user-content-pagination">
<a aria-hidden="true" class="anchor" href="#pagination" id="user-content-pagination"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Pagination</h3>

</div>
<div>
<h3 id="user-content-sorting">
<a aria-hidden="true" class="anchor" href="#sorting" id="user-content-sorting"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Sorting</h3>
<div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.datatype</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * This enum identifies the entity, on which the sorting should be executed.</span>
<span class="pl-c"> *</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">enum</span> <span class="pl-en">TableSortByHitEntry</span> {

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sort by id.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-c1">ID</span>(<span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span>),
  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sort by number.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-c1">NUMBER</span>(<span class="pl-s"><span class="pl-pds">"</span>number<span class="pl-pds">"</span></span>),
  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sort by state.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-c1">STATE</span>(<span class="pl-s"><span class="pl-pds">"</span>state<span class="pl-pds">"</span></span>),
  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sort by waiterId.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-c1">WAITERID</span>(<span class="pl-s"><span class="pl-pds">"</span>waiterId<span class="pl-pds">"</span></span>);

  <span class="pl-k">private</span> <span class="pl-k">final</span> <span class="pl-smi">String</span> sortByAttributeName;

  <span class="pl-k">private</span> <span class="pl-en">TableSortByHitEntry</span>(<span class="pl-smi">String</span> <span class="pl-v">sortByAttributeName</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>sortByAttributeName <span class="pl-k">=</span> sortByAttributeName;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * <span class="pl-k">@return</span> sortByAttributeName</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-smi">String</span> <span class="pl-en">getSortByAttributeName</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>sortByAttributeName;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * This method returns an {<span class="pl-k">@link</span> TableSortByHitEntry} for a given {<span class="pl-k">@link</span> #getSortByAttributeName() <span class="pl-corl">attribute name</span>}.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> sortByAttributeName the name.</span>
<span class="pl-c">   * <span class="pl-k">@return</span> an {<span class="pl-k">@link</span> TableSortByHitEntry}</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">static</span> <span class="pl-smi">TableSortByHitEntry</span> <span class="pl-en">getEntryForAttributeName</span>(<span class="pl-smi">String</span> <span class="pl-v">sortByAttributeName</span>) {

    <span class="pl-k">for</span> (<span class="pl-smi">TableSortByHitEntry</span> entry <span class="pl-k">:</span> <span class="pl-smi">TableSortByHitEntry</span><span class="pl-k">.</span>values()) {
      <span class="pl-k">if</span> (entry<span class="pl-k">.</span>sortByAttributeName<span class="pl-k">.</span>equals(sortByAttributeName)) {
        <span class="pl-k">return</span> entry;
      }
    }

    <span class="pl-k">return</span> <span class="pl-c1">null</span>;
  }
}</pre></div>
</div>
</div>
<div>
<div>
<div class="highlight highlight-source-java"><pre><span class="pl-k">package</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.logic.api.to</span>;

<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.general.common.api.datatype.OrderBy</span>;
<span class="pl-k">import</span> <span class="pl-smi">io.oasp.gastronomy.restaurant.tablemanagement.common.api.datatype.TableSortByHitEntry</span>;

<span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c"> * Table sortBy class</span>
<span class="pl-c"> <span class="pl-c">*/</span></span>
<span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">TableSortBy</span> {

  <span class="pl-k">private</span> <span class="pl-smi">TableSortByHitEntry</span> sortByEntry;

  <span class="pl-k">private</span> <span class="pl-smi">OrderBy</span> orderBy;

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * The constructor.</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-en">TableSortBy</span>() {

    <span class="pl-c1">this</span><span class="pl-k">.</span>sortByEntry <span class="pl-k">=</span> <span class="pl-smi">TableSortByHitEntry</span><span class="pl-c1"><span class="pl-k">.</span>ID</span>;
    <span class="pl-c1">this</span><span class="pl-k">.</span>orderBy <span class="pl-k">=</span> <span class="pl-smi">OrderBy</span><span class="pl-c1"><span class="pl-k">.</span>ASC</span>;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Returns the field 'sortByEntry'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@return</span> Value of sortByEntry</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-smi">TableSortByHitEntry</span> <span class="pl-en">getSortByEntry</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>sortByEntry;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sets the field 'sortByEntry'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> sortByEntry New value for sortByEntry</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setSortByEntry</span>(<span class="pl-smi">TableSortByHitEntry</span> <span class="pl-v">sortByEntry</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>sortByEntry <span class="pl-k">=</span> sortByEntry;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Returns the field 'orderBy'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@return</span> Value of orderBy</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-smi">OrderBy</span> <span class="pl-en">getOrderBy</span>() {

    <span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">.</span>orderBy;
  }

  <span class="pl-c"><span class="pl-c">/**</span></span>
<span class="pl-c">   * Sets the field 'orderBy'.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   * <span class="pl-k">@param</span> orderBy New value for orderBy</span>
<span class="pl-c">   <span class="pl-c">*/</span></span>
  <span class="pl-k">public</span> <span class="pl-k">void</span> <span class="pl-en">setOrderBy</span>(<span class="pl-smi">OrderBy</span> <span class="pl-v">orderBy</span>) {

    <span class="pl-c1">this</span><span class="pl-k">.</span>orderBy <span class="pl-k">=</span> orderBy;
  }

}</pre></div>
</div>
</div>
</div>
<div>
<h3 id="user-content-testing-endpoints">
<a aria-hidden="true" class="anchor" href="#testing-endpoints" id="user-content-testing-endpoints"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Testing endpoints</h3>
<div>
<p>SOAPUI, JUnit?</p>
</div>
</div>
<div>
<h3 id="user-content-creating-web-services">
<a aria-hidden="true" class="anchor" href="#creating-web-services" id="user-content-creating-web-services"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Creating Web Services</h3>

</div>
</div>
</div>
        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p><a href="http://creativecommons.org/licenses/by-nd/4.0/" rel="nofollow"><img alt="Creative Commons License Agreement" data-canonical-src="http://i.creativecommons.org/l/by-nd/4.0/88x31.png" src="https://camo.githubusercontent.com/171d004f9ccb9199e35ac8ec3d99ede916037a9f/687474703a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d6e642f342e302f38387833312e706e67"/></a><br/><span>This documentation</span> is licensed under the <a href="http://creativecommons.org/licenses/by-nd/4.0/" rel="nofollow">Creative Commons License (Attribution-NoDerivatives 4.0 International)</a>.</p>

          </div>
        </div>
    </div>]