[<div class="wiki-body gollum-asciidoc-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <div>
<div>Table of Contents</div>
<ul>
<li>
<a href="#service-layer">Service Layer</a>
<ul>
<li><a href="#types-of-services">Types of Services</a></li>
<li><a href="#versioning">Versioning</a></li>
<li><a href="#interoperability">Interoperability</a></li>
<li><a href="#service-considerations">Service Considerations</a></li>
<li><a href="#security">Security</a></li>
</ul>
</li>
</ul>
</div>
<h1 id="user-content-service-layer">
<a aria-hidden="true" class="anchor" href="#service-layer" id="user-content-service-layer"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Service Layer</h1>
<div>
<p>The service layer is responsible to expose functionality of the <a href="guide-logic-layer">logical layer</a> to external consumers over a network via <a href="#protocol">technical protocols</a>.</p>
</div>
<div>
<h2 id="user-content-types-of-services">
<a aria-hidden="true" class="anchor" href="#types-of-services" id="user-content-types-of-services"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Types of Services</h2>
<div>
<div>
<p>If you want to create a service please distinguish the following types of services:</p>
</div>
<div>
<ul>
<li>
<p><strong>External Services</strong><br/>
are used for communication between different companies, vendors, or partners.</p>
</li>
<li>
<p><strong>Internal Services</strong><br/>
are used for communication between different applications in the same application landscape of the same vendor.</p>
<div>
<ul>
<li>
<p><strong>Back-end Services</strong><br/>
are internal services between Java back-end components typically with different release and deployment cycles (if not Java consider this as external service).</p>
</li>
<li>
<p><strong>JS-Client Services</strong><br/>
are internal services provided by the Java back-end for JavaScript clients (GUI).</p>
</li>
<li>
<p><strong>Java-Client Services</strong><br/>
are internal services provided by the Java back-end for a native Java client (JavaFx, EclipseRcp, etc.).</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<div>
<p>The choices for technology and protocols will depend on the type of service. The following table gives a guideline for aspects according to the service types.</p>
</div>
<table>
<caption>Table 1. Aspects according to service-type</caption>
<colgroup>
<col/>
<col/>
<col/>
<col/>
<col/>
</colgroup>
<thead>
<tr>
<th><strong>Aspect</strong></th>
<th><strong>External Service</strong></th>
<th><strong>Back-end Service</strong></th>
<th><strong>JS-Client Service</strong></th>
<th><strong>Java-Client Service</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><p><a href="#versioning"><strong>Versioning</strong></a></p></td>
<td><p>required</p></td>
<td><p>required</p></td>
<td><p>not required</p></td>
<td><p>not required</p></td>
</tr>
<tr>
<td><p><a href="#interoperability"><strong>Interoperability</strong></a></p></td>
<td><p>mandatory</p></td>
<td><p>not required</p></td>
<td><p>implicit</p></td>
<td><p>not required</p></td>
</tr>
<tr>
<td><p><a href="#protocol">Recommended <strong>Protocol</strong></a></p></td>
<td><p><a href="guide-soap">SOAP</a> or <a href="guide-rest">REST</a></p></td>
<td><p><a href="guide-rest">REST</a></p></td>
<td><p><a href="guide-rest">REST</a>+JSON</p></td>
<td><p><a href="guide-rest">REST</a></p></td>
</tr>
</tbody>
</table>
</div>
</div>
<div>
<h2 id="user-content-versioning">
<a aria-hidden="true" class="anchor" href="#versioning" id="user-content-versioning"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Versioning</h2>
<div>
<div>
<p>For services consumed by other applications we use versioning to prevent incompatibilities between applications when deploying updates. This is done by the following conventions:</p>
</div>
<div>
<ul>
<li>
<p>We define a version number and prefix it with <code>v' (e.g. `v1</code>).</p>
</li>
<li>
<p>If we support previous versions we use that version numbers as part of the Java package defining the service API (e.g. <code>com.foo.application.component.service.api.v1</code>)</p>
</li>
<li>
<p>We use the version number as part of the service name in the remote URL (e.g. <code><a href="https://application.foo.com/services/rest/component/v1/resource" rel="nofollow">https://application.foo.com/services/rest/component/v1/resource</a></code>)</p>
</li>
<li>
<p>Whenever we need to change the API of a service in an incompatible, we create an isolated version of the service and increment the version (e.g. <code>v2</code>) . In the implementation of different version of the same service, we can place compatibility code and delegate to the same unversioned use-case of the logic layer whenever possible.</p>
</li>
<li>
<p>For maintenance and simplicity we avoid keeping more than one previous version.</p>
</li>
</ul>
</div>
</div>
</div>
<div>
<h2 id="user-content-interoperability">
<a aria-hidden="true" class="anchor" href="#interoperability" id="user-content-interoperability"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Interoperability</h2>
<div>
<div>
<p>For services that are consumed by clients with different technology, <em>interoperability</em> is required. This is addressed by selecting the right protocol, following protocol-specific best practices and following our considerations especially <em>simplicity</em>.</p>
</div>
</div>
</div>
<div>
<h2 id="user-content-service-considerations">
<a aria-hidden="true" class="anchor" href="#service-considerations" id="user-content-service-considerations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Service Considerations</h2>
<div>
<div>
<p>The term <em>service</em> is quite generic and therefore easily misunderstood. It is a unit exposing coherent functionality via a well-defined interface over a network. For the design of a service, we consider the following aspects:</p>
</div>
<div>
<ul>
<li>
<p><strong>self-contained</strong><br/>
The entire API of the service shall be self-contained and have no dependencies on other parts of the application (other services, implementations, etc.).</p>
</li>
<li>
<p><strong>idem-potent</strong><br/>
E.g. creation of the same master-data entity has no effect (no error)</p>
</li>
<li>
<p><strong>loosely coupled</strong><br/>
Service consumers have minimum knowledge and dependencies on the service provider.</p>
</li>
<li>
<p><strong>normalized</strong><br/>
complete, no redundancy, minimal</p>
</li>
<li>
<p><strong>coarse-grained</strong><br/>
Service provides rather large operations (save entire entity or set of entities rather than individual attributes)</p>
</li>
<li>
<p><strong>atomic</strong><br/>
Process individual entities (for processing large sets of data, use a <a href="guide-batch-layer">batch</a> instead of a service)</p>
</li>
<li>
<p><strong>simplicity</strong><br/>
avoid polymorphism, RPC methods with unique name per signature and no overloading, avoid attachments (consider separate download service), etc.</p>
</li>
</ul>
</div>
</div>
</div>
<div>
<h2 id="user-content-security">
<a aria-hidden="true" class="anchor" href="#security" id="user-content-security"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Security</h2>
<div>
<div>
<p>Your services are the major entry point to your application. Hence security considerations are important here.</p>
</div>
<div>
<p>See <a href="guide-rest#security">REST Security</a>.</p>
</div>
</div>
</div>
        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p><a href="http://creativecommons.org/licenses/by-nd/4.0/" rel="nofollow"><img alt="Creative Commons License Agreement" data-canonical-src="http://i.creativecommons.org/l/by-nd/4.0/88x31.png" src="https://camo.githubusercontent.com/171d004f9ccb9199e35ac8ec3d99ede916037a9f/687474703a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d6e642f342e302f38387833312e706e67"/></a><br/><span>This documentation</span> is licensed under the <a href="http://creativecommons.org/licenses/by-nd/4.0/" rel="nofollow">Creative Commons License (Attribution-NoDerivatives 4.0 International)</a>.</p>

          </div>
        </div>
    </div>]