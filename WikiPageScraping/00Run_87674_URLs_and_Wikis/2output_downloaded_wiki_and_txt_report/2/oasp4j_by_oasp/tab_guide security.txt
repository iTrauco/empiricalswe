[<div class="wiki-body gollum-asciidoc-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <div>
<div>Table of Contents</div>
<ul>
<li>
<a href="#security">Security</a>
<ul>
<li><a href="#vulnerabilities-and-protection">Vulnerabilities and Protection</a></li>
<li>
<a href="#tools">Tools</a>
<ul>
<li><a href="#dependency-check">Dependency Check</a></li>
<li><a href="#penetration-testing">Penetration Testing</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<h1 id="user-content-security">
<a aria-hidden="true" class="anchor" href="#security" id="user-content-security"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Security</h1>
<div>
<p>Security is todays most important cross-cutting concern of an application and an enterprise IT-landscape. We seriously care about security and give you detailed guides to prevent pitfalls, vulnerabilities, and other disasters. While many mistakes can be avoided by following our guidelines you still have to consider security and think about it in your design and implementation. The security guide will not only automatically prevent you from any harm, but will provide you hints and best practices already used in different software products.</p>
</div>
<div>
<p>An important aspect of security is proper authentication and autorization as described in <a href="guide-access-control">access-control</a>. In the following we discuss about potential vulnerabilities and protection to prevent them.</p>
</div>
<div>
<h2 id="user-content-vulnerabilities-and-protection">
<a aria-hidden="true" class="anchor" href="#vulnerabilities-and-protection" id="user-content-vulnerabilities-and-protection"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Vulnerabilities and Protection</h2>
<div>
<div>
<p>Independent from classical authentication and authorization mechanisms there are many common pitfalls that can lead to vulnerabilities and security issues in your application such as XSS, CSRF, SQL-injection, log-forging, etc. A good source of information about this is the <a href="https://www.owasp.org" rel="nofollow">OWASP</a>.
We address these common threats individually in <em>security</em> sections of our technological guides as a concrete solution to prevent an attack typically depends on the according technology. The following table illustrates common threats and contains links to the solutions and protection-mechanisms provided by the OASP:</p>
</div>
<table>
<caption>Table 1. Security threats and protection-mechanisms</caption>
<colgroup>
<col/>
<col/>
<col/>
</colgroup>
<thead>
<tr>
<th><strong>Threat</strong></th>
<th><strong>Protection</strong></th>
<th><strong>Link to details</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection" rel="nofollow">A1 Injection</a></p></td>
<td><p>validate input, escape output, use proper frameworks</p></td>
<td><p><a href="guide-dataaccess-layer#security">SQL Injection</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A2-Broken_Authentication_and_Session_Management" rel="nofollow">A2 Broken Authentication and Session Management</a></p></td>
<td><p>encrypt all channels, use a central identity management with strong password-policy</p></td>
<td><p><a href="guide-access-control#authentication">Authentication</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)" rel="nofollow">A3 XSS</a></p></td>
<td><p>prevent injection (see A1) for HTML, JavaScript and CSS and understand same-origin-policy</p></td>
<td><p><a href="guide-client-layer#security">client-layer</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References" rel="nofollow">A4 Insecure Direct Object References</a></p></td>
<td><p>Using direct object references (IDs) only with appropriate authorization</p></td>
<td><p><a href="guide-logic-layer#direct-object-references">logic-layer</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration" rel="nofollow">A5 Security Misconfiguration</a></p></td>
<td><p>Use OASP application template and guides to avoid</p></td>
<td><p><a href="http://repo1.maven.org/maven2/io/oasp/java/templates/" rel="nofollow">application template</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure" rel="nofollow">A6 Sensitive Data Exposure</a></p></td>
<td><p>Use secured exception facade, design your data model accordingly</p></td>
<td><p><a href="guide-service-layer#rest-exception-handling">REST exception handling</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control" rel="nofollow">A7 Missing Function Level Access Control</a></p></td>
<td><p>Ensure proper authorization for all use-cases, use <code>@DenyAll</code> as default to enforce</p></td>
<td><p><a href="guide-access-control#configuration-on-java-method-level">Method authorization</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A8-Cross-Site_Request_Forgery_(CSRF)" rel="nofollow">A8 CSRF</a></p></td>
<td><p>secure mutable service operations with an explicit CSRF security token sent in HTTP header and verified on the server</p></td>
<td><p><a href="guide-service-layer#csrf">service-layer security</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities" rel="nofollow">A9 Using Components with Known Vulnerabilities</a></p></td>
<td><p>subscribe to security newsletters, recheck products and their versions continuously, use OASP dependency management</p></td>
<td><p><a href="https://cve.mitre.org/news/newsletter.html" rel="nofollow">CVE newsletter</a> and <a href="#dependency-check">dependency check</a></p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Top_10_2013-A10-Unvalidated_Redirects_and_Forwards" rel="nofollow">A10 Unvalidated Redirects and Forwards</a></p></td>
<td><p>Avoid using redirects and forwards, in case you need them do a security audit on the solution.</p></td>
<td><p>OASP proposes to use rich-clients (SPA/RIA). We only use redirects for login in a safe way.</p></td>
</tr>
<tr>
<td><p><a href="https://www.owasp.org/index.php/Log_Forging" rel="nofollow">Log-Forging</a></p></td>
<td><p>Escape newlines in log messages</p></td>
<td><p><a href="guide-logging#security">logging security</a></p></td>
</tr>
</tbody>
</table>
</div>
</div>
<div>
<h2 id="user-content-tools">
<a aria-hidden="true" class="anchor" href="#tools" id="user-content-tools"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Tools</h2>
<div>
<div>
<h3 id="user-content-dependency-check">
<a aria-hidden="true" class="anchor" href="#dependency-check" id="user-content-dependency-check"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Dependency Check</h3>
<div>
<p>To address <a href="https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities" rel="nofollow">A9 Using Components with Known Vulnerabilities</a> we integrated <a href="https://www.owasp.org/index.php/OWASP_Dependency_Check" rel="nofollow">OWASP dependency check</a> into the OASP maven build. If you build an OASP application (sample or any app created from our <a href="tutorial-newapp">app-template</a>) you can activate dependency check with the <code>security</code> profile:</p>
</div>
<div>
<div>
<div class="highlight highlight-source-shell"><pre>mvn clean install -P security</pre></div>
</div>
</div>
<div>
<p>This does not run by default as it causes a huge overhead for the build performance. However , consider to build this in your CI at least nightly.
After the dependency check is performed , you will find the results in <code>target/dependency-check-report.html</code> of each module. The report will also always be generated when the site is build (<code>mvn site</code>).</p>
</div>
</div>
<div>
<h3 id="user-content-penetration-testing">
<a aria-hidden="true" class="anchor" href="#penetration-testing" id="user-content-penetration-testing"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Penetration Testing</h3>
<div>
<p>For penetration testing (testing for vulnerabilities) of your web application, we recommend the following tools:</p>
</div>
<div>
<ul>
<li>
<p><a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project" rel="nofollow">ZAP</a> (OWASP Zed Attack Proxy Project)</p>
</li>
<li>
<p><a href="http://sqlmap.org/" rel="nofollow">sqlmap</a> (or <a href="https://github.com/PaulSec/HQLmap">HQLmap</a>)</p>
</li>
<li>
<p><a href="https://nmap.org/" rel="nofollow">nmap</a></p>
</li>
<li>
<p>See the marvellous presentation <a href="https://www.Christian-Schneider.net/downloads/JAX-Talk-Werkzeugkasten-Security-Professional.pdf" rel="nofollow">Toolbox of a security professional</a> from <a href="https://www.Christian-Schneider.net" rel="nofollow">Christian Schneider</a>.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p><a href="http://creativecommons.org/licenses/by-nd/4.0/" rel="nofollow"><img alt="Creative Commons License Agreement" data-canonical-src="http://i.creativecommons.org/l/by-nd/4.0/88x31.png" src="https://camo.githubusercontent.com/171d004f9ccb9199e35ac8ec3d99ede916037a9f/687474703a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d6e642f342e302f38387833312e706e67"/></a><br/><span>This documentation</span> is licensed under the <a href="http://creativecommons.org/licenses/by-nd/4.0/" rel="nofollow">Creative Commons License (Attribution-NoDerivatives 4.0 International)</a>.</p>

          </div>
        </div>
    </div>]