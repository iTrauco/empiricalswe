[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <table>
<thead>
<tr>
<th>Branches</th>
<th>Issues</th>
<th>Main developers</th>
</tr>
</thead>
<tbody>
<tr>
<td>master</td>
<td></td>
<td>
<a href="/a-teammate">@a-teammate</a>, <a href="/aschaeffer">@aschaeffer</a>
</td>
</tr>
</tbody>
</table>
<h2>
<a aria-hidden="true" class="anchor" href="#motivation" id="user-content-motivation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Motivation</h2>
<p>Logging is an important requirement for software nowadays. Inexor is now able to log to multiple loggers, which writes to multiple targets (called sinks) with a customizable logging format. The advantage is the flexibility of the new logging system. Please notice that logoutf and conoutf have been replaced by the logging system (see Usage below).</p>
<ul>
<li>Log levels
<ul>
<li>Debug</li>
<li>Info</li>
<li>Warn</li>
<li>Error</li>
<li>Critical</li>
</ul>
</li>
<li>Log targets (= Sinks)
<ul>
<li>Inexor Ingame Console</li>
<li>Stdout / Stderr</li>
<li>Daily Logfile</li>
<li>Rotating Logfile</li>
<li>MSVC</li>
<li>Syslog</li>
</ul>
</li>
<li>Log format
<ul>
<li>Date / Time</li>
<li>Logger name</li>
<li>Log level</li>
<li>Message</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#default-loggers-in-inexor" id="user-content-default-loggers-in-inexor"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Default loggers in Inexor</h2>
<ul>
<li>global</li>
<li>chat</li>
<li>gameplay</li>
<li>edit</li>
<li>server</li>
<li>frag_involved</li>
<li>frag_not_involved</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#cubescript-commands" id="user-content-cubescript-commands"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cubescript commands</h2>
<ul>
<li>loglevel &lt;logger_name&gt; &lt;log_level&gt;
<ul>
<li>Example: /loglevel "global" "warning"</li>
</ul>
</li>
<li>logformat &lt;logger_name&gt; 
<ul>
<li>Example: /logformat "global" "%H:%M:%S [%n] [%l] %v"</li>
<li>see <a href="https://github.com/gabime/spdlog/wiki/3.-Custom-formatting">spdlog formatting strings</a> for reference</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#how-to-use-the-loggers" id="user-content-how-to-use-the-loggers"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>How to use the loggers</h2>
<p>You can choose between stream like logging like:</p>
<div class="highlight highlight-source-c++"><pre>    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;debug() &lt;&lt; "Debug message " &lt;&lt; some_var &lt;&lt; " " &lt;&lt; some_other_var;
    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;info() &lt;&lt; "Info message " &lt;&lt; some_var &lt;&lt; " " &lt;&lt; some_other_var;
    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;warn() &lt;&lt; "Warning message " &lt;&lt; some_var &lt;&lt; " " &lt;&lt; some_other_var;
    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>edit<span class="pl-pds">"</span></span>)-&gt;error() &lt;&lt; "Error message " &lt;&lt; some_var &lt;&lt; " " &lt;&lt; some_other_var;
    
    <span class="pl-c"><span class="pl-c">//</span> or step by step:</span>
    <span class="pl-k">auto</span> global_logger = spdlog::get(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>);
    global_logger-&gt;<span class="pl-en">info</span>() &lt;&lt; "Message";</pre></div>
<p>and the more printf like python style as described <a href="http://cppformat.github.io/latest/syntax.html#formatspec" rel="nofollow">here</a> looks as following:</p>
<div class="highlight highlight-source-c++"><pre>    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;info(<span class="pl-s"><span class="pl-pds">"</span>Easy padding in numbers like {:08d}<span class="pl-pds">"</span></span>, <span class="pl-c1">12</span>);
    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;info(<span class="pl-s"><span class="pl-pds">"</span>Positional args are {1} {0}..<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>too<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>supported<span class="pl-pds">"</span></span>);
 
    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;info(<span class="pl-s"><span class="pl-pds">"</span>Support for int: {0:d};  hex: {0:x};  oct: {0:o}; bin: {0:b}<span class="pl-pds">"</span></span>, <span class="pl-c1">42</span>);
    <span class="pl-c"><span class="pl-c">//</span>note how we only pass one integer, but reference it multiply times with {0}</span>
     
    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;info(<span class="pl-s"><span class="pl-pds">"</span>Support for float precision {:03.2f}<span class="pl-pds">"</span></span>, <span class="pl-c1">1.23456</span>);
    <span class="pl-c"><span class="pl-c">//</span>0 == sign aligned, 3 == width, .2 == precision, f == float</span>

    <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;info(<span class="pl-s"><span class="pl-pds">"</span>{:&lt;30}<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>left aligned<span class="pl-pds">"</span></span>);</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#colors" id="user-content-colors"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Colors</h3>
<p>Colors are implemented in the new logging system using ANSI color codes (24bit mode).
For ease of use 7 colors are predefined for the C++ part of the logging-system.</p>
<p><code>COL_GREEN</code>, <code>COL_RED</code>, <code>COL_YELLOW</code>, <code>COL_BLUE</code>, <code>COL_GREY</code>, <code>COL_WHITE</code>, <code>COL_MAGENTA</code>, <code>COL_ORANGE</code></p>
<p>They are casual (C-)strings:</p>
<div class="highlight highlight-source-c++"><pre>   <span class="pl-en">spdlog::get</span>(<span class="pl-s"><span class="pl-pds">"</span>global<span class="pl-pds">"</span></span>)-&gt;info() &lt;&lt; COL_RED &lt;&lt; "This output is red. " &lt;&lt; COL_GREEN &lt;&lt; "Followed by some green stuff";</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#links" id="user-content-links"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Links</h3>
<ol>
<li>
<a href="https://github.com/gabime/spdlog/wiki/1.-QuickStart">https://github.com/gabime/spdlog/wiki/1.-QuickStart</a> Introduction to spdlog</li>
<li>
<a href="http://cppformat.github.io/latest/syntax.html" rel="nofollow">http://cppformat.github.io/latest/syntax.html</a> C++Format spec (used by spdlog for formatting)</li>
</ol>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p>Need help? <a class="internal present" href="/inexorgame/inexor-core/wiki/Contact">Contact</a> us.</p>

          </div>
        </div>
    </div>]