[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#objective" id="user-content-objective"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Objective</h2>
<p>We are about to implement an improved highly dynamic particle system.<br/>
You can watch a <a href="https://www.youtube.com/watch?v=j622-D-CCTI&amp;list=PLCbZc-GgCGzLhkGS5l850tjCQrPUeapK6&amp;index=41" rel="nofollow">tech demo here</a>.</p>
<p><a href="http://www.youtube.com/watch?v=0b_qnbV7TWY" rel="nofollow"><img alt="Improved particle system video" data-canonical-src="http://img.youtube.com/vi/0b_qnbV7TWY/0.jpg" src="https://camo.githubusercontent.com/912c960b8285558b4131682c1208f2d849178909/687474703a2f2f696d672e796f75747562652e636f6d2f76692f30625f716e6256375457592f302e6a7067"/></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#developers" id="user-content-developers"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Developers</h2>
<ul>
<li>Hanack</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#features" id="user-content-features"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Features</h2>
<ul>
<li>
<strong>Good performance</strong> and <strong>dynamic architecture</strong>
</li>
<li><strong>Component Types</strong></li>
<li>Emitters</li>
<li>Initializers</li>
<li>Modifiers</li>
<li>Renderers</li>
<li>Particles</li>
<li>Abstraction layers (for each component type)</li>
<li>Implementation (singletons, does stuff)</li>
<li>Types (like a configuration pattern for creating instances, holds the concrete implementation)</li>
<li>Instances (the concrete particle, emitter, modifier, initializer, renderer)</li>
<li>
<strong>Stateful and dynamic</strong> components</li>
<li>A <strong>rich set</strong> of useful components (see below)</li>
<li>Extendable via <strong>dynamic attributes</strong> for each component type</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#the-architecture-of-the-particle-system" id="user-content-the-architecture-of-the-particle-system"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>The architecture of the particle system</h2>
<p>The architecture of the particle system is designed to make modifications and extensions to itself as easy as possible. It is based on a clear matrix structure: <code>component type</code> x <code>abstraction layer</code>.</p>
<p>The abstraction layers divides <strong>implementations</strong>, <strong>configurations</strong>, and <strong>runtime instances</strong>. Implementations are designed to read parameters and dynamic attributes from the instances or types. For example each emitter implementation needs a position from the concrete emitter instance to spawn new particles. Types do only hold configurations with information about the "what" not "where and when". These information is known in beforehand, like a "fire emitter type" should define the particle type to be used as well as the particle rate and the batch size. On the implementation layer type it would be useless to define the position for example. Therefore the position of a fire is set on instance level. Most of the emitter type parameters are overrideable in the instance layer.</p>
<p>The scheme is similar for initializers, modifiers and renderers. The only exception are the particles itself. There is no implementation of particles, only particle types and particle instances. The reason is that particles have no inner logic. They are pure data containers.</p>
<p>More technically speaking (skip this if you are not a programmer) implementations are <em>stateless</em> while types and instances are <em>stateful</em>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#dynamic-attributes" id="user-content-dynamic-attributes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Dynamic attributes</h3>
<p>One of the main disadvantages of common particle systems is that they are not <em>modular</em> enough to allow extensibility. Therefore each type and instance of any component type is able to store <strong>dynamic attributes</strong>. For example if there is no attribute for the <em>drift</em> of a particle, you can store this data as a dynamic attribute. Dynamic attributes on the implementation layer type are copied into the layer instance on creation time. For example by creating an emitter instance the dynamic attributes of the parent emitter type is copied.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#particles" id="user-content-particles"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Particles</h3>
<p>Particles are the little things flying around? Wrong. For the particle system they are only <strong>data objects</strong>. What to do with this data is up to the architecture and configuration of the system. In general you can do what you want with them. You will need all of the other component types described below.</p>
<p>So, here we will only describe the attributes of an particle object:</p>
<ul>
<li>Particle Type</li>
<li>Origin Emitter</li>
<li>Position</li>
<li>Last Position</li>
<li>Velocity</li>
<li>Roll</li>
<li>Remaining milli seconds</li>
<li>Elapsed milli seconds</li>
<li>Last elapsed milli seconds</li>
<li>Mass</li>
<li>Density</li>
</ul>
<p>Additionally, particles (just as emitters, initializers, modifiers and renderers as well) can store even more information in the <em>dynamic attributes</em>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#particle-emitters" id="user-content-particle-emitters"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Particle Emitters</h3>
<p>Emitters spawn particles. How often, how many, which particle type, and where depends on the emitter implementation. It's easy to implement new custom emitters. Notice that there is already a set of default generic emitters available.</p>
<ul>
<li>Point emitters</li>
<li>Cubic emitters (1D = Line, 2D = Plane, 3D = Box)</li>
<li>Ellipsoid emitters (2D = Circle, 3D = Sphere)</li>
<li>Raster field emitters (1D = Dotted line, 2D = Raster, 3D = Cubic Raster)</li>
<li>BÃ©zier curve emitters</li>
</ul>
<p>Each of them is configurable and <em>you'll be able to create complex setups</em>. If you want to create an emitter instance, you have to create an emitter type first. The emitter type is like a configuration pattern and allows to set up common types of emitters. For example: different types of fire, smoke, rain and so on. It stores which emitter implementation and which particle type will be used by the emitter instances. In contrast, emitter instances holds for example the position, velocity, the last used color, the next position and much more based on the last emitted particle. All data is only known by the single instance and during execution.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#default-emitter-type-attributes" id="user-content-default-emitter-type-attributes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Default Emitter Type Attributes</h4>
<ul>
<li>Particle type (fire, smoke, ...)</li>
<li>Particle lifetime in milli seconds</li>
<li>Emitter rate (10 = emit particles every 10 ms)</li>
<li>Emitter batch size (3 = emit 3 particles at once)</li>
<li>Mass</li>
<li>Density</li>
<li>List of modifiers (movement modification, color modification, ...)</li>
<li>List of initializers (initial position, initial velocity, initial color, building weaved particles, ...)</li>
</ul>
<h4>
<a aria-hidden="true" class="anchor" href="#default-emitter-instance-attributes" id="user-content-default-emitter-instance-attributes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Default Emitter Instance Attributes</h4>
<ul>
<li><em>Everything from it's emitter type</em></li>
<li>The emitter type</li>
<li>Position (x, y, z)</li>
<li>Velocity (x, y, z)</li>
<li>Enabled (on / off)</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#particle-modifiers" id="user-content-particle-modifiers"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Particle Modifiers</h3>
<p>Modifiers can alter the attributes of a particle over time. For example the velocity transformation modifier adds the current velocity vector to the current position vector, which "moves" the particle. But there are a lot of other possibilities how to modify particles.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#particle-modifier-implementations" id="user-content-particle-modifier-implementations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Particle Modifier Implementations</h3>
<ul>
<li>Movement</li>
<li>Velocity Transformation: Apply a velocity vector in order to change the particle's position</li>
<li>Vector Field: Changes the velocity vector based on vector field formula's (using the <a href="http://muparser.beltoforion.de/" rel="nofollow">MuParser</a> library)</li>
<li>Rolling: The pitch/roll angles of the particle gets updated (rolling grenades e.g.)</li>
<li>Random Velocity: The velocity of the particle is changed randomly in order to create unpredictable movement</li>
<li>Mass-Spring Transformation: Particles are connected with springs</li>
<li>Velocity Damper: The velocity get damped over time</li>
<li>Wind: A constant or pulsing wind force vector is applied to the particles</li>
<li>Gravity</li>
<li>Global Gravity: Applies a force vector globally</li>
<li>Gravity Point: A point in the space applies gravity forc on the particles</li>
<li>Pulsar: like Gravity Point, but with a pulsing gravity force</li>
<li>Black Hole: like Gravity Point, but particles within a radius get culled</li>
<li>Collision</li>
<li>Geometry Collision: Particles collide with the geometry</li>
<li>Inexor uses an octree based geometry, so the collision detection is cheap</li>
<li>Culling</li>
<li>Bounding Box Culling: Deletes particles which leave the given region</li>
<li>Geometry Culling: Deletes particles which collides with the geometry</li>
<li>Other</li>
<li>Density Fade Out: Shortly before dying, the density of a particle is reduced, so that it fades out</li>
<li>Position Trace: Spawns particles with a shorter lifetime and no movement on the old position of the particle</li>
<li>Sub Emitter: A particle emits sub particles (in fact a separate emitter instance is emitting, but the position and velocity of the parent particle are inherited)</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#particle-renderer-implementations" id="user-content-particle-renderer-implementations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Particle Renderer Implementations</h3>
<p>To be visible, particles needs a renderer. These paint something in the 3D world. What, how and where is part of the implementation and configuration.</p>
<ul>
<li>Point-Based (Billboards)</li>
<li>Smoke</li>
<li>Fire</li>
<li>Lava</li>
<li>Poison</li>
<li>Snow</li>
<li>Flares (Lightnings, Rain)</li>
<li>Geometry-Based</li>
<li>2D: Triangles, Quads, Rings, ...</li>
<li>3D: Tetrahedrons, Cubes, Tubes (Hair), ...</li>
<li>Faces-Based or Model-Based</li>
<li>Textured quads: 4 particles belong to a face</li>
<li>Meta Balls: merge multiple particles into a blub</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#performance-considerations" id="user-content-performance-considerations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Performance Considerations</h3>
<ul>
<li>Use pools</li>
<li>Use shaders</li>
<li>Use billboarding</li>
<li>Particle Limiter</li>
<li>Particle Culling</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#full-control-for-map-makers" id="user-content-full-control-for-map-makers"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Full control for map makers</h3>
<ul>
<li>Scripting particle effects using JavaScript / Lua /whatever</li>
<li>Modify emitter attributes -&gt; Emitter Modifier</li>
<li>Modify modifier attributes -&gt; Modifier Modifier</li>
<li>React on player position</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#use-cases" id="user-content-use-cases"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Use Cases</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#gravitation-and-geometry-collision-simulation" id="user-content-gravitation-and-geometry-collision-simulation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Gravitation and geometry collision simulation</h3>
<p><a href="http://www.youtube.com/watch?v=oTE4E2z8OBc" rel="nofollow"><img alt="Gravitation and geometry collision simulation demonstration video" data-canonical-src="http://img.youtube.com/vi/oTE4E2z8OBc/0.jpg" src="https://camo.githubusercontent.com/9a5ae8bb30682b0496585758b7401d600966761b/687474703a2f2f696d672e796f75747562652e636f6d2f76692f6f54453445327a384f42632f302e6a7067"/></a></p>
<p>Simulating bouncing grenades using gravitation and geometry collision. Furthermore, the particle is rendered as model with enabled roll effect.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#position-trace" id="user-content-position-trace"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Position trace</h3>
<p><a href="http://www.youtube.com/watch?v=02awTpuNGog" rel="nofollow"><img alt="Position trace demonstration video" data-canonical-src="http://img.youtube.com/vi/02awTpuNGog/0.jpg" src="https://camo.githubusercontent.com/480c81a46cf0a39e5ac4ba446fae43fe8dd06734/687474703a2f2f696d672e796f75747562652e636f6d2f76692f303261775470754e476f672f302e6a7067"/></a></p>
<p>Cloning short living particles with removed velocity (fixed position) to achieve a wrap-like effect.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#branching-particles" id="user-content-branching-particles"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Branching particles</h3>
<p><a href="http://www.youtube.com/watch?v=xwWTsL9g-Wc" rel="nofollow"><img alt="Branching particles demonstration video" data-canonical-src="http://img.youtube.com/vi/xwWTsL9g-Wc/0.jpg" src="https://camo.githubusercontent.com/15e54f63ec2c90c2c729e5e1bcb4580536d54eb3/687474703a2f2f696d672e796f75747562652e636f6d2f76692f78775754734c39672d57632f302e6a7067"/></a></p>
<p>Even more complex: the cloned particles are fully functional (velocity, modifiers).</p>
<h3>
<a aria-hidden="true" class="anchor" href="#vector-fields" id="user-content-vector-fields"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Vector fields</h3>
<p><a href="http://www.youtube.com/watch?v=0b_qnbV7TWY" rel="nofollow"><img alt="Vector fields demonstration video" data-canonical-src="http://img.youtube.com/vi/0b_qnbV7TWY/0.jpg" src="https://camo.githubusercontent.com/912c960b8285558b4131682c1208f2d849178909/687474703a2f2f696d672e796f75747562652e636f6d2f76692f30625f716e6256375457592f302e6a7067"/></a></p>
<p>Particle movement is defined using mathematical formula. Many things are possible: gravitation, wind, turbulence, hurricanes, DNA, waves ...</p>
<h3>
<a aria-hidden="true" class="anchor" href="#cloth-simulation" id="user-content-cloth-simulation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cloth simulation</h3>
<p><a href="http://www.youtube.com/watch?v=pK0uNyjiWcM" rel="nofollow"><img alt="Cloth simulation demonstration video" data-canonical-src="http://img.youtube.com/vi/pK0uNyjiWcM/0.jpg" src="https://camo.githubusercontent.com/0b7565c1a5ca28a0ddf80d837ccc5c9f11c56662/687474703a2f2f696d672e796f75747562652e636f6d2f76692f704b30754e796a6957634d2f302e6a7067"/></a></p>
<p>Realtime octree geometry collision of the particles connected with stretch, sheer and bend springs. The particles are emitted in a batch by a 2D grid field emitter and are connected by the spring weaver initializer which applies construction rules based on a transformation matrix in order to connect nearby particles.</p>
<p>For example, to construct a 2D cloth mesh the construction rules are:</p>
<ol>
<li>stretch spring in plus-x-direction (x+1, y, z)</li>
<li>stretch spring in plus-y-direction (x, y+1, z)</li>
<li>sheer spring in plus-x and plus-y-direction (x+1, y+1, z)</li>
<li>sheer spring in plus-x and minus-y-direction (x+1, y-1, z)</li>
<li>bend spring in plus-x-direction (x+2, y, z)</li>
<li>bend spring in plus-y-direction (x, y+2, z)</li>
</ol>
<p>In this case, we construct 6 springs for each particle. Therefore the total number of springs is about 6 times higher than the number of particles. The calculation of the springs happens on CPU and won't affect the fps. But the rendering of cloth is still complex enough and should be done on GPU.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#jello-simulation" id="user-content-jello-simulation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Jello Simulation</h3>
<p><a href="http://www.youtube.com/watch?v=zQEj8QB1FE8" rel="nofollow"><img alt="Jello simulation demonstration video" data-canonical-src="http://img.youtube.com/vi/zQEj8QB1FE8/0.jpg" src="https://camo.githubusercontent.com/456b79b2c51a574813b11fae011f50970ec59d17/687474703a2f2f696d672e796f75747562652e636f6d2f76692f7a51456a385142314645382f302e6a7067"/></a></p>
<p>Like cloth simulation in three dimensions with much more springs, also constructed by spring construction rules. For each particle we need 26 springs. Rendering is done a bit differently by only rendering the surface, so the rendering is much faster than the simulation.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#resources" id="user-content-resources"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Resources</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#standard-effects" id="user-content-standard-effects"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Standard Effects</h3>
<ul>
<li><a href="http://blog.martincrownover.com/gamemaker-examples-tutorials/particle-example-fire/" rel="nofollow">Fire Effect</a></li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#mass-spring-simulation" id="user-content-mass-spring-simulation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Mass Spring Simulation</h3>
<ul>
<li><a href="http://www.henning-tjaden.com/_files/pdfs/projekt_618.pdf" rel="nofollow">http://www.henning-tjaden.com/_files/pdfs/projekt_618.pdf</a></li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#cloth-simulation-1" id="user-content-cloth-simulation-1"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cloth Simulation</h3>
<ul>
<li><a href="http://graphics.stanford.edu/%7Emdfisher/cloth.html" rel="nofollow">http://graphics.stanford.edu/~mdfisher/cloth.html</a></li>
<li><a href="https://www.math.hmc.edu/%7Edepillis/MATH164/MATH164_StudentProjects_2003/COCONNOR/ClothSimulation/final_report.pdf" rel="nofollow">https://www.math.hmc.edu/~depillis/MATH164/MATH164_StudentProjects_2003/COCONNOR/ClothSimulation/final_report.pdf</a></li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#sound" id="user-content-sound"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Sound</h3>
<ul>
<li><a href="http://hal.archives-ouvertes.fr/docs/00/75/98/18/PDF/soundParticles_HAL.pdf" rel="nofollow">http://hal.archives-ouvertes.fr/docs/00/75/98/18/PDF/soundParticles_HAL.pdf</a></li>
<li><a href="http://gamma.cs.unc.edu/propagation/" rel="nofollow">http://gamma.cs.unc.edu/propagation/</a></li>
<li><a href="https://www.youtube.com/watch?v=FDL39J-i0yQ&amp;html5=1" rel="nofollow">https://www.youtube.com/watch?v=FDL39J-i0yQ&amp;html5=1</a></li>
<li><a href="https://www.youtube.com/watch?v=MQt1jtDBNK4&amp;list=UU0GpuO2aEbGMG8N0iLE9_TA&amp;html5=1" rel="nofollow">https://www.youtube.com/watch?v=MQt1jtDBNK4&amp;list=UU0GpuO2aEbGMG8N0iLE9_TA&amp;html5=1</a></li>
</ul>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p>Need help? <a class="internal present" href="/inexorgame/inexor-core/wiki/Contact">Contact</a> us.</p>

          </div>
        </div>
    </div>]