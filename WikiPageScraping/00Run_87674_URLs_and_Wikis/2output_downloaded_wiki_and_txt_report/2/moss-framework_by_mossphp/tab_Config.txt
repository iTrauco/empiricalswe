[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#config" id="user-content-config"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Config</h1>
<p><code>Config</code> object contains frameworks configuration, from error handling options, through components to route definitions.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#configuration-array--bootstrap" id="user-content-configuration-array--bootstrap"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Configuration array / bootstrap</h2>
<p><code>Moss</code> provides class for plain array configuration.
Configuration array must have appropriate structure, otherwise <code>ConfigException</code> will be thrown.
Therefore all implementations supporting different formats must return such structure.</p>
<p>Configuration is split into sections:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$arr</span> <span class="pl-k">=</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>framework<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [],</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>container<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [],</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>dispatcher<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [],</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>router<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> []</span>
<span class="pl-s1">    ];</span></pre></div>
<p>To access section:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$config</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Config\</span><span class="pl-c1">Config</span>([<span class="pl-s"><span class="pl-pds">'</span>section<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> []]);</span>
<span class="pl-s1">    <span class="pl-smi">$section</span> <span class="pl-k">=</span> <span class="pl-smi">$config</span><span class="pl-k">-&gt;</span>get(<span class="pl-s"><span class="pl-pds">'</span>section<span class="pl-pds">'</span></span>);</span></pre></div>
<p>To access specific variable in section (in dot notation):</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$config</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Config\</span><span class="pl-c1">Config</span>([<span class="pl-s"><span class="pl-pds">'</span>section<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>some<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>var<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>var<span class="pl-pds">'</span></span>]]]);</span>
<span class="pl-s1">    <span class="pl-smi">$var</span> <span class="pl-k">=</span> <span class="pl-smi">$config</span><span class="pl-k">-&gt;</span>get(<span class="pl-s"><span class="pl-pds">'</span>section.some.var<span class="pl-pds">'</span></span>);</span></pre></div>
<p>Config also implements array access:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$config</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Config\</span><span class="pl-c1">Config</span>([<span class="pl-s"><span class="pl-pds">'</span>section<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>some<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>var<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>var<span class="pl-pds">'</span></span>]]]);</span>
<span class="pl-s1">    <span class="pl-smi">$var</span> <span class="pl-k">=</span> <span class="pl-smi">$config</span>[<span class="pl-s"><span class="pl-pds">'</span>section<span class="pl-pds">'</span></span>][<span class="pl-s"><span class="pl-pds">'</span>some<span class="pl-pds">'</span></span>][<span class="pl-s"><span class="pl-pds">'</span>var<span class="pl-pds">'</span></span>];</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#framework" id="user-content-framework"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Framework</h2>
<p>There are three properties determining error reporting:</p>
<ul>
<li>
<code>framework.error.level</code> - sets <code>error_reporting()</code> to corresponding level, default <code>-1</code>;</li>
<li>
<code>framework.error.detail</code> - if set to <code>false</code> will output only error message, if <code>true</code> - exception handler with verbose display (uses formatted var_dump) will be used</li>
</ul>
<p>Configuration of frameworks session wrapper is stored in <code>framework.session</code> property:</p>
<ul>
<li>
<code>framework.session.name</code> - session name, by default its <code>PHPSESSID</code>
</li>
<li>
<code>framework.session.cacheLimiter</code> - The cache limiter defines which cache control HTTP headers are sent to the client, by default its <code>''</code> - and turns off cache headers entirely</li>
</ul>
<p>In configuration array, this section looks like this:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$arr</span> <span class="pl-k">=</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>framework<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>error<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>level<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>detail<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span></span>
<span class="pl-s1">            ],</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>session<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>name<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>PHPSESSID<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>cacheLimiter<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span><span class="pl-pds">'</span></span></span>
<span class="pl-s1">            ]</span>
<span class="pl-s1">        ]</span>
<span class="pl-s1">    ];</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#container" id="user-content-container"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Container</h2>
<p>Component definitions can be found in <a class="internal present" href="/mossphp/moss-framework/wiki/Container">Container</a> section.
For detailed description of constructor and method arguments go to <a class="internal present" href="/mossphp/moss-framework/wiki/Container">Container</a> chapter.</p>
<p>Full definition, <code>calls</code> section is optional and contains method names with arrays of arguments that will be called after instance is created.
<code>shared</code> informs if instance is shared or not.</p>
<p>First component definition is an example of <em>textual</em> representation that should be used in eg. <em>YAML</em> configuration adapters.
Second is a component defined as callable.</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$arr</span> <span class="pl-k">=</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>container<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>textualComponent<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>component<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>class<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>\Some\Class\Name<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>arguments<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>@request<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>other<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>arguments<span class="pl-pds">'</span></span>],</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>calls<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                        <span class="pl-s"><span class="pl-pds">'</span>method<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>method<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>arguments<span class="pl-pds">'</span></span>]</span>
<span class="pl-s1">                    ],</span>
<span class="pl-s1">                ],</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>shared<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span></span>
<span class="pl-s1">            ],</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>callableComponent<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>component<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-k">function</span> (<span class="pl-c1">\Moss\Container\</span><span class="pl-c1">ContainerInterface</span> <span class="pl-smi">$container</span>) {</span>
<span class="pl-s1">                    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-c1">\stdClass</span>();</span>
<span class="pl-s1">                },</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>shared<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span></span>
<span class="pl-s1">            ],</span>
<span class="pl-s1">        ]</span>
<span class="pl-s1">    ];</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#dispatcher--event-listeners" id="user-content-dispatcher--event-listeners"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Dispatcher &amp; event listeners</h2>
<p>The <code>dispatcher</code> section, holds list of all internal frameworks events.
For detailed description of method and method arguments go to <a class="internal present" href="/mossphp/moss-framework/wiki/Dispatcher">Dispatcher</a> chapter.</p>
<p>Each event can have many listeners, first one is textual representation and second is a callable:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$arr</span> <span class="pl-k">=</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>dispatcher<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>event.name<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                [</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>component<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>componentName<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>method<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>methodName<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>arguments<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>@container<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>other<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>arguments<span class="pl-pds">'</span></span>]</span>
<span class="pl-s1">                ],</span>
<span class="pl-s1">                <span class="pl-k">function</span>(<span class="pl-c1">\Moss\Container\</span><span class="pl-c1">ContainerInterface</span> <span class="pl-smi">$container</span>) {</span>
<span class="pl-s1">                        <span class="pl-c"><span class="pl-c">//</span> do something else</span></span>
<span class="pl-s1">                }</span>
<span class="pl-s1">            ]</span>
<span class="pl-s1">        ]</span>
<span class="pl-s1">    ];</span></pre></div>
<p>As listener supports form of aspect oriented programming, each event is internally split into:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$arr</span> <span class="pl-k">=</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>dispatcher<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>event.name:before<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [],</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>event.name<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [],</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>event.name:after<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [],</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>event.name:exception<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [],</span>
<span class="pl-s1">        ]</span>
<span class="pl-s1">    ]</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#route-definitions" id="user-content-route-definitions"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Route definitions</h2>
<p>All routes are defined in <code>router</code> section. Its an array, where keys are route names, and their values contain route properties.
For detailed description of route definitions go to <a class="internal present" href="/mossphp/moss-framework/wiki/Router">Router</a> chapter.</p>
<p>The simples route definition looks like this:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$arr</span> <span class="pl-k">=</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>router<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">            <span class="pl-c"><span class="pl-c">//</span> for controller class</span></span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>routeName<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>pattern<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-sr"><span class="pl-pds">'/</span>string-controller<span class="pl-pds">/'</span></span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>controller<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>\Moss\Sample\SampleController::index<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">            ],</span>
<span class="pl-s1">            <span class="pl-c"><span class="pl-c">//</span> same as above but as callable</span></span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>routeName<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>pattern<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-sr"><span class="pl-pds">'/</span>callable-controller<span class="pl-pds">/'</span></span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>controller<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">array</span>(<span class="pl-s"><span class="pl-pds">'</span>\Moss\Sample\SampleController<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>index<span class="pl-pds">'</span></span>),</span>
<span class="pl-s1">            ],</span>
<span class="pl-s1">            <span class="pl-c"><span class="pl-c">//</span> for closure</span></span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>otherRoute<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>pattern<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-sr"><span class="pl-pds">'/</span>closure-controller<span class="pl-pds">/'</span></span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>controller<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-k">function</span> () {</span>
<span class="pl-s1">                    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Http\Response\</span><span class="pl-c1">Response</span>(<span class="pl-s"><span class="pl-pds">'</span>Closure<span class="pl-pds">'</span></span>);</span>
<span class="pl-s1">                }</span>
<span class="pl-s1">            ]</span>
<span class="pl-s1">        ]</span>
<span class="pl-s1">    ];</span></pre></div>
<p>Full route definition with sample values</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$arr</span> <span class="pl-k">=</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>router<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">            <span class="pl-s"><span class="pl-pds">'</span>routeName<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>pattern<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>/{foo:\w}/({bar:\d})/<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>controller<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>\Moss\Sample\SampleController::index<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>arguments<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>locale<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>en<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">                    <span class="pl-s"><span class="pl-pds">'</span>format<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>json<span class="pl-pds">'</span></span></span>
<span class="pl-s1">                ],</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>host<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">null</span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>schema<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">null</span>,</span>
<span class="pl-s1">                <span class="pl-s"><span class="pl-pds">'</span>methods<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> []</span>
<span class="pl-s1">            ]</span>
<span class="pl-s1">        ]</span>
<span class="pl-s1">    ];</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#import" id="user-content-import"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Import</h2>
<p>Config allows for importing data from other arrays.</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$config</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Config\</span><span class="pl-c1">Config</span>();</span>
<span class="pl-s1">    <span class="pl-smi">$config</span><span class="pl-k">-&gt;</span>import([<span class="pl-s"><span class="pl-pds">'</span>section<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>some<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">'</span>var<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>var<span class="pl-pds">'</span></span>]]]);</span></pre></div>
<p>Existing data will be overwritten, rest will be merged recursively.</p>
<p>Also there can be defined additional arrays that will be imported in <code>import</code> section</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-s"><span class="pl-pds">'</span>import<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> [</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>sample<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> (<span class="pl-k">array</span>) <span class="pl-k">require</span> <span class="pl-c1">__DIR__</span> <span class="pl-k">.</span> <span class="pl-s"><span class="pl-pds">'</span>/../src/Moss/Sample/bootstrap.php<span class="pl-pds">'</span></span></span>
<span class="pl-s1">    ],</span></pre></div>
<p>This data will be imported and merged as mentioned above.
Since imported array has non-numeric key, all nodes in every imported section will be prefixed eg if prefix was <code>sample</code>.
For example, if and node name is <code>some_component</code> it would be prefixed with <code>sample</code> and available in configuration under <code>sample:some_component</code></p>
<h2>
<a aria-hidden="true" class="anchor" href="#mode" id="user-content-mode"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Mode</h2>
<p>Config also supports modes, that allow for changing configuration by deciding which parts should be imported.
By default there is no defined mode and data from <code>import</code> section will be imported.
When mode is set to <code>dev</code>, aside from <code>import</code> also <code>import_dev</code> section will be imported.</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-s"><span class="pl-pds">'</span>import<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">array</span>(</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>sample<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> (<span class="pl-k">array</span>) <span class="pl-k">require</span> <span class="pl-c1">__DIR__</span> <span class="pl-k">.</span> <span class="pl-s"><span class="pl-pds">'</span>/../src/Moss/Sample/bootstrap.php<span class="pl-pds">'</span></span></span>
<span class="pl-s1">    ),</span>
<span class="pl-s1">    <span class="pl-s"><span class="pl-pds">'</span>import_dev<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">array</span>(</span>
<span class="pl-s1">        <span class="pl-s"><span class="pl-pds">'</span>sample<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> (<span class="pl-k">array</span>) <span class="pl-k">require</span> <span class="pl-c1">__DIR__</span> <span class="pl-k">.</span> <span class="pl-s"><span class="pl-pds">'</span>/../src/Moss/Sample/bootstrap_dev.php<span class="pl-pds">'</span></span></span>
<span class="pl-s1">    ),</span></pre></div>
<p>Mode can be set via constructor or by calling <code>::mode($mode)</code> method.</p>

        </div>

    </div>]