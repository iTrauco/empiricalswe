[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#response" id="user-content-response"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Response</h1>
<p><code>Response</code> represents all the things that are sent to users in response to his <code>Request</code>.
This means that every time that something is sent back to user it must be represented as <code>Request</code></p>
<p>Sending <code>Response</code> to client:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$response</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Http\Response\</span><span class="pl-c1">Response</span>(<span class="pl-smi">$responseContent</span>);</span>
<span class="pl-s1">    <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>send();</span></pre></div>
<p>This will output HTML response (<code>Content-Type: text/html</code>) with <code>status code</code> <code>200</code> (<code>OK</code>) and content equal to <code>$responseContent</code>.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#content-type--status" id="user-content-content-type--status"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Content type &amp; Status</h2>
<p>When creating responses, you set (your own or default values) <code>Content-Type</code> and its <code>status code</code>.
Content type defines what response returns to user, if it is plain text, HTML or PDF.
While <code>status code</code> defines what response means, eg: <code>200</code> means everything is <code>OK</code>, <code>404</code> means <code>Not Found</code>, <code>500</code> server error, and so on.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#additional-headers" id="user-content-additional-headers"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Additional headers</h2>
<p>To add, change or remove header from response use <code>::header($header, $value)</code> method:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>header()<span class="pl-k">-&gt;</span>set(<span class="pl-s"><span class="pl-pds">'</span>Content-Type<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>text/plain<span class="pl-pds">'</span></span>); <span class="pl-c"><span class="pl-c">//</span> set header</span></span>
<span class="pl-s1">    <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>header()<span class="pl-k">-&gt;</span>set(<span class="pl-s"><span class="pl-pds">'</span>Content-Type<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>text/html<span class="pl-pds">'</span></span>); <span class="pl-c"><span class="pl-c">//</span> overwrite previous</span></span></pre></div>
<p>To remove header</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>header()<span class="pl-k">-&gt;</span>remove(<span class="pl-s"><span class="pl-pds">'</span>Content-Type<span class="pl-pds">'</span></span>);</span></pre></div>
<p>To retrieve header:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$header</span> <span class="pl-k">=</span> <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>header()<span class="pl-k">-&gt;</span>get(<span class="pl-s"><span class="pl-pds">'</span>Content-Type<span class="pl-pds">'</span></span>);</span>
<span class="pl-s1">    <span class="pl-smi">$header</span> <span class="pl-k">=</span> <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>header()<span class="pl-k">-&gt;</span>get(<span class="pl-s"><span class="pl-pds">'</span>Content-Type<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>default-value-when-header-does-not-exist<span class="pl-pds">'</span></span>);</span></pre></div>
<p>There are tree convenient methods to set caching:</p>
<ul>
<li>
<code>::makeNoCache()</code> setting <code>Cache-Control</code> to <code>no-cache</code>, same to <code>Pragma</code> - this is default value</li>
<li>
<code>::makePublic()</code> setting <code>Cache-Control</code> and <code>Pragma</code> to <code>public</code>
</li>
<li>
<code>::makePrivate()</code> same as above but sets <code>private</code>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#cookies" id="user-content-cookies"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cookies</h2>
<p>Response also handles cookies that are sent back to user.
Cookies are handled in similar way as headers:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$cookie</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Http\Response\</span><span class="pl-c1">Cookie</span>(<span class="pl-s"><span class="pl-pds">'</span>ping<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>pong<span class="pl-pds">'</span></span>, <span class="pl-c1">3600</span>, <span class="pl-s"><span class="pl-pds">'</span>/<span class="pl-pds">'</span></span>, <span class="pl-c1">null</span>, <span class="pl-c1">true</span>, <span class="pl-c1">true</span>);</span>
<span class="pl-s1">    <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>cookies()<span class="pl-k">-&gt;</span>set(<span class="pl-smi">$cookie</span>);</span></pre></div>
<p>To retrieve above cookie:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>cookies()<span class="pl-k">-&gt;</span>get(<span class="pl-s"><span class="pl-pds">'</span>ping<span class="pl-pds">'</span></span>);</span></pre></div>
<p>You can also specify your keys for cookies:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$cookie</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Http\Response\</span><span class="pl-c1">Cookie</span>(<span class="pl-s"><span class="pl-pds">'</span>ping<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>pong<span class="pl-pds">'</span></span>, <span class="pl-c1">3600</span>, <span class="pl-s"><span class="pl-pds">'</span>/<span class="pl-pds">'</span></span>, <span class="pl-c1">null</span>, <span class="pl-c1">true</span>, <span class="pl-c1">true</span>);</span>
<span class="pl-s1">    <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>cookies()<span class="pl-k">-&gt;</span>set(<span class="pl-s"><span class="pl-pds">'</span>pingpong<span class="pl-pds">'</span></span>, <span class="pl-smi">$cookie</span>);</span>
<span class="pl-s1">    <span class="pl-smi">$cookie</span> <span class="pl-k">=</span> <span class="pl-smi">$response</span><span class="pl-k">-&gt;</span>cookies()<span class="pl-k">-&gt;</span>get(<span class="pl-s"><span class="pl-pds">'</span>pingpong<span class="pl-pds">'</span></span>);</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#redirect" id="user-content-redirect"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Redirect</h2>
<p>There is different response object - <code>RedirectResponse</code>. Its purpose is to redirect user to other URL.</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-smi">$redirect</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">\Moss\Http\Response\</span><span class="pl-c1">RedirectResponse</span>(<span class="pl-s"><span class="pl-pds">'</span>http://google.com<span class="pl-pds">'</span></span>);</span>
<span class="pl-s1">    <span class="pl-smi">$redirect</span><span class="pl-k">-&gt;</span>send();</span></pre></div>
<p><code>RedirectResponse</code> extends <code>Response</code>, main difference are: <code>::__construct($address, $delay = 0)</code> and <code>::address($address = null)</code>, <code>::delay($delay = null)</code></p>
<p>If uses <code>Location</code> and <code>Refresh</code> headers to redirect user.
The <code>Location</code> header redirects immediately, while <code>Refresh</code> is used when <code>delay</code> is set.</p>

        </div>

    </div>]