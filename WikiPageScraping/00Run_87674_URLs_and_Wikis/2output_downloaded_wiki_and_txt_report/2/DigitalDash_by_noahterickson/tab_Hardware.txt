[<div class="wiki-body gollum-org-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#custom-printed-circuit-board" id="user-content-custom-printed-circuit-board"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Custom Printed Circuit Board</h1>
<p>We created a custom printed circuit board for the digital dashboard for the following purposes:</p>
<ul>
  <li>Cut down on total size of the unit</li>
  <li>A pin header that plugs directly into the screen for a wireless connection</li>
  <li>Integrate the CAN transceivers</li>
</ul>
<p>You can find the schematic and board layout that we developed in EagleCAD in the “Hardware/Final Design” directory,  <a href="https://github.com/noahterickson/DigitalDash/tree/master/Hardware/FinalDesign">or here.</a> Feel free to send this board out to your favorite PCB manufacturer. We had this printed at OSH Park located in Lake Oswego, Oregon. We made a handy <a href="https://github.com/noahterickson/DigitalDash/blob/master/Hardware/FinalDesign/PrototypeBOM.xlsx">bill of materials</a> for the necessary parts to populate one board. Note the bill of materials is also found in the same directory as the custom board. The parts and board cost per unit is roughly $60. If you add the screen and the enclosure the total cost per unit is just shy of $200.</p>
<p>Assembling the custom Arduino Due can be a bit of a hassle. We recommend the use of a component pad stencil and the use of solder paste. This can be done with EagleCAD, a laser cutter and parchment paper. When you have a nice layer of solder paste throw the board in the reflow oven.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#printed-circuit-board-schematic" id="user-content-printed-circuit-board-schematic"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Printed Circuit Board Schematic</h1>
<p><img src="https://github.com/noahterickson/DigitalDash/raw/master/images/Diagrams/schematic.jpg"/></p>
<p>Note that the first revision of the board has a few mod wires and the Rx and Tx lines going to the screen module backwards. A second revision is to be added which will fix these issues as well as address the programming circuit.</p>
<p>The ATMEGA16 and ATSAM3X blocks were taken from the schematics for the Arduino Due.</p>
<p>The schematic is sectioned into functional blocks. A brief description of each block is as follows:</p>
<ul>
  <li>Headers - This block contains the pinouts needed to mate with the LCD screen.</li>
  <li>Transceivers - This block contains the necessary resistances and ICs needed for the CAN transceivers for the ATSAM3X to read CAN messages.</li>
  <li>Bypass Caps - A bank of bypass capacitors.</li>
  <li>Power Supplies - This block contains the components needed to drive the MC33269ST Voltage Regulator.</li>
  <li>ATMEGA16 - This block contains the ATMEGA16u2 microcontroller that assists programming the ATSAM3X.</li>
  <li>ATSAM3X -  This block houses the main functionality of the digital dashboard.</li>
</ul>
<h1>
<a aria-hidden="true" class="anchor" href="#arduino-due" id="user-content-arduino-due"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Arduino Due</h1>
<p>If a custom printed circuit board does not suit your needs you can substitute an Arduino Due. Please note that if this is done you will still need to come up with an implementation for the CAN transceivers. We have a <a href="https://github.com/noahterickson/DigitalDash/tree/master/Hardware/ArduinoPrototype">transceiver board</a> that is small and has a few components. Use this schematic to see how to wire the components to the Arduino Due.</p>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p><a href="https://github.com/noahterickson/digitaldash/wiki/home">Home</a> | <a href="https://github.com/noahterickson/digitaldash/wiki/objective-and-motivation">About</a> | <a href="https://github.com/noahterickson/digitaldash/wiki/about-the-team">Team</a>       2015 Portland State University ECE</p>

          </div>
        </div>
    </div>]