[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <hr/>
<h3>
<a aria-hidden="true" class="anchor" href="#updated-06-march-2018" id="user-content-updated-06-march-2018"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong><em>Updated: 06 March 2018</em></strong>
</h3>
<h3>
<a aria-hidden="true" class="anchor" href="#a-simplified-windows-installation-procedure-can-be-found-at-the-wiki-page-install-homebridge-on-windows-10-new" id="user-content-a-simplified-windows-installation-procedure-can-be-found-at-the-wiki-page-install-homebridge-on-windows-10-new"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>A simplified Windows installation procedure can be found at the Wiki page: <a href="https://github.com/nfarina/homebridge/wiki/Install-HomeBridge-on-Windows-10-(new)">Install HomeBridge on Windows 10 (new)</a>
</h3>
<hr/>
<hr/>
<p>Created by <a href="https://github.com/PatcherMustermann">PatcherMustermann</a></p>
<hr/>
<h3>
<a aria-hidden="true" class="anchor" href="#updated-09-july-2016" id="user-content-updated-09-july-2016"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong><em>Updated: 09 July 2016</em></strong>
</h3>
<h3>
<a aria-hidden="true" class="anchor" href="#--general-information" id="user-content---general-information"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>- General information:</strong>
</h3>
<p>This How-to is for Windows 7 &amp; 10 64BIT (Windows 7 &amp; 10 32BIT is untested).</p>
<p>All programs installed with 32BIT except Microsoft Visual Studio and Apple Bonjour.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#--step-1-you-need-following-software" id="user-content---step-1-you-need-following-software"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>- Step 1: You need following software</strong>
</h3>
<p>1 - GIT 2.8.3 32BIT (<a href="https://git-scm.com/download/win" rel="nofollow">https://git-scm.com/download/win</a>)</p>
<p>2 - Visual Studio Community 2015 (<a href="https://www.visualstudio.com/products/visual-studio-community-vs" rel="nofollow">https://www.visualstudio.com/products/visual-studio-community-vs</a>)</p>
<p>3 - Python 2.7.11 32BIT (<a href="https://www.python.org/downloads/" rel="nofollow">https://www.python.org/downloads/</a>)</p>
<p>4 - Open SSL 1.0.2h 32BIT (<a href="http://slproweb.com/products/Win32OpenSSL.html" rel="nofollow">http://slproweb.com/products/Win32OpenSSL.html</a>)</p>
<p>5 - Nodejs v5.0.0 32BIT (<a href="https://nodejs.org/en/download/releases/" rel="nofollow">https://nodejs.org/en/download/releases/</a>)</p>
<p>6 - Bonjour for Developers 3.0.0.10 (<a href="https://developer.apple.com/bonjour/" rel="nofollow">https://developer.apple.com/bonjour/</a>)</p>
<p>6.1 - Alternate download location for Bonjour SDK (<a href="http://www.softpedia.com/get/Programming/SDK-DDK/Bonjour-SDK.shtml" rel="nofollow">http://www.softpedia.com/get/Programming/SDK-DDK/Bonjour-SDK.shtml</a>)</p>
<p>7 - getopt.h &amp; getopt.c (<a href="http://www.codeproject.com/KB/cpp/getopt4win/getopt_mb_uni_src.zip" rel="nofollow">http://www.codeproject.com/KB/cpp/getopt4win/getopt_mb_uni_src.zip</a>)</p>
<p>8 - unistd.h (do it yourself =&gt; Source: <a href="https://github.com/KhaosT/HAP-NodeJS/issues/113">https://github.com/KhaosT/HAP-NodeJS/issues/113</a>)</p>
<p>8.1 - Create a file named unistd.h</p>
<p>8.2 - Open the file unistd.h with Notepad</p>
<p>8.3* - Copy following text in the file unistd.h
<strong>=&gt; Version of Patcher</strong> (<a href="https://github.com/KhaosT/HAP-NodeJS/issues/113">https://github.com/KhaosT/HAP-NodeJS/issues/113</a>)</p>
<pre><code>#ifndef _UNISTD_H
#define _UNISTD_H 1

/* This file intended to serve as a drop-in replacement for

    unistd.h on Windows
    Please add functionality as neeeded */

#include
#include
#include
#include /* for getpid() and the exec..() family /
#include / for _getcwd() and _chdir() */

#define srandom srand
#define random rand

/* Values for the second argument to access.
These may be OR'd together. /
#define R_OK 4 / Test for read permission. /
#define W_OK 2 / Test for write permission. /
//#define X_OK 1 / execute permission - unsupported in windows/
#define F_OK 0 / Test for existence. */

#define access _access
#define dup2 _dup2
#define execve _execve
#define ftruncate _chsize
#define unlink _unlink
#define fileno _fileno
#define getcwd _getcwd
#define chdir _chdir
#define isatty _isatty
#define lseek _lseek
/* read, write, and close are NOT being #defined here, because while there are file handle specific versions for Windows, they probably don't work for sockets. You

need to look at your app and consider whether to call e.g. closesocket(). */

#define ssize_t int

#define STDIN_FILENO 0
#define STDOUT_FILENO 1
#define STDERR_FILENO 2
/* should be in some equivalent to */
typedef signed __int8 int8_t;
typedef signed __int16 int16_t;
typedef signed __int32 int32_t;
typedef signed __int64 int64_t;
typedef unsigned __int8 uint8_t;
typedef unsigned __int16 uint16_t;
typedef unsigned __int32 uint32_t;
typedef unsigned __int64 uint64_t;

#endif /* unistd.h */
</code></pre>
<p>8.3* - Or copy following text in the file unistd.h
<strong>=&gt; Version of WilliamHF</strong> (<a href="https://github.com/nfarina/homebridge/issues/402">https://github.com/nfarina/homebridge/issues/402</a>)</p>
<pre><code>#ifndef _UNISTD_H
#define _UNISTD_H 1

/* This file intended to serve as a drop-in replacement for

    unistd.h on Windows
    Please add functionality as neeeded */

/* #include
#include
#include
#include */  /* for getpid() and the exec..() family /
#include / for _getcwd() and _chdir() */

#define srandom srand
#define random rand

/* Values for the second argument to access.
These may be OR'd together. /
#define R_OK 4 / Test for read permission. /
#define W_OK 2 / Test for write permission. /
//#define X_OK 1 / execute permission - unsupported in windows/
#define F_OK 0 / Test for existence. */

#define access _access
#define dup2 _dup2
#define execve _execve
#define ftruncate _chsize
#define unlink _unlink
#define fileno _fileno
#define getcwd _getcwd
#define chdir _chdir
#define isatty _isatty
#define lseek _lseek
/* read, write, and close are NOT being #defined here, because while there are file handle specific versions for Windows, they probably don't work for sockets. You

need to look at your app and consider whether to call e.g. closesocket(). */

#define ssize_t int

#define STDIN_FILENO 0
#define STDOUT_FILENO 1
#define STDERR_FILENO 2
/* should be in some equivalent to */
typedef signed __int8 int8_t;
typedef signed __int16 int16_t;
typedef signed __int32 int32_t;
typedef signed __int64 int64_t;
typedef unsigned __int8 uint8_t;
typedef unsigned __int16 uint16_t;
typedef unsigned __int32 uint32_t;
typedef unsigned __int64 uint64_t;

#endif /* unistd.h */
</code></pre>
<p>8.4 - Save the file unistd.h</p>
<h3>
<a aria-hidden="true" class="anchor" href="#--step-2-install-with-the-following-order" id="user-content---step-2-install-with-the-following-order"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>- Step 2: Install with the following order</strong>
</h3>
<p><strong># - The Windows User-Account must have administrator rights!</strong></p>
<p>1 - Visual Studio Community (C:\Program Files (x86)\Microsoft Visual Studio 14.0)</p>
<p>2 - Python (C:\Python27)
<strong>=&gt; By user settings: Enable path</strong></p>
<p>3 - Open SSL (C:\OpenSSL-Win32)</p>
<p>4 - GIT (C:\Program Files (x86)\Git)</p>
<p>5 - Nodejs (C:\Program Files (x86)\nodejs)</p>
<p>6 - Bonjour for Developers (C:\Program Files (x86)\Bonjour SDK)</p>
<ul>
<li>Note the Bonjour SDK installer will ignore requests to install to a different directory and always install to C:\Program Files (x86)\Bonjour SDK.  If you'd like it in a different directory, just move the folder and update the BONJOUR_SDK_HOME Environment Variable to match the new location.</li>
</ul>
<p>7 - RESTART Computer</p>
<p>8 - Copy getopt.h, getopt.c and unistd.h to "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include"</p>
<p>9 - RESTART Computer</p>
<h3>
<a aria-hidden="true" class="anchor" href="#--step-3-configuration-visual-studio" id="user-content---step-3-configuration-visual-studio"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>- Step 3: Configuration Visual Studio</strong>
</h3>
<p><strong># - The Windows User-Account must have administrator rights!</strong></p>
<p>1 - Open Visual Studio Community and create a C++ Project to install "dev environment"</p>
<p>2 - RESTART Computer</p>
<h3>
<a aria-hidden="true" class="anchor" href="#--step-4-running-homebridge" id="user-content---step-4-running-homebridge"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>- Step 4: Running Homebridge</strong>
</h3>
<p><strong># - The Windows User-Account must have administrator rights!</strong></p>
<p><strong># - xxx = Your Windows Username (C:\Users\xxx...)</strong></p>
<p>1 - Start GIT-CMD</p>
<p>2 - <em>Console command:</em> npm install -g homebridge</p>
<p>2.1 - If npm install fails with error C2373: "__pfnDliNotifyHook2", try the workaround here: <a href="https://stackoverflow.com/questions/38149603/npm-install-fails-with-error-c2373-with-vs2015-update-3" rel="nofollow">https://stackoverflow.com/questions/38149603/npm-install-fails-with-error-c2373-with-vs2015-update-3</a></p>
<p>3 - <em>Console command:</em> npm install -g homebridge-http</p>
<p>4 - Check if folder "C:\Users\xxx\.homebridge" exists
<strong>=&gt; The folder is invisible!</strong></p>
<p>4.1 - When folder "C:\Users\xxx\.homebridge" not exists you create this over Windows-CMD</p>
<p>4.1.1 - Open Windows-CMD</p>
<p>4.1.2 - CD C:\Users\xxx\</p>
<p>4.1.3 - mkdir .homebridge</p>
<p>5 - Copy "config-sample.json" from "C:\Users\xxx\AppData\Roaming\npm\node_modules\homebridge-http" to "C:\Users\xxx\.homebridge"</p>
<p>5.1 - Rename the "config-sample.json" to "config.json" (C:\Users\xxx\.homebridge)</p>
<p>6 - <em>Console command:</em> cd C:\Users\xxx\AppData\Roaming\npm\node_modules\homebridge\bin</p>
<p>7 - <em>Console command:</em> node homebridge</p>
<p>8 - Homebridge runs hopefully :)</p>
<p>8.1 - If iOS apps cannot pair to HomeBridge, you may need to add a firewall rules to allow port 51826 (Control Panel &gt; System Security &gt; Windows Firewall &gt; Advanced Settings &gt; Create New Rule to allow TCP 51826)</p>

        </div>

    </div>]