[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>This page serves to explain some of the HomeKit terminology to the uninitiated.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#bridge" id="user-content-bridge"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Bridge</h3>
<p>A bridge is a network component that allows access to and from a set of <em>accessories</em> from and to homekit. For this project, homebridge is the only bridge, as in homekit topology bridges must not be bridged, and cannot be cascaded. So homebridge connects our non-homekit-enabled accessories to the homekit world through <em>plugins</em>. A bridge can bridge up to 99 accessories.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#plugin" id="user-content-plugin"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Plugin</h3>
<p>A homebridge Plugin is a set of code that publishes Accessories and/or a Platform. Plugins are written specifically to interact with third party devices that have their own unique APIs but are not natively HomeKit compatible.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#platform" id="user-content-platform"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Platform</h3>
<p>A <em>Platform</em> represents a set of Accessories. For example, the Nest Platform provides homebridge access to all the Nest Accessories (Nest Thermostats &amp; Nest Smoke Detectors) installed in a home. By configuring the Nest platform in homebridge, all the Nest Accessories will be made available.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#accessory" id="user-content-accessory"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Accessory</h3>
<p>An <em>Accessory</em> is a hardware device that can be controlled or can provide information. A garage door opener, light, door lock, thermostat, television, etc are all examples of individual accessories. Accessories can have multiple <em>services</em> (99 max), so the garage door opener box might have e.g.: the garage door opener service, a lightbulb service (built in ceiling light), a battery service (if it runs on batteries and needs to show the charging state), etc.</p>

<h3>
<a aria-hidden="true" class="anchor" href="#service" id="user-content-service"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Service</h3>
<p>A <em>service</em> is a prime homekit functionality, such as a lightbulb. Each service can have multiple characteristics, such as <code>On</code>, <code>Brightness</code> and others for lightbulbs.<br/>
Siri uses the service's name for reference, <strong>not</strong> the accessory name!</p>

<h3>
<a aria-hidden="true" class="anchor" href="#characteristic" id="user-content-characteristic"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Characteristic</h3>
<p>A <em>Characteristic</em> is an attribute or property of a service, such as temperature, on/off state, color, etc.</p>

<h3>
<a aria-hidden="true" class="anchor" href="#room" id="user-content-room"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Room</h3>
<p>A Room is a collection of (physical) <em>accessories</em>. The purpose of grouping Accessories into a room is so that you can control them all at once. Suppose your Living Room has three light <em>Accessories</em> in it:</p>
<ol>
<li>Wall Sconces</li>
<li>End Table Lamps</li>
<li>Recessed lights</li>
</ol>
<p>On their own, you have to tell Siri to turn each indivdual light off... e.g. "Siri, turn the Wall Sconces off", "Siri turn the End Table Lamps off" and so on.</p>
<p>However if you add all three of these Accessories to a <em>Room</em> called "Living Room", you can then control all of them with a single command: "Siri turn the Living Room off"</p>
<h3>
<a aria-hidden="true" class="anchor" href="#zone" id="user-content-zone"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Zone</h3>
<p>A <em>"Zone"</em> is a collection of rooms.</p>
<p><strong>Example Zone</strong>: <em>Upstairs</em> which contains rooms <em>Guest Bedroom</em>, <em>Guest Bathroom</em>, <em>Bonus Room</em>, <em>Kids Room</em><br/>
In this setup, you can tell Siri to switch off all lights upstairs.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#scene" id="user-content-scene"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Scene</h3>
<p>A scene is a collection of accessories and their desired states. You could create a scene called <em>"Movie Time"</em> which sets the living room lights to 33% brightness, TV to ON &amp; Stereo to ON.</p>
<p>Another scene example could be <em>"Leaving Home"</em> which sets every Accessory to "Off".</p>
<h3>
<a aria-hidden="true" class="anchor" href="#trigger" id="user-content-trigger"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Trigger</h3>
<p><em>"Triggers set scenes at specific times, when you get to locations or when a characteristic is in a specific state. -Apple"</em>  In other words, a trigger is a set of user definable conditions and/or events which must be met which results in the automatic execution of a Scene.</p>
<p><strong>Example:</strong>
Every time you come home from work, you have a routine of turning on specific lights in your house. However, the exact time in which you come home varies some and you really only perform this routine in the winter when the sun is set before you get home from work.</p>
<p>A location based trigger with time conditions could be setup to automate this task. Create a scene called "welcome home" which has the desired set of the lights with their "on" levels set, then create a location trigger with condition of "after sunset".</p>

        </div>

    </div>]