[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>以下是一个在两 <code>周期合约(合约编码.交易所编码-数量.时间单位)</code>  <code>AA.SHFE-1.Minute</code>  ,  <code>BB.SHFE-1.Minute</code> 上运行的简单的均线策略例子。</p>
<div class="highlight highlight-source-python"><pre>    <span class="pl-k">from</span> quantdigger <span class="pl-k">import</span> <span class="pl-k">*</span>
    <span class="pl-k">class</span> <span class="pl-en">DemoStrategy</span>(<span class="pl-e">Strategy</span>):
        <span class="pl-s"><span class="pl-pds">"""</span> 策略A1 <span class="pl-pds">"""</span></span>
    
        <span class="pl-k">def</span> <span class="pl-en">on_init</span>(<span class="pl-smi"><span class="pl-smi">self</span></span>, <span class="pl-smi">ctx</span>):
            <span class="pl-s"><span class="pl-pds">"""</span>初始化数据<span class="pl-pds">"""</span></span> 
            ctx.ma10 <span class="pl-k">=</span> MA(ctx.close, <span class="pl-c1">10</span>, <span class="pl-s"><span class="pl-pds">'</span>ma10<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>y<span class="pl-pds">'</span></span>, <span class="pl-c1">2</span>)
            ctx.ma20 <span class="pl-k">=</span> MA(ctx.close, <span class="pl-c1">20</span>, <span class="pl-s"><span class="pl-pds">'</span>ma20<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>b<span class="pl-pds">'</span></span>, <span class="pl-c1">2</span>)
            ctx.ma2 <span class="pl-k">=</span> NumberSeries()

        <span class="pl-k">def</span> <span class="pl-en">on_symbol</span>(<span class="pl-smi"><span class="pl-smi">self</span></span>, <span class="pl-smi">ctx</span>):
            <span class="pl-k">return</span>

        <span class="pl-k">def</span> <span class="pl-en">on_bar</span>(<span class="pl-smi"><span class="pl-smi">self</span></span>, <span class="pl-smi">ctx</span>):
            <span class="pl-k">if</span> ctx.curbar <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>:
                ctx.ma2.update((ctx.close[<span class="pl-c1">1</span>]<span class="pl-k">+</span>ctx.close)<span class="pl-k">/</span><span class="pl-c1">2</span>)
            <span class="pl-k">if</span> ctx.curbar <span class="pl-k">&gt;</span> <span class="pl-c1">20</span>:
                <span class="pl-k">if</span> ctx.ma10[<span class="pl-c1">2</span>] <span class="pl-k">&lt;</span> ctx.ma20[<span class="pl-c1">2</span>] <span class="pl-k">and</span> ctx.ma10[<span class="pl-c1">1</span>] <span class="pl-k">&gt;</span> ctx.ma20[<span class="pl-c1">1</span>]:
                    ctx.buy(ctx.close, <span class="pl-c1">1</span>) 
                <span class="pl-k">elif</span> ctx.position() <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">and</span> ctx.ma10[<span class="pl-c1">2</span>] <span class="pl-k">&gt;</span> ctx.ma20[<span class="pl-c1">2</span>] <span class="pl-k">and</span> ctx.ma10[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> ctx.ma20[<span class="pl-c1">1</span>]:
                    ctx.sell(ctx.close, ctx.position()) 

        <span class="pl-k">def</span> <span class="pl-en">on_exit</span>(<span class="pl-smi"><span class="pl-smi">self</span></span>, <span class="pl-smi">ctx</span>):
            <span class="pl-k">return</span>

    <span class="pl-k">if</span> <span class="pl-c1">__name__</span> <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">'</span>__main__<span class="pl-pds">'</span></span>:
        set_config({
            <span class="pl-s"><span class="pl-pds">'</span>source<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-pds">'</span>sqlite<span class="pl-pds">'</span></span>,
            <span class="pl-s"><span class="pl-pds">'</span>data_path<span class="pl-pds">'</span></span>: <span class="pl-s"><span class="pl-pds">'</span>d:\data<span class="pl-pds">'</span></span> 
        })
        set_symbols([<span class="pl-s"><span class="pl-pds">'</span>AA.SHFE-1.Minute<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>BB.SHFE-1.Minute<span class="pl-pds">'</span></span>])
        profile <span class="pl-k">=</span> add_strategy([DemoStrategy(<span class="pl-s"><span class="pl-pds">'</span>A1<span class="pl-pds">'</span></span>)])
        run()</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#%E6%95%B0%E6%8D%AE%E6%BA%90" id="user-content-数据源"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>数据源</h2>
<p><code>set_config</code> 是配置函数，通过它设置系统参数，这里设置了系统使用的数据源是
参数 <code>data_path</code>所设目录下的sqlite数据库。你也可以不用做设置，系统默认数据目录
为当前目录下的data子目录，默认数据源是csv文件。</p>
<pre><code>set_config({
    'source': 'sqlite',
    'data_path': 'd:\data' 
})
</code></pre>
<p><code>set_symbols</code> 指定策略执行要用到的合约, 并且你也可以给它指定时间范围。</p>
<p>set_symbols(['AA.SHFE-1.Minute', 'BB.SHFE-1.Minute'])</p>
<h2>
<a aria-hidden="true" class="anchor" href="#%E7%AD%96%E7%95%A5%E6%8E%A5%E5%8F%A3" id="user-content-策略接口"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>策略接口</h2>
<p>所有的用户策略都继承于策略基类 <code>Strategy</code> ，它包含四个主要策略函数: <code>on_init</code>, <code>on_symbol</code>, <code>on_bar</code>, <code>on_exit</code> 。</p>
<p>还是以上面的策略做位例子，它运行在两个品种的数据上, 为简单起见，假设数据的时间范围是[1, 1000], 时间步长为1, 即每个数据合约的k线根数都为1000。</p>
<ul>
<li>
<p><code>on_init</code> 只会被执行一次，它做的是初始化的工作，给 <code>上下文</code> <code>ctx</code> 添加属性变量，以便其它策略API引用。</p>
</li>
<li>
<p><code>on_symbol</code> 是逐合约逐时间点(逐bar)运行，在每个对齐的时间点上会被执行n次，n为策略使用的数据品种的数量，这里n=2。所以它被执行的总次数为1000*2=2000。 不能在 <code>on_symbol</code> 函数中引用跨周期合约的数据，也不能做交易相关的操作，比如下单和持仓查询，它主要用于选股。</p>
</li>
<li>
<p><code>on_bar</code> 是逐时间点运行, 不管策略在多少个合约上执行, 在每个对齐的时间点上只会被执行1次。所以它被执行的总次数为1000。
可以在 <code>on_bar</code> 中引用跨周期合约的数据, 做交易。</p>
</li>
<li>
<p><code>on_exit</code> 只在策略运行结束前运行一次。</p>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#%E7%AD%96%E7%95%A5%E5%90%AB%E4%B9%89" id="user-content-策略含义"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>策略含义</h2>
<p>下面的代码表示10分钟均线上叉20分钟均线的时候，在下一根bar买入。可平仓位大于0时，10分钟均线下叉20分钟均线的时候在下一根bar卖出。</p>
<div class="highlight highlight-source-python"><pre>    <span class="pl-k">if</span> ctx.curbar <span class="pl-k">&gt;</span> <span class="pl-c1">20</span>:
        <span class="pl-k">if</span> ctx.ma10[<span class="pl-c1">2</span>] <span class="pl-k">&lt;</span> ctx.ma20[<span class="pl-c1">2</span>] <span class="pl-k">and</span> ctx.ma10[<span class="pl-c1">1</span>] <span class="pl-k">&gt;</span> ctx.ma20[<span class="pl-c1">1</span>]:
            ctx.buy(ctx.close, <span class="pl-c1">1</span>) 
        <span class="pl-k">elif</span> ctx.position() <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">and</span> ctx.ma10[<span class="pl-c1">2</span>] <span class="pl-k">&gt;</span> ctx.ma20[<span class="pl-c1">2</span>] <span class="pl-k">and</span> ctx.ma10[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> ctx.ma20[<span class="pl-c1">1</span>]:
            ctx.sell(ctx.close, ctx.position()) </pre></div>
<p><code>ctx.ma10</code>, <code>ctx.ma20</code> 都是 <a class="internal absent" href="/QuantFans/quantdigger/wiki/%E6%8C%87%E6%A0%87%E5%8F%98%E9%87%8F">指标变量</a> , <code>ctx.close</code> 为 <a class="internal present" href="/QuantFans/quantdigger/wiki/%E6%97%B6%E5%BA%8F%E5%8F%98%E9%87%8F">时序变量</a> ，
它们都是上下文 <code>ctx</code> 的属性值, 策略API可通过上下文引用这些变量。</p>
<p><a class="internal present" href="/QuantFans/quantdigger/wiki/%E6%97%B6%E5%BA%8F%E5%8F%98%E9%87%8F">时序变量</a> 可看作是一个数组，长度为当前数据上下文的长度，这里为1000。时序变量的索引i引用表示自当前
往前倒数的第i个值， i=0的索引引用表示当前值。 比如， <code>ctx.close[1]</code> 表示前面一根bar的收盘价， <code>ctx.close[0]</code> 和 <code>ctx.close</code> 都表示当前bar的收盘价。 <a class="internal absent" href="/QuantFans/quantdigger/wiki/%E6%8C%87%E6%A0%87%E5%8F%98%E9%87%8F">指标变量</a> 和<a class="internal present" href="/QuantFans/quantdigger/wiki/%E6%97%B6%E5%BA%8F%E5%8F%98%E9%87%8F">时序变量</a>类似。<code>ctx.curbar</code> 表示策略API运行到上下文的第几根k线，它在此例中的取值范围是[1, 1000]。</p>
<p>下面的代码做为时序变量使用的演示，直接在策略API里面直接用当前bar的收盘价和前面一根bar的收盘价计算二根bar均值。 <code>ctx.ma2</code> 是数字时序变量, 它的长度会自动 随着策略的逐时间（逐bar）运行而变长，如果不调用成员函数 <code>update</code> 更新最新值，系统默认会给它赋0值。</p>
<div class="highlight highlight-source-python"><pre>    <span class="pl-k">if</span> ctx.curbar <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>:
        ctx.ma2.update((ctx.close[<span class="pl-c1">1</span>]<span class="pl-k">+</span>ctx.close)<span class="pl-k">/</span><span class="pl-c1">2</span>)</pre></div>
<p>如果你不喜欢时序变量自动追加数值的功能，可以用普通的 <code>list</code> 变量，比如 <code>ctx.xxx = []</code></p>
<h2>
<a aria-hidden="true" class="anchor" href="#%E4%B8%8A%E4%B8%8B%E6%96%87" id="user-content-上下文"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>上下文</h2>
<p><code>ctx</code> 表示数据、策略上下文。本例中策略是运行在两个品种的数据上，所以在 <code>on_init</code> 中初始化的属性值有两份，分别对应于两个数据品种的上下文。本例只有一个策略，所以只有一个策略上下文。 系统在运行的时候会自动切换数据和策略上下文，具体细节见章节 <a class="internal present" href="/QuantFans/quantdigger/wiki/%E4%BA%A4%E6%98%93%E4%B8%8A%E4%B8%8B%E6%96%87">交易上下文</a> 。</p>
<h2>
<a aria-hidden="true" class="anchor" href="#profile" id="user-content-profile"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>profile</h2>
<p>待续。。</p>
<h2>
<a aria-hidden="true" class="anchor" href="#%E4%B8%8A%E4%B8%80%E8%8A%82%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE------%E4%B8%8B%E4%B8%80%E8%8A%82%E6%9B%B4%E5%A4%9A%E7%AD%96%E7%95%A5" id="user-content-上一节数据源配置------下一节更多策略"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><em>上一节</em> <strong><a class="internal present" href="/QuantFans/quantdigger/wiki/%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE">数据源配置</a></strong>           <em>下一节</em> <a class="internal present" href="/QuantFans/quantdigger/wiki/%E6%9B%B4%E5%A4%9A%E7%AD%96%E7%95%A5">更多策略</a> </h2>

        </div>

    </div>]