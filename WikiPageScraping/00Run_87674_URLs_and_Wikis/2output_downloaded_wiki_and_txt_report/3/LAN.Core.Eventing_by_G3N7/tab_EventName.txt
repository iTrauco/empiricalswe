[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The event name is at the core of how the framework works.  The underlying value is a unique string that maps to an Enum in C# and a const string in TypeScript.  It enforces two conventions:</p>
<ul>
<li>Your Enum should have a name ending with Events.</li>
<li>The unique string created for the event is a combination of the category of the event, and the specific name.</li>
</ul>
<div class="highlight highlight-source-cs"><pre>    <span class="pl-k">public</span> <span class="pl-k">enum</span> <span class="pl-en">UserEvents</span>
    {
        <span class="pl-en">SearchRequest</span>,
        <span class="pl-en">SearchRespones</span>,
        <span class="pl-en">DeleteRequest</span>,
        <span class="pl-en">DeleteResponse</span>,
    }</pre></div>
<p>If we were to use <code>UserEvents.SearchRequest</code> as an example it would translate to <code>"UserSearchRequest"</code>.  These two conventions ensure that if we can create the enum and member it should be unique in our app.</p>
<p>You will find this type as a param on the handler registry.  It is worth noting that using an implicit operator, we have removed the need to create an <code>new EventName&lt;UserEvents&gt;(UserEvents.SearchRequest)</code> just to pass it to the function.</p>

        </div>

    </div>]