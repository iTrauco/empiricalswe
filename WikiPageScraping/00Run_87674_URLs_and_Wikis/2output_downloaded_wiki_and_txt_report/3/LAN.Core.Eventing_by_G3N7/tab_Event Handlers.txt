[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Event handlers in C# should generally inherit <a href="https://github.com/G3N7/LAN.Core.Eventing/blob/master/LAN.Core.Eventing/HandlerBase.cs">HandlerBase</a> or a subclass of it.  If you require custom behavior you can implement <a href="https://github.com/G3N7/LAN.Core.Eventing/blob/master/LAN.Core.Eventing/IHandler.cs">IHandler</a> directly but generally you should not need to.</p>
<p>Although you could do authorization on a per handler bases, generally we recommend you create different subclasses of <a href="https://github.com/G3N7/LAN.Core.Eventing/blob/master/LAN.Core.Eventing/HandlerBase.cs">HandlerBase</a> that create contexts of authorization within your app.  For example:</p>
<div class="highlight highlight-source-cs"><pre>	<span class="pl-k">public</span> <span class="pl-k">abstract</span> <span class="pl-k">class</span> <span class="pl-en">AdminHandlerBase</span>&lt;<span class="pl-en">TReq</span>&gt; : <span class="pl-en">HandlerBase</span>&lt;<span class="pl-en">TReq</span>, <span class="pl-en">IMyAppPrinciple</span>&gt; <span class="pl-k">where</span> <span class="pl-en">TReq</span> : <span class="pl-en">RequestBase</span>
	{
		<span class="pl-k">protected</span> <span class="pl-k">override</span> <span class="pl-k">bool</span> <span class="pl-en">IsAuthorized</span>(<span class="pl-en">TReq</span> <span class="pl-smi">request</span>, <span class="pl-en">IMyAppPrinciple</span> <span class="pl-smi">principal</span>)
		{
			<span class="pl-k">return</span> <span class="pl-smi">principal</span>.<span class="pl-en">IsInRole</span>(<span class="pl-smi">RoleEnum</span>.<span class="pl-smi">SiteAdmin</span>);
		}
	}</pre></div>
<p>These reusable Base classes help ensure consistent authorization across your app.</p>

        </div>

    </div>]