[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#electron-prebuilt" id="user-content-electron-prebuilt"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Electron Prebuilt</h2>
<p>This is by far the fastest method for debugging the desktop app. It will require that you install the electron module to your system, <code>npm install -g electron</code>.</p>
<p>In order to run the electron command you need to have completed 2 tasks beforehand:</p>
<ol>
<li>Copy the package.json from <code>phonegap-app-desktop/src/config/</code> to <code>phonegap-app-desktop/www/</code>
</li>
<li>Run <code>npm install</code> inside <code>phonegap-app-desktop/www/</code>
</li>
</ol>
<p>Once you have done this you can run the app using <code>electron www/</code> from the root directory or <code>electron .</code> if you are inside the www directory. This will launch desktop app in a new electron window along with the developer tools console. If the app launches without the developer console, check that in the package.json the option for devTools is set to true:</p>
<pre><code>"window"  : {
  "devTools" : true
},
</code></pre>
<p>If you want to debug a particular node module you can edit them from <code>phonegap-app-desktop/www/node_modules/</code>. In order for the new changes to take affect you will need to refresh the desktop app. You can do this by going to the developer console and pressing <code>Cmd-R</code> if on OS X or <code>Ctl-R</code> if on Windows. Any debug statements that you added should now be visible in the developer console.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#grunt" id="user-content-grunt"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Grunt</h2>
<p>This method is a little slower but will take care of the manual steps that are required when using the electron command. You will need to install the grunt CLi using <code>npm install -g grunt</code>. From the project root just run the command <code>grunt</code> and this will build and package the desktop app.</p>
<p>When this has finished the app will be located in <code>phonegap-app-desktop/build/PhoneGap-&lt;platform&gt;/</code> folder. To run the app on OS X double click <code>PhoneGap.app</code> and on Windows double click <code>PhoneGap.exe</code>. This will launch the desktop app with the developer tools console. If you are working on Windows, follow the instructions in <code>phonegap-app-desktop/INSTALL</code> to install the necessary dependencies.</p>
<p>Using grunt you can only edit the node modules if you are working on OS X. To do this edit the particular module you want from <code>phonegap-app-desktop/build/PhoneGap-darwin-x64/PhoneGap.app/Contents/Resources/app/node_modules/</code> and refresh the desktop app.</p>

        </div>

    </div>]