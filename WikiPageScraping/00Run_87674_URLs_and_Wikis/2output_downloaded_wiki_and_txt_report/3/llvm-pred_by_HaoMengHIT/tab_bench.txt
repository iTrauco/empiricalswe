[<div class="wiki-body gollum-rest-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#bench-description" id="user-content-bench-description"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Bench description</h1>
<a name="user-content-lmbench"></a>
<h2>
<a aria-hidden="true" class="anchor" href="#lmbench" id="user-content-lmbench"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>lmbench</h2>
<p><a href="http://sourceforge.net/projects/lmbench/" rel="nofollow">lmbench</a> 测试参数众多. 运行测试不难, 关键是如何理解, 如何使用其测试结果.</p>
<p>在运行 <code>make results</code> 之后, 经过长时间的测试, 可以在 <code>results</code> 文件夹看到结果.</p>
<p>阅读Makefile, 了解, 它首先执行 <code>script/config-run</code> 脚本, 设置各个测试参数. 然
后再执行 <code>script/lmbench</code> 脚本来运行具体的测试程序.</p>
<p>测试cpu指令时间的程式为 <code>bin/lat_ops</code> lat不知道什么意思, 但是还有一个
<code>bin/par_ops</code> 的程式是指令并行的时间的. 该测试结果比较好理解:</p>
<pre>integer bit: 0.52 nanoseconds
integer add: 0.48 nanoseconds
integer mul: 1.93 nanoseconds
integer div: 18.25 nanoseconds
integer mod: 11.96 nanoseconds
int64 bit: 0.50 nanoseconds
uint64 add: 0.48 nanoseconds
int64 mul: 4.34 nanoseconds
int64 div: 30.68 nanoseconds
int64 mod: 36.46 nanoseconds
float add: 2.39 nanoseconds
float mul: 3.13 nanoseconds
float div: 11.54 nanoseconds
double add: 2.39 nanoseconds
double mul: 2.40 nanoseconds
double div: 13.08 nanoseconds
</pre>
<div>
<p>Warning</p>
<p>outdated</p>
<p>测试单机的 socket 通信时间(单机内部网络通信)的程式为 <code>bin/bw_unix</code> 和
<code>bin/lat_unix</code>. 分别输出如下:</p>
<pre>AF_UNIX sock stream bandwidth: 1061.21 MB/sec

AF_UNIX sock stream latency: 13.6871 microseconds
</pre>
<p>啥意思? 暂时还不知道. 选择该参数的理由是肤浅没什么道理的, 单就是看名字觉得可能
相关. 也不排除以后换一个参数的可能.</p>
</div>
<a name="user-content-mpbench"></a>
<h2>
<a aria-hidden="true" class="anchor" href="#mpbench" id="user-content-mpbench"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>mpbench</h2>
<p>mpbench 是根据 “Beowulf集群系统性能评测” 文章中里面介绍了解到的，后来进入官网
发现被集成进入了 <a href="http://icl.cs.utk.edu/projects/llcbench/index.htm" rel="nofollow">LLCBench</a> 。</p>
<p>所以我们只需要研究下该工具数如何使用的就行了。</p>
<p>从官网下载到源代码中，根据步骤编译，需要注意的是它继承了3个工具，我们只需要其中
的 mpbench。所以在编译的过程中，进入该文件夹使用 make，直接只编译该项目，跳过其
它两个。</p>


        </div>

    </div>]