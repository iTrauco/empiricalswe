[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The Frogatto engine comes with several useful developer utilities integrated into it. Utilities are always invoked using the command line arguments, <code>--utility=&lt;utility_name&gt; &lt;args&gt;</code>. This page contains examples for Linux.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#query-utility" id="user-content-query-utility"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Query Utility</h2>
<p>The query utility is useful for processing Frogatto's FSON files with FFL. It simply takes a directory or file and will recursively process all .cfg files, executing a given formula on each. If that formula simply returns data values it will output the values, if the formula returns commands, it will execute those commands on the file.</p>
<p>Example: finding all objects with over 10 hitpoints:</p>
<div class="highlight highlight-source-shell"><pre>./game --utility=query modules/frogatto/data/objects <span class="pl-s"><span class="pl-pds">'</span>if(hitpoints &gt; 10, {(id): (hitpoints)})<span class="pl-pds">'</span></span></pre></div>
<p>Example: doubling all objects' hitpoints:</p>
<div class="highlight highlight-source-shell"><pre>./game --utility=query modules/frogatto/data/objects <span class="pl-s"><span class="pl-pds">'</span>set(hitpoints, hitpoints*2)<span class="pl-pds">'</span></span></pre></div>
<p>Example: moving every 'lever' object 18 pixels up, and 6 pixels to the left:</p>
<div class="highlight highlight-source-shell"><pre>./game --utility=query modules/frogatto/data/level/ <span class="pl-s"><span class="pl-pds">"</span>map(filter(doc.character, value.type = 'lever'), [add(value.y, -18), add(value.x, -6)])<span class="pl-pds">"</span></span></pre></div>
<p>The visit_objects() function is very useful in some cases. It returns a list of all {} objects within a node. e.g. if one wanted to find the values of all image: attributes found within objects, one might simply do this:</p>
<div class="highlight highlight-source-shell"><pre>./game --utility=query modules/frogatto/data/objects <span class="pl-s"><span class="pl-pds">'</span>map(visit_objects(doc), value.image)<span class="pl-pds">'</span></span> <span class="pl-k">|</span> sort <span class="pl-k">|</span> uniq -c</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#notes" id="user-content-notes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes</h3>
<p>When the query utility modifies files, it does its best to preserve the file's current comments, spacing, and other attributes. It's not perfect, but it works reasonably well most of the time.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#render-level-utility" id="user-content-render-level-utility"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Render Level Utility</h2>
<p>The render level utility outputs a level as an image it takes a level name and output file and renders them. It defaults to the module's level/ folder when looking for level files.</p>
<div class="highlight highlight-source-shell"><pre>./game --utility=render_level titlescreen.cfg titlescreen.png</pre></div>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p>More help can be found via IRC, <a href="irc://irc.freenode.net/#frogatto" rel="nofollow">#Frogatto</a> on freenode.net. This wiki is not a complete reference.</p>

          </div>
        </div>
    </div>]