[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#requirements" id="user-content-requirements"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Requirements</h2>
<p>For building according to the instructions here, you need to run linux.  Cygwin/mingw might be able to be made to work, but in the end will cause more headaches than it's worth. The build can be done either on an install of linux running on hardware or a virtualized install running under something like VMware player. This build was done using the following:
Ubuntu 11.10 (under vmware player)</p>
<h3>
<a aria-hidden="true" class="anchor" href="#things-to-install-sudo-apt-get-install--" id="user-content-things-to-install-sudo-apt-get-install--"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Things to install: (sudo apt-get install ... )</h3>
<p>You're going to need to install the following packages, some of them are strictly necessary, but we want to be able to do a native build of Frogatto in addition to the android build.
ccache<br/>
libsdl-image1.2-dev<br/>
libsdl-mixer1.2-dev<br/>
libsdl-sound1.2-dev<br/>
libsdl-ttf2.0-dev<br/>
libsdl1.2-dev<br/>
git<br/>
openjdk-7-jdk<br/>
openjdk-7-jre<br/>
ant<br/>
libboost-all-dev (you don't actually need all of them, this makes typing easier)<br/>
g++</p>
<h3>
<a aria-hidden="true" class="anchor" href="#installing-from-github" id="user-content-installing-from-github"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Installing from github</h3>
<p>Grab a copy of frogatto from github and the android port of SDL that we're going to be using.<br/>
cd ~<br/>
git clone git://github.com/frogatto/frogatto.git<br/>
git clone git://github.com/pelya/commandergenius.git</p>
<h3>
<a aria-hidden="true" class="anchor" href="#installing-the-sdkndk" id="user-content-installing-the-sdkndk"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Installing the SDK/NDK</h3>
<p>Grab the android SDK from this page <a href="http://developer.android.com/sdk/index.html" rel="nofollow">http://developer.android.com/sdk/index.html</a>
At the time of writing the current version is r21.<br/>
cd ~/Downloads<br/>
wget <a href="http://dl.google.com/android/android-sdk_r21-linux.tgz" rel="nofollow">http://dl.google.com/android/android-sdk_r21-linux.tgz</a><br/>
Grab the android NDK.<br/>
cd ~/Downloads<br/>
wget <a href="http://dl.google.com/android/ndk/android-ndk-r8c-linux-x86.tar.bz2" rel="nofollow">http://dl.google.com/android/ndk/android-ndk-r8c-linux-x86.tar.bz2</a></p>
<p>Extract both of these into your home folder.<br/>
cd ~<br/>
tar xvfz Downloads/android-sdk_r21-linux.tgz<br/>
tar xvfj Downloads/android-ndk-r8c-linux-x86.tar.bz2</p>
<p>Configure your paths for development, assuming you used the packages above.<br/>
export PATH=$HOME/android-sdk-linux/tools:$HOME/android-sdk-linux/platform-tools:$HOME/android-ndk-r8c:$PATH</p>
<p>You most likely want to add that to your ~/.profile file as well.</p>
<p>In order not to get frustrated and assuming you eschew gui editors and use vi, add the following to ~/.exrc<br/>
:set ts=4<br/>
:set autoindent<br/>
:set showmode<br/>
:set wrapmargin=0</p>
<p>Next you'll need to install some SDK components into your android sdk. type 'android' to bring up the gui, at a minimum I would install.<br/>
Tools/Android SDK Platform-tools<br/>
Android 1.6/* (API 4)<br/>
Android 2.3.3/* (API 10)<br/>
Android 3.1/* (API 12)<br/>
Ideally you probably want to install them all. If it comes in with a logon prompt to a developer site you can logon with the appropriate credentials if you have them, otherwise just hit cancel, that component will be skipped.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#setting-up-the-project" id="user-content-setting-up-the-project"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Setting up the project</h3>
<p>Time to set up the project (finally).<br/>
cd commandergenius/<br/>
mkdir project/jni/application/frogatto                         (this directory actually already exists, doing it just in case)<br/>
ln -s ~/frogatto project/jni/application/frogatto/             (symbolic link to sources in build tree)<br/>
rm project/jni/application/src<br/>
ln -s frogatto project/jni/application/src<br/>
cd src/<br/>
ln -s frogatto/android/AndroidAppSettings.cfg AndroidAppSettings.cfg<br/>
ln -s frogatto/images/os/android/icon.png icon.png<br/>
mkdir AndroidData<br/>
ln -s ../frogatto/images/os/android/logo.png logo.png<br/>
cd ~/commandergenius/src/frogatto/<br/>
zip -r ~/commandergenius/src/frogatto-data.zip data/ images/ sounds/ music/<br/>
cd ../AndroidData<br/>
split -d -a 3 -b 1000000 ../frogatto-data.zip data.zip<br/>
cd ~/commandergenius/project/res</p>
<p>./ChangeAppSettings.sh<br/>
android update project -p project -t android-12</p>
<p>Of course nothing is ever quite as easy as it should be and before your can build everything, you need to rebuild
the boost libraries, as the supplied ones don't work. Note that compiling boost and getting it right is extraordinarily
painful. It's great fun ending up with an IA32 file when you want an arm file. Or a single mistake with a path and nothing
builds.  Basically the following project requires you use the android-ndk-r8c NDK.  God have mercy on your
soul if you need to update it to a different version.<br/>
cd ~/commandergenius/project/jni/boost/src<br/>
git clone git://github.com/MysticTreeGames/Boost-for-Android.git<br/>
cd Boost-for-Android<br/>
./build-android.sh<br/>
(To build with NDK-R8C you need to patch build-android.sh basically replacing the two instances of R8b with R8c)</p>
<p>You should now have a build/ folder with include/ and lib/ sub-folders.  If everything was successful
the build/lib folder should look roughly like this:<br/>
libboost_date_time-gcc-mt-1_45.a   libboost_program_options-gcc-mt-1_45.a  libboost_system-gcc-mt-1_45.a<br/>
libboost_date_time-gcc-mt.a        libboost_program_options-gcc-mt.a       libboost_system-gcc-mt.a<br/>
libboost_filesystem-gcc-mt-1_45.a  libboost_regex-gcc-mt-1_45.a            libboost_thread-gcc-mt-1_45.a<br/>
libboost_filesystem-gcc-mt.a       libboost_regex-gcc-mt.a                 libboost_thread-gcc-mt.a<br/>
libboost_iostreams-gcc-mt-1_45.a   libboost_signals-gcc-mt-1_45.a<br/>
libboost_iostreams-gcc-mt.a        libboost_signals-gcc-mt.a</p>
<p>Now we just need to copy the include files and library files to the correct locations in the build tree.<br/>
cd ~/commandergenius/project/jni/boost/include<br/>
rm -rf *<br/>
ln -s ../src/Boost-for-Android/build/include/boost-1_45/boost boost<br/>
cd ~/commandergenius/project/jni/boost/lib<br/>
mkdir arm-linux-androideabi-4.6.3<br/>
cd arm-linux-androideabi-4.6.3<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_date_time-gcc-mt-1_45.a libboost_date_time.a<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_filesystem-gcc-mt-1_45.a libboost_filesystem.a<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_iostreams-gcc-mt-1_45.a libboost_iostreams.a<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_program_options-gcc-mt-1_45.a libboost_program_options.a<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_regex-gcc-mt-1_45.a libboost_regex.a<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_signals-gcc-mt-1_45.a libboost_signals.a<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_system-gcc-mt-1_45.a libboost_system.a<br/>
ln -s ../../src/Boost-for-Android/build/lib/libboost_thread-gcc-mt-1_45.a libboost_thread.a<br/>
cd ~/commandergenius/project/jni/boost<br/>
Edit Android.mk and change the three instances of arm-linux-4.4.0 to arm-linux-androideabi-4.6.3</p>
<p>cd ~/commandergenius<br/>
./build.sh                                                  (Finally start building stuff)</p>
<p>If everything is successful and you had an android device with usb connected, it should have installed the application on your phone.  If not you'll need to manually copy the application across and use some sort of App Installer application from Google play to install it.  The application can be found as ~/commandergenius/project/bin/MainActivity-Debug.apk</p>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p>More help can be found via IRC, <a href="irc://irc.freenode.net/#frogatto" rel="nofollow">#Frogatto</a> on freenode.net. This wiki is not a complete reference.</p>

          </div>
        </div>
    </div>]