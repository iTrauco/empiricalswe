[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#getting-started" id="user-content-getting-started"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting Started</h1>
<p>After <a href="https://github.com/CRESS-Surrey/eXtraWidgets#installing">installing the extension</a> the best way to learn how to use it is probably to follow a sequence like this:</p>
<ul>
<li>First try <a href="#getting-your-feet-wet">the simple example below</a>;</li>
<li>Then, the one important concept to understand is <a href="wiki/Widget-contexts">how widget contexts work</a>;</li>
<li>After that, learning <a href="wiki/Creating-dynamic-interfaces">how to create a dynamic interface</a> will help you take things a step further;</li>
<li>Once you've done all that, it's mostly a matter of getting to know all the <a href="wiki/Primitives">primitives</a>, <a href="wiki/Kinds">widget kinds</a> and <a href="#Properties">properties</a>.</li>
<li>Finally, if you are planning to perform experiments on your model, you should read the section on <a href="wiki/Using-the-extension-with-BehaviorSpace">how to use the extension with BehaviorSpace</a>.</li>
</ul>
<h1>
<a aria-hidden="true" class="anchor" href="#getting-help" id="user-content-getting-help"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting Help</h1>
<p>If you encounter any difficulties, <a href="http://stackoverflow.com/questions/tagged/netlogo" rel="nofollow">ask a question on StackOverflow</a>. If you believe you have found a bug (or would like to request a feature) <a href="https://github.com/CRESS-Surrey/eXtraWidgets/issues/new">open a new issue</a>.</p>
<p>Please note that the extension is not meant to completely replace NetLogo's regular interface tab: output widgets like monitors and plots and, more importantly, the view, are not available in extra tabs and probably won't be any time soon.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#getting-your-feet-wet" id="user-content-getting-your-feet-wet"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting your feet wet</h1>
<p>What follows is an example demonstrating some of the things that you can do with the extension. (Note that a <a href="https://github.com/CRESS-Surrey/eXtraWidgets/wiki/Creating-your-interface-at-startup">good place to put your interface code</a> is in the  <a href="http://ccl.northwestern.edu/netlogo/docs/dictionary.html#startup" rel="nofollow"><code>startup</code></a> procedure, which runs automatically when your model is opened.)</p>
<pre><code>extensions [xw]

to startup
  xw:clear-all ; remove all previous extra tabs and widgets, if any
  ; create a new tab to the right of the regular interface tab
  ; (tabs and widgets need a "key": a string that identifies them)
  xw:create-tab "t1" [ ; we use "t1" as the key for our new tab
    ; and set its properties within a command block:
    xw:set-title "Parameters"
  ]
  ; create a slider on the new tab, similar to a regular slider
  ; the slider is placed in the upper left corner by default
  xw:create-slider "population" [
    xw:set-label "Population size"
  ]
  ; a "multi-chooser", unlike a regular chooser,
  ; lets you select multiple items:
  xw:create-multi-chooser "shapes" [
    xw:set-label "Other shapes to use"
    xw:set-items ["airplane" "arrow" "bug" "butterfly" "turtle"]
    xw:set-selected-items n-of 2 xw:items ; two random shapes by default
    ; set y relative to the bottom of the "population" slider:
    xw:set-y [ xw:y + xw:height + 10 ] xw:of "population"
    xw:set-height 150
  ]
  ; you can also put buttons on the extra tabs:
  xw:create-button "setup" [
    xw:set-label "Push me!"
    ; commands, given as strings, are compiled on execution:
    xw:set-commands "setup"
    xw:set-y [ xw:y + xw:height + 10 ] xw:of "shapes"
  ]
  ; xw:ask let's you do stuff with multiple widgets at a time
  ; (see also xw:of and xw:with)
  xw:ask xw:widgets [
    xw:set-color one-of base-colors + 3 ; widgets can be any color!
    ; and you can change their text color as well:
    xw:set-font-color xw:color - 6
  ]
  xw:select-tab 2 ; show our newly created tab
end
</code></pre>
<p>Here is a possible outcome of this procedure on Linux (it would look slightly different on Mac or Windows):</p>
<p><img alt="a screenshot of the result" src="https://github.com/CRESS-Surrey/eXtraWidgets/raw/master/doc/demo.png"/></p>
<p>Now let's use the values from those widgets in your <code>setup</code> procedure. As opposed to regular NetLogo widgets, extra widgets don't create global variables. You need to use <code>xw:get</code> and <code>xw:set</code> to get and set their values. Here is how you could do it in this case:</p>
<pre><code>to setup
  clear-all
  create-turtles xw:get "population" [
    set shape one-of fput "default" xw:get "shapes"
    fd 10
    xw:select-tab 1 ; select the regular interface tab
  ]
end
</code></pre>

        </div>

    </div>]