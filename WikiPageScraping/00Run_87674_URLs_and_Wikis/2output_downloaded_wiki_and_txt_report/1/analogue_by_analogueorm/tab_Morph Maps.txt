[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>By default polymorphic relations will store the <code>Entity</code> class as the <code>type</code>:</p>
<table>
<thead>
<tr>
<th>id</th>
<th>imageable_id</th>
<th>imageable_type</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>10</td>
<td>App\Post</td>
</tr>
<tr>
<td>2</td>
<td>14</td>
<td>App\Avatar</td>
</tr>
</tbody>
</table>
<p>However, you might not want the DB data tied to your application structure. You can use the <code>$manager-&gt;morphMap()</code> method to use custom names in these columns:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$manager</span><span class="pl-k">-&gt;</span>morphMap([</span>
<span class="pl-s1">    <span class="pl-s"><span class="pl-pds">"</span>post<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">App\</span><span class="pl-c1">Post</span><span class="pl-k">::</span><span class="pl-c1">class</span>,</span>
<span class="pl-s1">    <span class="pl-s"><span class="pl-pds">"</span>avatar<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">App\</span><span class="pl-c1">Avatar</span><span class="pl-k">::</span><span class="pl-c1">class</span>,</span>
<span class="pl-s1">]);</span></pre></div>
<table>
<thead>
<tr>
<th>id</th>
<th>imageable_id</th>
<th>imageable_type</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>10</td>
<td>post</td>
</tr>
<tr>
<td>2</td>
<td>14</td>
<td>avatar</td>
</tr>
</tbody>
</table>

        </div>

    </div>]