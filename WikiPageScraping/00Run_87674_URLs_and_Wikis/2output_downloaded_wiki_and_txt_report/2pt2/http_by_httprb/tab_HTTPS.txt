[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The HTTP gem supports HTTPS via Ruby's built-in OpenSSL module. Unlike certain other Ruby HTTP clients, all you have to do in order to use HTTPS is pass in an <code>https://</code>-prefixed URL. That's it!</p>
<h2>
<a aria-hidden="true" class="anchor" href="#client-certificates" id="user-content-client-certificates"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Client Certificates</h2>
<p>To use client certificates, you can pass in a custom <code>OpenSSL::SSL::SSLContext</code> object containing the certificates you wish to use:</p>
<div class="highlight highlight-source-ruby"><pre>ctx <span class="pl-k">=</span> <span class="pl-c1">OpenSSL</span>::<span class="pl-c1">SSL</span>::<span class="pl-c1">SSLContext</span>.<span class="pl-k">new</span>
ctx.set_params(
  <span class="pl-c1">cert:</span> <span class="pl-c1">OpenSSL</span>::<span class="pl-c1">X509</span>::<span class="pl-c1">Certificate</span>.<span class="pl-k">new</span>(<span class="pl-c1">File</span>.read(<span class="pl-s"><span class="pl-pds">"</span>client.crt<span class="pl-pds">"</span></span>))
  <span class="pl-c1">key:</span>  <span class="pl-c1">OpenSSL</span>::<span class="pl-c1">PKey</span>::<span class="pl-c1">RSA</span>.<span class="pl-k">new</span>(<span class="pl-c1">File</span>.read(<span class="pl-s"><span class="pl-pds">"</span>client.key<span class="pl-pds">"</span></span>))
)

<span class="pl-c1">HTTP</span>.get(<span class="pl-s"><span class="pl-pds">"</span>https://www.google.com<span class="pl-pds">"</span></span>, <span class="pl-c1">:ssl_context</span> =&gt; ctx)</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#disabling-certificate-verification-ie-insecure-usage" id="user-content-disabling-certificate-verification-ie-insecure-usage"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Disabling Certificate Verification (i.e. INSECURE USAGE)</h2>
<p>This section describes how to turn off HTTPS security while still pretending to use HTTPS. Please do <em>NOT</em> do this. With certificate verification disabled, HTTPS provides <strong>NO SECURITY</strong>. We include this information in our documentation extremely reluctantly, after having been asked about it repeatedly. We do so only because we'd rather have a single, easy-to-grep-for pattern for locating instances where security has been explicitly disabled, and furthermore use one people are already looking for, i.e. <code>VERIFY_NONE</code>.</p>
<p>Here is how to create an <code>OpenSSL::SSL::SSLContext</code> with certificate verification disabled and pass it to a request method:</p>
<div class="highlight highlight-source-ruby"><pre>ctx <span class="pl-k">=</span> <span class="pl-c1">OpenSSL</span>::<span class="pl-c1">SSL</span>::<span class="pl-c1">SSLContext</span>.<span class="pl-k">new</span>
ctx.verify_mode <span class="pl-k">=</span> <span class="pl-c1">OpenSSL</span>::<span class="pl-c1">SSL</span>::<span class="pl-c1">VERIFY_NONE</span>

<span class="pl-c1">HTTP</span>.get(<span class="pl-s"><span class="pl-pds">"</span>https://www.google.com<span class="pl-pds">"</span></span>, <span class="pl-c1">:ssl_context</span> =&gt; ctx)</pre></div>

        </div>

    </div>]