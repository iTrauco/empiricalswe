[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#list-of-ntuples" id="user-content-list-of-ntuples"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>List of Ntuples</h1>
<p>Please sign up in the table:</p>
<p><a href="https://docs.google.com/spreadsheets/d/1U1wALjqXxqZJSw-muj_zvvZSaZ2_B3CMmIID6IT1iD4/edit#gid=0" rel="nofollow">https://docs.google.com/spreadsheets/d/1U1wALjqXxqZJSw-muj_zvvZSaZ2_B3CMmIID6IT1iD4/edit#gid=0</a></p>
<p>if you are processing a sample.
ntuplewriter.py settings:
Default at the moment: data = true !!!
reHLT is not found correctly by crab. If using crab check sample and set it to true.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#installation" id="user-content-installation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Installation</h1>
<p>Installing requires two steps: Installing SFrame and installing UHH2. It is assumed that a CMS environment is available on the machine.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#1-install-and-compile-sframe" id="user-content-1-install-and-compile-sframe"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>1. Install and Compile SFrame</h2>
<p>As first step, install SFrame. To start with a clean setup, it is recommended to install a new version of SFrame via</p>
<pre><code>svn co https://svn.code.sf.net/p/sframe/code/SFrame/tags/SFrame-04-00-01/ SFrame
</code></pre>
<p>Before compiling SFrame, remember to setup CMSSW first (to build SFrame against the right root version) and source <code>setup.sh</code> in the SFrame directory (see below).</p>
<h2>
<a aria-hidden="true" class="anchor" href="#2-install-uhh2" id="user-content-2-install-uhh2"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>2. Install <code>UHH2</code>
</h2>
<p>To install <code>UHH2</code>, clone it with git into an existing CMSSW installation, e.g.:</p>
<pre><code>
export SCRAM_ARCH=slc6_amd64_gcc530
cmsrel CMSSW_8_0_20
cd CMSSW_8_0_20/src
cmsenv
git cms-init
git cms-merge-topic gkasieczka:test-httv2-8014
git cms-merge-topic ikrav:egm_id_80X_v1
scram b -j 10
git clone -b RunII_80X_v2 https://github.com/UHH2/UHH2.git
</code></pre>
<p>If this exceeds your quota, do</p>
<pre><code>export CMSSW_GIT_REFERENCE=&lt;DIRECTORYWITHENOUGHSPACE&gt;/cmssw.git
</code></pre>
<p>and try again. Please also have a look at the recommendations of the egamma POG: <a href="https://twiki.cern.ch/twiki/bin/view/CMS/CutBasedElectronIdentificationRun2" rel="nofollow">https://twiki.cern.ch/twiki/bin/view/CMS/CutBasedElectronIdentificationRun2</a>.</p>
<p>If you want to use Puppi please look at <a href="https://twiki.cern.ch/twiki/bin/viewauth/CMS/PUPPI" rel="nofollow">https://twiki.cern.ch/twiki/bin/viewauth/CMS/PUPPI</a> for the latest Puppi tune.</p>
<p>Note that it is important to do that within the <code>src</code> directory of a CMSSW installation; creating a symlink from <code>CMSSW/src</code> to <code>UHH2</code> is not enough.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#3-compiling" id="user-content-3-compiling"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>3. Compiling</h2>
<p>Before compiling, make sure to set up CMSSW (via <code>cmsenv</code>) and SFrame (via <code>source setup.sh</code>), if not already done before. Now you can compile the core SFrame package (with the same ROOT version as used in CMSSW). Go to the SFrame installation directory and type <code>make</code>.</p>
<p>Before goind on, it is important to realize that the UHH2 code has -- in general -- to be compiled twice: once for CMSSW and once for SFrame execution. This is because both packages have different dependencies and naming conventions; for example, the SFrame binaries will be placed in <code>$SFRAME_LIB_DIR</code>, while the CMSSW binaries are in <code>$CMSSW_BASE/lib/$SCRAM_ARCH</code>.</p>
<p>Usually, all you need to do is go to the <code>UHH2</code> directory and type <code>make</code>. This will build both the code for SFrame and for CMSSW. To only build the code for SFrame use, execute</p>
<pre><code>make sframe
</code></pre>
<p>and to only build code for CMSSW, execute</p>
<pre><code>make scram
</code></pre>
<p>This will actually run <code>scram b</code> in the whole CMSSW installation and thus also compile other CMSSW packages (if this is not what you want only run <code>make sframe</code> and run <code>scram b</code> manually).</p>
<h3>
<a aria-hidden="true" class="anchor" href="#3a-notes-on-sframe-compilation" id="user-content-3a-notes-on-sframe-compilation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>3.a. Notes on SFrame compilation</h3>
<p>For the SFrame compilation, as default, only the directories from the <code>UHH2/UHH2</code> repository are compiled (see <code>UHH2/Makefile</code> for details). To enable compilation of <em>additional</em> analysis directories, create <code>UHH2/Makefile.local</code> with the contents such as</p>
<pre><code>dirs += MyAnalysis1 MyAnalysis2
</code></pre>
<p>This will trigger the build also in the directories named <code>MyAnalysis1</code> and <code>MyAnalysis2</code>. (The reason for using <code>Makefile.local</code> is to avoid getting in each other's way: everyone can have their own <code>Makefile.local</code>, which is ignored by git).</p>
<p>For cleaning up, use <code>make clean</code>. Cleaning up manually can be done by removing all files in the <code>obj</code> subdirectory (which is the location used by all auto-generated files) and the SFrame libraries, i.e. <code>$SFRAME_DIR/lib/libSUHH2*</code>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#3b-notes-on-cmssw-compilation" id="user-content-3b-notes-on-cmssw-compilation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>3.b. Notes on CMSSW compilation</h3>
<p>You can also compile the CMSSW part by executing</p>
<pre><code>scram b
</code></pre>
<p>in the CMSSW directory yourself instead of using <code>make scram</code> (the main purpose of the latter command is to prevent accidentally forgetting to build the CMSSW part by making the <code>scram</code> the default).</p>
<p>For cleaning u the CMSSW build, run</p>
<pre><code>scram b clean
</code></pre>
<p>(as is usual for CMSSW); note that <code>make clean</code> only cleans up the SFrame compilation, not the CMSSW one.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#transition-notes" id="user-content-transition-notes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Transition Notes</h2>
<p>In general, try to do all of the above in a clean environment, i.e. without other things installed that might interfere with compiling or executing UHH2.</p>
<p>In particular, you might have your own installation of fastjet from a previous installation of UHHAnalysis. This can be a problem when trying to run CMSSW, as CMSSW also depends on fastjet, but has some specific fastjet plugins your installation does not provide (in this case, starting CMSSW via <code>cmsRun</code> will fail with a symbol error mentioning fastjet). Therefore, it's best to not install fastjet or setup your environment such that the fastjet library of CMSSW is used when running <code>cmsRun</code>.</p>

        </div>

    </div>]