[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#committing-code" id="user-content-committing-code"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Committing code</h1>
<p>To work with <code>UHH2</code> code, clone the <code>UHH2</code> repository from here. Keep code specific to an analysis in a separate repository in the <code>UHH2</code> group.</p>
<p>It is <strong>strongly</strong> recommended to do all developments in a separate branch, so keep 'master' always track the origin (<code>UHH2</code>) master branch.</p>
<p>To get code in the UHH2 group repository, make a fork of the <code>UHH2</code> repository via the web interface on github. Then, rebase your changes on latest <code>UHH2/master</code> and push to your github fork (assuming the remote name is <code>my-uhh2</code>):</p>
<pre><code>git checkout master
git pull origin  #--ff
git rebase master my-branch
git push my-uhh2
</code></pre>
<p>You can also use an interactive rebase to make the commit history nicer by passing <code>-i</code> to the rebase above.</p>
<p>Then, go to the github interface and make a pull request for <code>UHH2/master</code>.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#branching-model" id="user-content-branching-model"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Branching Model</h1>
<p>So far, there is only one single branch, 'master'. This is going to stay for a while: to allow for faster development, everyone is expected to pull in and merge with the changes in <code>UHH2/master</code>. Once an analysis is advanced (approach pre-approval) and thus cannot tolerate any changes but bug fixes, we will likely create a branch for that analysis which is more stable than master. In this branch, only bug-fixes are allowed. Note, however, that the overall intention is to keep 'master' stable enough that all analyzers are up-to-date for the most time (except maybe the very last weeks of the approval process).</p>
<p>To keep master this stable, it is <strong>forbidden</strong> to introduce code to master which might change the outcome of analyses. In particular, code that changes object ids or the logic of event selection, the logic of event reconstruction is not allowed, not even for bug-fixes(!). Instead, for creating a new (bug-free) version:</p>
<ul>
<li>in case of a bug, mark the current version as deprecated and announce that (and the reason for it) to the mailing list</li>
<li>create a new analysis module / object id function for the new behaviour with a new name. CLearly document the relation to exiting classes (e.g. how it is an improvement over the current one).</li>
</ul>
<p>It <strong>is</strong> allowed to</p>
<ul>
<li>add more histogram to one of the <code>Hists</code> classes, if not changing existing ones</li>
<li>add new classes or functions, as described in the second item above</li>
</ul>
<p>Major new developments,  i.e. developments which require chaning a lot of analysis code, will also be done in a separate branch. For new developments, favour changes in which a successfull compilation is a good sign that the code works. In particular, also do not introduce any changes that might change the behavior.</p>

        </div>

    </div>]