[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#list-of-ntuples" id="user-content-list-of-ntuples"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>List of Ntuples</h1>
<p><a href="https://docs.google.com/spreadsheets/d/17drvaGFJdsErpC_qCF3A0_WSY-umtUlgOtOx9VvVFes" rel="nofollow">https://docs.google.com/spreadsheets/d/17drvaGFJdsErpC_qCF3A0_WSY-umtUlgOtOx9VvVFes</a></p>
<h1>
<a aria-hidden="true" class="anchor" href="#installation" id="user-content-installation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Installation</h1>
<p>Installing requires installing FastJet, SFrame, and UHH2. This is now done via one script. It is assumed that a CMS environment is available on the machine.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#1-install-fastjet-sframe--uhh2" id="user-content-1-install-fastjet-sframe--uhh2"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>1. Install FastJet, SFrame &amp; UHH2</h2>
<p>Download the installation script from GitHub and execute it:</p>
<pre><code>wget https://raw.githubusercontent.com/UHH2/UHH2/RunII_94X_v1/scripts/install.sh
source install.sh
</code></pre>
<p>If this exceeds your quota, do</p>
<pre><code>export CMSSW_GIT_REFERENCE=&lt;DIRECTORY_WITH_ENOUGH_SPACE&gt;/cmssw.git
</code></pre>
<p>and try again.</p>
<p>Alternatively, execute all the steps given in the <code>install.sh</code> script one after the other. Sometimes, the compilation with <code>cmsRun</code> fails. In this case, start a new installation in a clean shell.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#2-compiling" id="user-content-2-compiling"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>2. Compiling</h2>
<p>Before compiling, make sure to set up CMSSW (do <code>cmsenv</code> in <code>CMSSW_9_4_*/src</code>) and SFrame (do <code>source setup.sh</code> in the <code>SFrame</code> directory), if not already done before.</p>
<p><strong>NB:</strong> each time you log back in, you need to run <strong>both</strong> <code>cmsenv</code> <strong>and</strong> <code>source setup.sh</code>. NB if you got SFrame prior to 10th Jan 2018, you will have to do the latter inside the <code>SFrame</code> directory.</p>
<p>NB2: FastJet should have already been compiled when <code>install.sh</code> was run.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#compile-sframe" id="user-content-compile-sframe"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Compile SFrame</h3>
<p>Now you can compile the core SFrame package (with the same ROOT version as used in CMSSW). Go to the <code>SFrame</code> installation directory and type <code>make</code>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#compile-uhh2" id="user-content-compile-uhh2"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Compile UHH2</h3>
<p>Before going on, it is important to realize that the UHH2 code has -- in general -- to be compiled twice: once for CMSSW and once for SFrame execution. This is because both packages have different dependencies and naming conventions; for example, the SFrame binaries will be placed in <code>$SFRAME_LIB_DIR</code>, while the CMSSW binaries are in <code>$CMSSW_BASE/lib/$SCRAM_ARCH</code>.</p>
<p>Usually, all you need to do is go to the <code>UHH2</code> directory and type <code>make</code>. This will build both the code for SFrame and for CMSSW. To only build the code for SFrame use, execute</p>
<pre><code>make sframe
</code></pre>
<p>and to only build code for CMSSW, execute</p>
<pre><code>make scram
</code></pre>
<p>This will actually run <code>scram b</code> in the whole CMSSW installation and thus also compile other CMSSW packages (if this is not what you want only run <code>make sframe</code> and run <code>scram b</code> manually).</p>
<h3>
<a aria-hidden="true" class="anchor" href="#2a-notes-on-sframe-compilation" id="user-content-2a-notes-on-sframe-compilation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>2.a. Notes on SFrame compilation</h3>
<p>For the SFrame compilation, as default, only the directories from the <code>UHH2/UHH2</code> repository are compiled (see <code>UHH2/Makefile</code> for details). To enable compilation of <em>additional</em> analysis directories, create <code>UHH2/Makefile.local</code> with the contents such as</p>
<pre><code>dirs += MyAnalysis1 MyAnalysis2
</code></pre>
<p>This will trigger the build also in the directories named <code>MyAnalysis1</code> and <code>MyAnalysis2</code>. (The reason for using <code>Makefile.local</code> is to avoid getting in each other's way: everyone can have their own <code>Makefile.local</code>, which is ignored by git).</p>
<p>For cleaning up, use <code>make clean</code>. Cleaning up manually can be done by removing all files in the <code>obj</code> subdirectory (which is the location used by all auto-generated files) and the SFrame libraries, i.e. <code>$SFRAME_DIR/lib/libSUHH2*</code>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#2b-notes-on-cmssw-compilation" id="user-content-2b-notes-on-cmssw-compilation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>2.b. Notes on CMSSW compilation</h3>
<p>You can also compile the CMSSW part by executing</p>
<pre><code>scram b
</code></pre>
<p>in the CMSSW directory yourself instead of using <code>make scram</code> (the main purpose of the latter command is to prevent accidentally forgetting to build the CMSSW part by making the <code>scram</code> the default).</p>
<p>For cleaning up the CMSSW build, run</p>
<pre><code>scram b clean
</code></pre>
<p>(as is usual for CMSSW); note that <code>make clean</code> only cleans up the SFrame compilation, not the CMSSW one.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#notes-for-rereco-94x" id="user-content-notes-for-rereco-94x"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Notes for ReReco 94X</h1>
<p>Pileup data hist (<code>common/data/MyDataPileupHistogram_EOY2017ReReco.root</code>) calculated as:</p>
<pre><code>pileupCalc.py \
-i /afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions17/13TeV/ReReco/Cert_294927-306462_13TeV_EOY2017ReReco_Collisions17_JSON.txt \
--inputLumiJSON /afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions17/13TeV/PileUp/pileup_latest.txt \
--calcMode true --minBiasXsec 69200 --maxPileupBin 100 --numPileupBins 100  \
MyDataPileupHistogram_EOY2017ReReco.root
</code></pre>
<p>The "proper" MC pileup hist is hist (<code>common/data/MyMCPileupHistogram_2017_WinterMC.root</code>) from <a href="https://github.com/cms-sw/cmssw/blob/master/SimGeneral/MixingModule/python/mix_2017_25ns_WinterMC_PUScenarioV1_PoissonOOTPU_cfi.py">https://github.com/cms-sw/cmssw/blob/master/SimGeneral/MixingModule/python/mix_2017_25ns_WinterMC_PUScenarioV1_PoissonOOTPU_cfi.py</a></p>
<p><strong>IMPORTANT:</strong> due to issues when the MC was generated, the number of true interactions may actually be different from this and have peaks at 0, &lt;0, or some specific value. Therefore you should create a MC pileup hist for each sample.</p>

        </div>

    </div>]