[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h3>
<a aria-hidden="true" class="anchor" href="#where-things-go" id="user-content-where-things-go"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Where things go:</h3>
<ul>
<li>helpers.js:
<ul>
<li>Classes and object definitions</li>
<li>Constants, especially URLs</li>
<li>Names and initializations for Handlebars templates</li>
<li>Minor helper functions</li>
</ul>
</li>
<li>all_stops.js:
<ul>
<li>Large Javascript objects such as the raw stop data or a breakdown of routes by line. Should not be modified without good reason.</li>
</ul>
</li>
<li>google_style.js:
<ul>
<li>The Javascript object determining how the Google Maps overlay is styled. Leave this be.</li>
</ul>
</li>
<li>map.js:
<ul>
<li>Main functionality. Breaks down into objects as follows:</li>
<li>app
<ul>
<li>Any HTML5 features that don't fit in other categories. Geolocation, for example, goes here</li>
</ul>
</li>
<li>mapper
<ul>
<li>Anything that interfaces with the Google Maps API goes here.</li>
</ul>
</li>
<li>mbta
<ul>
<li>All code interfacing with the MBTA API goes here.</li>
</ul>
</li>
<li>ui
<ul>
<li>All code that interacts with UI elements other than Google Maps goes here. Avoid putting any logic in here that processes or formats data; keep it to displaying data provided.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#how-to-style-code" id="user-content-how-to-style-code"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>How to style code:</h3>
<p>This is a Javascript app following this coding style:</p>
<ul>
<li>Code should be indented by four spaces per level (avoid tabs)</li>
<li>All closing brackets should be at the same indent level as the corresponding opening bracket</li>
<li>All closing parens should be at the same indent level as the corresponding opening paren (if the parameters extend over multiple lines)</li>
<li>Avoid having multiple brackets/parens open on the same line</li>
<li>Always use single-quoted strings unless the string contains single quotes</li>
<li>Use the function instantiation pattern to create large objects, passing any constants used in the instantiation to that function.</li>
<li>Use camelCase for variable names, JadenCase for class names, and SCREAMING_SNAKE_CASE for constant names.</li>
<li>In HTML, use spinal-case for classes and IDs.</li>
<li>If you find yourself copying and pasting or writing the same thing multiple times, strongly consider a helper function. Always make functions private (defined inside an initializer) unless there's a good reason for it to be public.</li>
<li>DO NOT put functions in the global namespace. Always add them as a member of an object.</li>
<li>DO NOT try to optimize your code unless it becomes necessary. Make sure it works first, then make it work faster if you need to.</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#how-to-contribute" id="user-content-how-to-contribute"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>How to contribute</h3>
<ul>
<li>
<p>Create a new branch from master for your code in the form [issuenumber]-spinal-case-description (e.g. 10-make-stop-selectable)</p>
</li>
<li>
<p>Commit your code to that branch and confirm it works as intended</p>
</li>
<li>
<p>Make a pull request for the branch</p>
</li>
<li>
<p>Wait for the signoff of one of the main contributors (kirocuto or ThePletch)</p>
</li>
<li>
<p>Once you have the signoff, merge the commit to master via console (don't click the merge button on Github - that adds a merge commit and makes our commit history ugly)</p>
</li>
<li>
<p>Commit messages should be single-line and descriptive. If they must be multi-line, use the first line for a general description and put a bulleted list of changes on subsequent lines. e.g.:</p>
</li>
</ul>
<pre><code>Improved appearance of map overlay
* Added prettiness
* Refactored out ugliness
* Removed gross parts
</code></pre>

        </div>

    </div>]