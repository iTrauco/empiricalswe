[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>#Job Posting Aggregator
###By Craig Bryan</p>
<p>Ever find yourself overwhelmed with technologies to learn in your free time? If you're anything like me, you love to learn new technologies and you know that there are a TON to choose to learn. Want to learn a new language? How about Ruby? Go? Python? C#? How do you choose? It gets even more complicated when want to learn something new in a specific domain: Want to learn a new web development skill? How about Sass? Rails? Angular.js? Ember.js? WebGL? Django? Bootstrap? jQuery? The list is long and constantly growing. Unfortunately, we are mere humans who don't have enough time to learn them all. So, you want to pick one that is going to help you later in life – ie get you a job!</p>
<p>That's what this project wants to help you with: what I'm proposing is a job posting aggregator. It will crawl the web, looking for job postings from technology companies, parse the information included within those postings, and provide beautiful interfaces to view that information. So now you'll be able to head to the website and see that Angular.js is much more sought after than Ember.js. Maybe you'll see that there are hundreds of job postings mentioning Go. Maybe you find that there are very few postings looking for people who know Javascript (spoiler – that's not true).</p>
<p>This project is good for a group of people because it has a variety of distinct components: First, the webcrawler component, which would be responsible for scraping raw data from company source. Next, that data needs to be parsed by another component, which would need to figure out which of the raw information is significant and then categorize and store that data. Then we have the web interface for users to browse the information. These three basic components could be implemented completely independently, using totally different technologies (if we so choose) as long at the interfaces between the various components is well-defined and agreed upon.</p>
<p>Let me know what you think about this idea in the Facebook group or in the Google doc. It's an idea that definitely need some focusing and refining, but has a lot of room for growth.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#comments" id="user-content-comments"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Comments</h2>
<p>Definitely like this idea. I’m sure we can discuss later on how to implement the model and how it works. That’s a go for me
Jonathan Guillotte-Blouin</p>

        </div>

    </div>]