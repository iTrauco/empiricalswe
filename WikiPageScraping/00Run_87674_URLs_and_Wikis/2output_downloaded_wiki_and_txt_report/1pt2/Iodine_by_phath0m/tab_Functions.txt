[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Functions can be declared using the <code>func</code> keyword. A function contain a list of statements. In Iodine, control statements are only valid inside functions. Classes, enums, and interfaces however may also be declared inside a function. A function declaration may look like</p>
<div class="highlight highlight-source-go"><pre><span class="pl-k">func</span> <span class="pl-c1">myFunction</span> (a, b) {

}</pre></div>
<p>If the first parameter is named <code>self</code>, then the function is an instance method. Instance methods are typically declared inside classes, however they are also valid outside classes. When calling instances methods, the <code>self</code> parameter is ignored.</p>
<div class="highlight highlight-source-go"><pre><span class="pl-k">func</span> <span class="pl-c1">instanceMethod</span> (self) {

}</pre></div>
<p>Variadic functions are supported by prefixing the last argument with a <code>*</code></p>
<div class="highlight highlight-source-go"><pre><span class="pl-k">func</span> <span class="pl-c1">variadicFunction</span> (*args) {

}</pre></div>
<p>The final parameter will be a tuple containing all extra arguments that were passed to the function.</p>
<p>A function may choose to return a keyword using the <code>return</code> keyword followed by an optional expression. A function that does not explicitly return a value returns <code>null</code> by default.</p>
<p>A function may be expressed as a single expression, when this is the case a function declaration may look like</p>
<div class="highlight highlight-source-go"><pre><span class="pl-k">func</span> <span class="pl-c1">add</span> (a, b) =&gt; a + n;</pre></div>

        </div>

    </div>]