[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#spawn-input-types" id="user-content-spawn-input-types"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Spawn input types</h1>
<p>For a more complete overview of the various properties that inputs can have, see the separate chapter on <a href="spawn-input-properties">Spawn input properties</a>.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#text" id="user-content-text"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>text</h3>
<p>Text fields are the default fields, which means that if you provide no type argument for an input field, it is assumed you want to store plain text.
This text cannot contain any html or formatting, and can be used in any context. Of course it’s utf-8 encoded, so it will probably contain non standard ASCII characters.</p>
<p>What you need at least:</p>
<pre><code>"inputs": {
	"name": {}
}
</code></pre>
<p>Since the text type is assumed by default, it need not be provided. This will result in an unlimited, multiple lined text field, stored as a MySql TEXT column.</p>
<p>If you want to get fancy:</p>
<pre><code>"inputs": {
	"name": {
		"type": "text",
		"maxLength": 124,
		"label": "Your name",
		"info": "Please use your real name"
	}
}
</code></pre>
<p>Setting the maxLength to 124 or less will result in a limited, single-line input field in the cms. Setting it to 255 or less will result in a VARCHAR column in MySql and will thus be more efficient than not limiting it.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#html" id="user-content-html"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>html</h3>
<p>An ‘html’ type input field contains formatted text. If its rich property is true (default), also inline images, videos, lists and custom embeds.</p>
<p>This will render an old-style rich text editor. We also support the recommended CKEditor. In that case, specify <code>"wysiwyg": true</code> or <code>"wysiwyg: "rich"</code>. <a href="ckeditor">For more info, look here.</a></p>
<p>The boolean rich parameter indicates whether this field has fancy formatting features enabled in the cms:</p>
<pre><code>"inputs": {
	"my_sad_story": {
		"type": "html",
		"rich": false
}
}
</code></pre>
<p>Inputs without a provided type, of which the name ends in ‘description’, will be assumed to be html.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#email" id="user-content-email"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>email</h3>
<p>This input only allows valid email addresses.
Inputs without a provided type, of which the name ends in ‘email’, will be assumed to be email.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#url" id="user-content-url"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>url</h3>
<p>This input only allows valid url’s, whether it be http, other protocols, or a mailto reference.
Inputs without a provided type, of which the name ends in ‘url’, will be assumed to be url.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#numeric----integers-n-floats" id="user-content-numeric----integers-n-floats"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>numeric  |  integers ‘n floats</h3>
<p>What you need at least:</p>
<pre><code>"inputs": {
	"my_favorite_number": {
		"type": "numeric"
}
}
</code></pre>
<p>Without any configuration, this will create an input suitable for an int. If you need to store a floating point value, you can set float to true.</p>
<p>If you want to store floating point values:</p>
<pre><code>"inputs": {
	"my_favorite_number": {
		"type": "numeric",
		"float": true
	}
}
</code></pre>
<p>If you want to store signed numbers:</p>
<pre><code>"inputs": {
	"my_favorite_number": {
		"type": "numeric",
		"unsigned": false
	}
}
</code></pre>
<p>Inputs without a provided type, of which the name ends in ‘id’, will be assumed to be numeric.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#checkbox----a-boolean-value" id="user-content-checkbox----a-boolean-value"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>checkbox  |  a boolean value</h3>
<p>A checkbox type input field obviously yields a checkbox in the cms, and is stored as TINYINT in the database. As user input can not be detected, it can’t be made required. But you can set a default value for it.</p>
<pre><code>"inputs": {
	"whether_i_would_like_spam": {
		"type": "checkbox",
		"default": false
	}
}
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#datetime----a-combined-date-and-time-value" id="user-content-datetime----a-combined-date-and-time-value"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>datetime  |  a combined date and time value</h3>
<p>[...]</p>
<h3>
<a aria-hidden="true" class="anchor" href="#date" id="user-content-date"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>date</h3>
<p>[...]
Inputs without a provided type, of which the name ends in ‘date’, will be assumed to be date.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#time" id="user-content-time"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>time</h3>
<p>[...]
Inputs without a provided type, of which the name ends in ‘time’, will be assumed to be time.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#enum----selecting-a-value-from-a-static-list-of-options" id="user-content-enum----selecting-a-value-from-a-static-list-of-options"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>enum  |  selecting a value from a static list of options</h3>
<p>What you need at least:</p>
<pre><code>"inputs": {
	"favorite_sauce": {
		"type": "enum",
		"options": ["aioli", "habanero sauce", "piccalilli"]
	}
}
</code></pre>
<p>The sauce names will be displayed in the cms dropdown selector, as well as be used as enum option value in the database.</p>
<p>If you want to get fancy:</p>
<pre><code>"inputs": {
	"favorite_sauce": {
		"type": "enum",
		"options": {
                "AI": "aioli",
                "HA": "habanero sauce",
                "PI": "piccalilli"
            },
            "maxLength": 14,
            "label": "My favorite sauce",
            "default: "AI"
        }
}
</code></pre>
<p>The sauce names will be displayed in the cms dropdown selector, but the 2 letter sauce code will be stored as the enum value in the database.</p>

        </div>

    </div>]