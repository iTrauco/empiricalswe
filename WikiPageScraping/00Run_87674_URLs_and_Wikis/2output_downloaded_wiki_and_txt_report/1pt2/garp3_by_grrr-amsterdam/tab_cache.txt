[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><a href="cache-client-side">Client-side cache</a></p>
<p><a href="cache-static-html">Enabling static html cache</a></p>
<p><a href="memcache">Memcache</a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#clear-cache" id="user-content-clear-cache"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Clear cache</h2>
<p>You can always clear your local query cache + static html cache on the commandline:</p>
<pre><code>$ php garp/scripts/garp.php cache clear
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#disabling-cache" id="user-content-disabling-cache"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Disabling cache</h2>
<p>There are a couple of ways to affect the cache.</p>
<p>Disable <em>reading</em> from the cache:</p>
<pre><code>Zend_Registry::set('readFromCache', false);
</code></pre>
<p>Disable <em>reading and writing</em> from/to the cache:</p>
<pre><code>Zend_Registry::get('CacheFrontend')-&gt;setOption('caching', false);
</code></pre>
<p>To only remove one model's ability to read/write cache, use:</p>
<pre><code>$model-&gt;unregisterObserver('Cacheable');
</code></pre>
<p>Use one of the first two methods for processes that do a lot of database manipulation. The caching layer would put a strain on the CPU. A better idea is to just forget about caching and clear/write it manually when you're done:</p>
<pre><code>// turn off caching
Zend_Registry::get('CacheFrontend')-&gt;setOption('caching', false);

// do long exhaustive process
while (true) { sleep(1); }

// turn on caching
Zend_Registry::get('CacheFrontend')-&gt;setOption('caching', true);

// clear cache
Garp_Cache_Manager::purge();
</code></pre>
<p>Note that <code>Garp_Cache_Manager</code> respects the <code>caching</code> flag of the frontend. When it is set to <code>false</code>, <code>purge()</code> doesn't act at all. No <code>ClusterClearCache</code> jobs will be created.</p>

        </div>

    </div>]