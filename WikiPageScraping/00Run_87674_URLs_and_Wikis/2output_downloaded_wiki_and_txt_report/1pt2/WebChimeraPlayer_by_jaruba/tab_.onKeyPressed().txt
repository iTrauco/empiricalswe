[<div class="wiki-body gollum-mediawiki-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          
<div class="highlight highlight-source-js"><pre>.<span class="pl-en">onKeyPressed</span>( [<span class="pl-c1">event</span>] , [<span class="pl-k">function</span>] )</pre></div>

<p><b>Description:</b> Catches player key press events.
</p>
<p><br/>
<i> <b>!</b> In order for the key presses to be captured, the player must have focus, to get focus on the player, click it.</i>
</p>
<p><i> <b>!</b> If you wish to use this function from the start, you must use it inside <a class="internal present" href="/jaruba/WebChimeraPlayer/wiki/.qmlLoaded%28%29">.qmlLoaded()</a>.</i>
</p>
<p><i> <b>!</b> In order to prevent the default action of <a href="https://github.com/jaruba/WebChimeraPlayer/wiki/Hotkeys">hotkeys</a>, use <a class="internal present" href="/jaruba/WebChimeraPlayer/wiki/.preventDefault%28%29">.preventDefault()</a>.</i>
</p>
<p><i> <b>!</b> The events that end with "+" are key modifiers, so the event "ctrl+L" refers to when both "ctrl" and "L" are pressed at the same time.</i>
</p>
<p><i> <b>!</b> The "ctrl" event refers to the Control key on Windows and the Command key on Mac OS X.</i>
</p>
<p><i> <b>!</b> The "meta" event refers to the Windows key on Windows and the Control key on Mac OS X.</i>
</p>
<p><br/>
</p>
<h2>
<a aria-hidden="true" class="anchor" href="#events" id="user-content-events"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Events"></a><span>Events</span>
</h2>



<p>List of accepted events: <b>0</b>, <b>1</b>, <b>2</b>, <b>3</b>, <b>4</b>, <b>5</b>, <b>6</b>, <b>7</b>, <b>8</b>, <b>9</b>, <b>a</b>, <b>b</b>, <b>c</b>, <b>d</b>, <b>e</b>, <b>f</b>, <b>g</b>, <b>h</b>, <b>i</b>, <b>j</b>, <b>k</b>, <b>l</b>, <b>m</b>, <b>n</b>, <b>o</b>, <b>p</b>, <b>q</b>, <b>r</b>, <b>s</b>, <b>t</b>, <b>u</b>, <b>v</b>, <b>w</b>, <b>x</b>, <b>y</b>, <b>z</b>, <b>F1</b>, <b>F2</b>, <b>F3</b>, <b>F4</b>, <b>F5</b>, <b>F6</b>, <b>F7</b>, <b>F8</b>, <b>F9</b>, <b>F10</b>, <b>F11</b>, <b>F12</b>, <b>left</b>, <b>up</b>, <b>right</b>, <b>down</b>, <b>plus</b>, <b>minus</b>, <b>equal</b>, <b>bracketLeft</b>, <b>bracketRight</b>, <b>space</b>, <b>esc</b>, <b>shift</b>, <b>ctrl</b>, <b>meta</b>, <b>alt</b>, <b>shift+</b>, <b>ctrl+</b>, <b>meta+</b>, <b>alt+</b>
</p>
<p><br/>
If you have any special request for a specific key that isn't in this list, please mention it <a href="https://github.com/jaruba/WebChimeraPlayer/issues">here</a>.
</p>
<p><br/>
</p>

<h2>
<a aria-hidden="true" class="anchor" href="#example-code" id="user-content-example-code"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Example_Code"></a><span>Example Code</span>
</h2>



<p>There are 2 ways of using .onKeyPressed(), the first way uses the [target] key to attach a function to that specific key, and the second is to attach a function to all key press events and receive a string variable with the key that was pressed. Both of the methods of usage are better explained in the next two examples.
</p>
<p><br/>
In this example, we will disable the default action of the "ctrl+up" and "ctrl+down" (normally volume increase/decrease) and hook different functions that will make the player wrapper have 50% height (if ctrl+up pressed) or 100% height (if ctrl+down pressed).
</p>
<p><br/>
<i>HTML</i>
</p>
<pre lang="html5">&lt;div id="player_wrapper"&gt;&lt;/div&gt;
</pre>

<p><br/>
<i>JavaScript</i>
</p><div class="highlight highlight-source-js"><pre><span class="pl-en">wjs</span>(<span class="pl-s"><span class="pl-pds">"</span>#player_wrapper<span class="pl-pds">"</span></span>).<span class="pl-en">addPlayer</span>({ id<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>webchimera<span class="pl-pds">"</span></span>, theme<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>sleek<span class="pl-pds">"</span></span>, autoplay<span class="pl-k">:</span> <span class="pl-c1">1</span> });

<span class="pl-en">wjs</span>(<span class="pl-s"><span class="pl-pds">"</span>#webchimera<span class="pl-pds">"</span></span>).<span class="pl-en">addPlaylist</span>(<span class="pl-s"><span class="pl-pds">"</span>http://www.youtube.com/watch?v=ja1sjfnfjg0<span class="pl-pds">"</span></span>);

<span class="pl-en">wjs</span>(<span class="pl-s"><span class="pl-pds">"</span>#webchimera<span class="pl-pds">"</span></span>).<span class="pl-en">qmlLoaded</span>(<span class="pl-k">function</span>() {
    <span class="pl-c1">this</span>.<span class="pl-c1">preventDefault</span>(<span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>ctrl+up<span class="pl-pds">"</span></span>,<span class="pl-c1">true</span>).<span class="pl-en">onKeyPressed</span>(<span class="pl-s"><span class="pl-pds">"</span>ctrl+up<span class="pl-pds">"</span></span>,<span class="pl-k">function</span>() {
        <span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(<span class="pl-s"><span class="pl-pds">"</span>player_wrapper<span class="pl-pds">"</span></span>).<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">"</span>style<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>height:50%<span class="pl-pds">"</span></span>);
    });

    <span class="pl-c1">this</span>.<span class="pl-c1">preventDefault</span>(<span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>ctrl+down<span class="pl-pds">"</span></span>,<span class="pl-c1">true</span>).<span class="pl-en">onKeyPressed</span>(<span class="pl-s"><span class="pl-pds">"</span>ctrl+down<span class="pl-pds">"</span></span>,<span class="pl-k">function</span>() {
        <span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(<span class="pl-s"><span class="pl-pds">"</span>player_wrapper<span class="pl-pds">"</span></span>).<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">"</span>style<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>height:100%<span class="pl-pds">"</span></span>);
    });
});</pre></div>

<p><br/>
</p>
<p>In this example, we will attach a function to all key press events and print the key (or combination of keys) to a html span element.
</p>
<p><br/>
<i>HTML</i>
</p>
<pre lang="html5">&lt;div style="height: 10%"&gt;&lt;span id="textbox" style="display:block; padding:5px; background: #ecebeb; color: #333"&gt;Key Events&lt;/span&gt;&lt;/div&gt;
&lt;div id="player_wrapper" style="height: 90%"&gt;&lt;/div&gt;
</pre>

<p><br/>
<i>JavaScript</i>
</p><div class="highlight highlight-source-js"><pre><span class="pl-en">wjs</span>(<span class="pl-s"><span class="pl-pds">"</span>#player_wrapper<span class="pl-pds">"</span></span>).<span class="pl-en">addPlayer</span>({ id<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>webchimera<span class="pl-pds">"</span></span>, theme<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>sleek<span class="pl-pds">"</span></span>, autoplay<span class="pl-k">:</span> <span class="pl-c1">1</span> });

<span class="pl-en">wjs</span>(<span class="pl-s"><span class="pl-pds">"</span>#webchimera<span class="pl-pds">"</span></span>).<span class="pl-en">addPlaylist</span>(<span class="pl-s"><span class="pl-pds">"</span>http://archive.org/download/CrayonDragonAnAnimatedShortFilmByTonikoPantoja/Crayon%20Dragon%20-%20An%20animated%20short%20film%20by%20Toniko%20Pantoja.mp4<span class="pl-pds">"</span></span>);

<span class="pl-k">var</span> span <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(<span class="pl-s"><span class="pl-pds">"</span>textbox<span class="pl-pds">"</span></span>);

<span class="pl-en">wjs</span>(<span class="pl-s"><span class="pl-pds">"</span>#webchimera<span class="pl-pds">"</span></span>).<span class="pl-en">qmlLoaded</span>(<span class="pl-k">function</span>() {
    <span class="pl-c1">this</span>.<span class="pl-en">onKeyPressed</span>(<span class="pl-k">function</span>(<span class="pl-smi">key</span>) {
        <span class="pl-smi">span</span>.<span class="pl-smi">innerHTML</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>You Pressed: <span class="pl-pds">"</span></span><span class="pl-k">+</span>key;
    });
});</pre></div>
        </div>

    </div>]