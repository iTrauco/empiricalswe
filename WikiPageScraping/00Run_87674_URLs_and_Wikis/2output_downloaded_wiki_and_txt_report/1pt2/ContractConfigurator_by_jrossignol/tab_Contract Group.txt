[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#table-of-contents" id="user-content-table-of-contents"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Table of Contents</h2>
<ul>
<li><a class="internal present" href="/jrossignol/ContractConfigurator/wiki/Contract-Group#table-of-contents">Table of Contents</a></li>
<li><a class="internal present" href="/jrossignol/ContractConfigurator/wiki/Contract-Group#the-contract_group-node">The CONTRACT_GROUP node</a></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#the-contract_group-node" id="user-content-the-contract_group-node"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>The CONTRACT_GROUP node</h2>
<p>The CONTRACT_GROUP node provides grouping for multiple Contract Configurator contracts, and allows some common attributes to be set across those groups.</p>
<pre><code>CONTRACT_GROUP
{
    // Name of the contract group
    name = ContractGroup

    // Name that is displayed in the settings window (if not supplied,
    // defaulted to the name).
    displayName = The Contract Group

    // Key to use when sorting child groups in mission control.  Use this
    // if you want your contract groupss to appear in a different order.
    // Because this defaults to the displayName, the default sort is
    // alphabetical.  If you try to use numbers, they will sort alphabetically
    // (10 will come before 2, 20 will come before 3, etc.).
    //
    // Type:      &lt;a href="String-Type"&gt;string&lt;/a&gt;
    // Required:  No (defaults to the displayName)
    //
    sortKey = A string to give an alternate sort order

    // Agent (agency).  It is highly recommended to create and provide a
    // custom agent, as it is used to group and display contracts in
    // Mission Control.
    agent = Integrated Integrals

    // Use this to specify the minimum version of Contract Configurator
    // That is required to run contracts in this group.
    minVersion = 0.7.0

    // The maximum number of times that contracts within this contract
    // group can be completed (0 being unlimited).
    // Default = 0
    maxCompletions = 3

    // The maximum instances of this contract within this contract group
    // that can be active at one time (0 being unlimited).
    // Default = 0
    maxSimultaneous = 1

    // List any contract types to disable as part of this contract group.
    // Multiple values can be provided.  These can be a Contract Configurator
    // CONTRAC_TYPE name, a stock contract type class name, or a mod contract
    // type class name.
    disabledContractType = ARMContract

    // Custom loading tip to add for the mod.  To match with the stock tips,
    // should use camel case and be followed by an ellipsis.  Can be specified
    // multiple times.
    tip = Customizing Loading Tips...

    // Contract groups may also be nested - all the same attributes can be
    // used in the child groups.  Values like maxCompletions and
    // maxSimultaneous apply to all contracts in the group and all child
    // groups.
    CONTRACT_GROUP
    {
        // Name of the contract group
        name = ChildGroup

        // A child group with fewer completions allowed than the parent.
        maxCompletions = 1
    }

    // The DATA node is a special node that is not used by contracts
    // or parameters directly, but provide storage for generic values
    // that can be used as part of expressions.
    DATA
    {
        type = CelestialBody

        // This would be accessiable to any contracts in the ContractGroup
        // or ChildGroup groups by using:
        // @ContractGroup:orbitedBodyWithSurface
        orbitedBodyWithSurface = OrbitedBodies().Where(cb =&gt; cb.HasSurface())
    }

}
</code></pre>

        </div>

    </div>]