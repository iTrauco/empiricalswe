[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Ethereum (++) is the C++ proof-of-concept Ethereum command-line client. There is also a proof-of-concept Ethereum Qt-based client; you might want to see <a class="internal present" href="/imapp-pl/cpp-ethereum/wiki/Using-AlethZero">Using-AlethZero</a>.</p>
<p>Ethereum (++) can be executed by typing <code>eth</code>. It has several command-line switches to customise its behaviour, but in general it will attempt to connect to another peer or seed-node (they're the same thing, really), then become a functioning node in the network, collect transactions, blocks and peers and mining new blocks.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#usage" id="user-content-usage"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Usage</h3>
<pre><code>eth [OPTIONS] &lt;remote-host&gt;
Options:
    -a,--address &lt;addr&gt;  Set the coinbase (mining payout) address to addr (default: auto).
    -c,--client-name &lt;name&gt;  Add a name to your client's version string (default: blank).
    -d,--db-path &lt;path&gt;  Load database from path (default:  ~/.ethereum
                         &lt;APPDATA&gt;/Etherum or Library/Application Support/Ethereum).
    -h,--help  Show this help message and exit.
    -i,--interactive  Enter interactive mode (default: non-interactive).
    -l,--listen &lt;port&gt;  Listen on the given port for incoming connected (default: 30303).
    -m,--mining &lt;on/off/number&gt;  Enable mining, optionally for a specified number of blocks (Default: off)
    -n,--upnp &lt;on/off&gt;  Use upnp for NAT (default: on).
    -o,--mode &lt;full/peer&gt;  Start a full node or a peer node (Default: full).
    -p,--port &lt;port&gt;  Connect to remote port (default: 30303).
    -r,--remote &lt;host&gt;  Connect to remote host (default: none).
    -s,--secret &lt;secretkeyhex&gt;  Set the secret key for use with send command (default: auto).
    -u,--public-ip &lt;ip&gt;  Force public ip to given (default; auto).
    -v,--verbosity &lt;0 - 9&gt;  Set the log verbosity from 0 to 9 (Default: 8).
    -x,--peers &lt;number&gt;  Attempt to connect to given number of peers (Default: 5).
    -V,--version  Show the version and exit.
</code></pre>
<p>Note that</p>
<h3>
<a aria-hidden="true" class="anchor" href="#starting-a-peer-server" id="user-content-starting-a-peer-server"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Starting a Peer Server</h3>
<pre><code>/path/to/eth -m off -o peer -u 65.78.90.42 -x 256
</code></pre>
<p>This starts the node as a peer-server with internet-visible IP 65.78.90.42, able to accept up to 256 peers and share connection information between them. As more than 256 peers get connected, the older peers (that have had a chance to gather peer information of their own) will get disconnected to make way for the newer crowd.</p>
<pre><code>/path/to/eth -u 192.168.0.5 -p 30301 192.168.0.10
</code></pre>
<p>This starts a full node on the local client (whose IP is 192.168.0.5) and attempts to connect the LAN peer 192.168.0.10 on port 30301.</p>
<pre><code>cd /tmp
mkdir client1
/path/to/eth -d client1 -u 127.0.0.1 -l 30303 &amp;
mkdir client2
/path/to/eth -d client2 -u 127.0.0.1 -l 30300 -p 30303 127.0.0.1
</code></pre>
<p>This creates two full clients on the same host, possible because the databases are stored in different paths, and connects them together. One listens on the local host on port 30303, and the other on 30300.</p>

        </div>

    </div>]