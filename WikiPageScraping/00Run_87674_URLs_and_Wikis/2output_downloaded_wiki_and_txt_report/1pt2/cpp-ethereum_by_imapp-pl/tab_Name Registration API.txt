[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h3>
<a aria-hidden="true" class="anchor" href="#api" id="user-content-api"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>API</h3>
<p>The interface has several calls and uses the 32-byte string method-name calling convention to differentiate between them.</p>
<p>All strings are assumed to be 32-bytes maximum length.</p>
<p>Registering a name is conducted with <code>register</code>, you can remove an existing name you registered with <code>unregister</code>. Calling the contract with a single argument returns the look up of that name/address.</p>
<ul>
<li>
<code>"register" &lt;name&gt;</code> Associates the calling address with <code>&lt;name&gt;</code>. If <code>&lt;name&gt;</code> already exists this fails. If calling address already has a name attached, that name is unregistered first (and thus becomes free for others to register).</li>
<li>
<code>"unregister"</code> Removes any name association from the calling address, freeing up any previously associated name for others to use.</li>
<li>
<code>&lt;address&gt;</code> Returns the name associated with <code>&lt;address&gt;</code> (if any).</li>
<li>
<code>&lt;name&gt;</code> Returns the address associated with <code>&lt;name&gt;</code> (if any).</li>
</ul>

        </div>

    </div>]