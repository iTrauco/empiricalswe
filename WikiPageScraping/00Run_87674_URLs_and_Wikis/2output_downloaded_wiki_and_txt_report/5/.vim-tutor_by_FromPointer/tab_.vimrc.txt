[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>##This is a file about .vim config.</p>
<p>####* Usage
In the home directory, new file .vimrc, and then copy the following contents to the file.</p>
<p>####* The configuration is as following:</p>
<pre><code>" Vim config file.

" Global Settings: {{{
call pathogen#infect()              " use pathogen to manage plugins
syntax on                           " highlight syntax
filetype plugin indent on           " auto detect file type
filetype plugin on 


set nocompatible                    " out of Vi compatible mode
set number                          " show line number
set numberwidth=3                   " minimal culumns for line numbers
set textwidth=0                     " do not wrap words (insert)
set nowrap                          " do not wrap words (view)
set showcmd                         " show (partial) command in status line
set ruler                           " line and column number of the cursor position
set wildmenu                        " enhanced command completion
set wildmode=list:longest,full      " command completion mode
set laststatus=2                    " always show the status line
set mouse=a                         " use mouse in all mode
set foldenable                      " fold lines
set foldmethod=marker               " fold as marker 
set noerrorbells                    " do not use error bell
set novisualbell                    " do not use visual bell
set t_vb=                           " do not use terminal bell

set wildignore=.svn,.git,*.swp,*.bak,*~,*.o,*.a
set autowrite                       " auto save before commands like :next and :make
set hidden                          " enable multiple modified buffers
set history=100                     " record recent used command history
set autoread                        " auto read file that has been changed on disk
set backspace=indent,eol,start      " backspace can delete everything
set completeopt=menuone,longest     " complete options (insert)
set pumheight=10                    " complete popup height
set scrolloff=5                     " minimal number of screen lines to keep beyond the cursor
set autoindent                      " automatically indent new line
set cinoptions=:0,l1,g0,t0,(0,(s    " C kind language indent options

set tabstop=4                       " number of spaces in a tab
set softtabstop=4                   " insert and delete space of &lt;tab&gt;
set shiftwidth=4                    " number of spaces for indent
set expandtab                       " expand tabs into spaces
set incsearch                       " incremental search
set hlsearch                        " highlight search match
set ignorecase                      " do case insensitive matching
set smartcase                       " do not ignore if search pattern has CAPS
set nobackup                        " do not create backup file
set noswapfile                      " do not create swap file
set backupcopy=yes                  " overwrite the original file

set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=gb2312,utf-8,gbk
set fileformat=unix

set background=dark
colorscheme vividchalk

" gui settings
if has("gui_running")
    set guioptions-=T " no toolbar
    set guioptions-=r " no right-hand scrollbar
    set guioptions-=R " no right-hand vertically scrollbar
    set guioptions-=l " no left-hand scrollbar
    set guioptions-=L " no left-hand vertically scrollbar
    autocmd GUIEnter * simalt ~x " window width and height
    source $VIMRUNTIME/delmenu.vim " the original menubar has an error on win32, so
    source $VIMRUNTIME/menu.vim    " use this menubar
    language messages zh_CN.utf-8 " use chinese messages if has
endif

" Restore the last quit position when open file.
autocmd BufReadPost *
    \ if line("'\"") &gt; 0 &amp;&amp; line("'\"") &lt;= line("$") |
    \     exe "normal g'\"" |
    \ endif
"}}}

" Key Bindings: {{{
let mapleader = ","
let maplocalleader = "\\"

" map : -&gt; &lt;space&gt;
map &lt;Space&gt; :

" move between windows
nmap &lt;C-h&gt; &lt;C-w&gt;h
nmap &lt;C-j&gt; &lt;C-w&gt;j
nmap &lt;C-k&gt; &lt;C-w&gt;k
nmap &lt;C-l&gt; &lt;C-w&gt;l

" Don't use Ex mode, use Q for formatting
map Q gq

"make Y consistent with C and D
nnoremap Y y$

" toggle highlight trailing whitespace
nmap &lt;silent&gt; &lt;leader&gt;l :set nolist!&lt;CR&gt;

" Ctrol-E to switch between 2 last buffers
nmap &lt;C-E&gt; :b#&lt;CR&gt;

" ,e to fast finding files. just type beginning of a name and hit TAB
nmap &lt;leader&gt;e :e **/

" Make shift-insert work like in Xterm
map &lt;S-Insert&gt; &lt;MiddleMouse&gt;
map! &lt;S-Insert&gt; &lt;MiddleMouse&gt;

" ,n to get the next location (compilation errors, grep etc)
nmap &lt;leader&gt;n :cn&lt;CR&gt;
nmap &lt;leader&gt;p :cp&lt;CR&gt;

" Ctrl-N to disable search match highlight
nmap &lt;silent&gt; &lt;C-N&gt; :silent noh&lt;CR&gt;

" center display after searching
nnoremap n   nzz
nnoremap N   Nzz
nnoremap *   *zz
nnoremap #   #zz
nnoremap g*  g*zz
nnoremap g#  g#z
"}}}

" Plugin Settings: {{{
if has("win32") " win32 system
    let $HOME  = $VIM
    let $VIMFILES = $HOME . "/vimfiles"
else " unix
    let $HOME  = $HOME
    let $VIMFILES = $HOME . "/.vim"
endif

" mru
let MRU_Window_Height = 10
nmap &lt;Leader&gt;r :MRU&lt;cr&gt;

" taglist
let g:Tlist_WinWidth = 25
let g:Tlist_Use_Right_Window = 0
let g:Tlist_Auto_Update = 1
let g:Tlist_Process_File_Always = 1
let g:Tlist_Exit_OnlyWindow = 1
let g:Tlist_Show_One_File = 1
let g:Tlist_Enable_Fold_Column = 0
let g:Tlist_Auto_Highlight_Tag = 1
let g:Tlist_GainFocus_On_ToggleOpen = 1
nmap &lt;Leader&gt;t :TlistToggle&lt;cr&gt;

" nerdtree
let g:NERDTreeWinPos = "right"
let g:NERDTreeWinSize = 30
let g:NERDTreeShowLineNumbers = 1
let g:NERDTreeQuitOnOpen = 1
nmap &lt;Leader&gt;f :NERDTreeToggle&lt;CR&gt;
nmap &lt;Leader&gt;F :NERDTreeFind&lt;CR&gt;

" snipMate
let g:snip_author   = "Jeffy Du"
let g:snip_mail     = "jeffy.du@163.com"
let g:snip_company  = "SIC Microelectronics CO. Ltd"

" man.vim - view man page in VIM
source $VIMRUNTIME/ftplugin/man.vim

" cscope
nmap &lt;leader&gt;ss :cs find s &lt;C-R&gt;=expand("&lt;cword&gt;")&lt;cr&gt;&lt;cr&gt;
nmap &lt;leader&gt;sg :cs find g &lt;C-R&gt;=expand("&lt;cword&gt;")&lt;cr&gt;&lt;cr&gt;
nmap &lt;leader&gt;sc :cs find c &lt;C-R&gt;=expand("&lt;cword&gt;")&lt;cr&gt;&lt;cr&gt;
nmap &lt;leader&gt;st :cs find t &lt;C-R&gt;=expand("&lt;cword&gt;")&lt;cr&gt;&lt;cr&gt;
nmap &lt;leader&gt;se :cs find e &lt;C-R&gt;=expand("&lt;cword&gt;")&lt;cr&gt;&lt;cr&gt;
nmap &lt;leader&gt;sf :cs find f &lt;C-R&gt;=expand("&lt;cfile&gt;")&lt;cr&gt;&lt;cr&gt;
nmap &lt;leader&gt;si :cs find i &lt;C-R&gt;=expand("&lt;cfile&gt;")&lt;cr&gt;&lt;cr&gt;
nmap &lt;leader&gt;sd :cs find d &lt;C-R&gt;=expand("&lt;cword&gt;")&lt;cr&gt;&lt;cr&gt;

" vimgdb.vim
if has("gdb")
	set asm=0
	let g:vimgdb_debug_file=""
	run macros/gdb_mappings.vim
endif
let Tlist_Ctags_Cmd='/usr/bin/ctags'

" js_compl_fn
let g:nodejs_complete_config = {
            \  'js_compl_fn': 'jscomplete#CompleteJS',
            \  'max_node_compl_len': 15
            \}


" runtimepath^=~/.vim/bundle/node


"  winManger 
map &lt;c-w&gt;&lt;c-f&gt; :FirstExplorerWindow&lt;cr&gt; 
map &lt;c-w&gt;&lt;c-b&gt; :BottomExplorerWindow&lt;cr&gt; 
map &lt;c-w&gt;&lt;c-t&gt; :WMToggle&lt;cr&gt; 
let g:winManagerWindowLayout = 'FileExplorer|TagList'
nmap wm :WMToggle&lt;cr&gt;


let g:ycm_global_ycm_extra_conf = "~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py"

let g:ycm_key_list_select_completion=[]
let g:ycm_key_list_previous_completion=[]
</code></pre>

        </div>

    </div>]