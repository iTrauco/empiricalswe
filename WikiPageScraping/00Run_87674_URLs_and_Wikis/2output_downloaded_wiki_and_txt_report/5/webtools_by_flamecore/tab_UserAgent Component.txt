[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Browser detection for PHP. It uses a simple and fast algorithm to recognize major browsers.</p>
<p>This component was part of this library in versions prior to 2.0. It is now deprecated in favor of the external <a href="https://github.com/FlameCore/UserAgent">UserAgent</a> project.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#why-you-should-use-it" id="user-content-why-you-should-use-it"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Why you should use it</h2>
<p>PHP provides a native function to detect the user browser: <a href="http://php.net/get_browser" rel="nofollow">get_browser()</a>. This function requires the browscap.ini file which is 300KB+ in size. Loading and processing this file impacts the script performance. And sometimes, the production server just doesn't provide browscap.ini.</p>
<p>Although get_browser() surely provides excellent detection results, in most cases a much simpler method can be just as effective. Webtools UserAgent has the advantage of being compact and easy to extend. It is performant as well, since it doesn't do any iteration or recursion.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#usage" id="user-content-usage"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Usage</h2>
<p>Include the classes or rely on Composer's autoloader. Then create the <code>UserAgent</code> object.</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-k">use</span> <span class="pl-c1">FlameCore\Webtools\UserAgent</span>;</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> Create a user agent object</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">UserAgent</span>();</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> Interrogate the user agent</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span><span class="pl-k">-&gt;</span>getBrowserName();      <span class="pl-c"><span class="pl-c">//</span> firefox</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span><span class="pl-k">-&gt;</span>getBrowserVersion();   <span class="pl-c"><span class="pl-c">//</span> 3.6</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span><span class="pl-k">-&gt;</span>getBrowserEngine();    <span class="pl-c"><span class="pl-c">//</span> gecko</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span><span class="pl-k">-&gt;</span>getOperatingSystem();  <span class="pl-c"><span class="pl-c">//</span> linux</span></span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#advanced" id="user-content-advanced"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Advanced</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#custom-user-agent-string" id="user-content-custom-user-agent-string"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Custom user agent string</h3>
<p>When you create a <code>UserAgent</code> object, the current user agent string is used. You can specify another user agent string:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> use another user agent string</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">UserAgent</span>(<span class="pl-s"><span class="pl-pds">'</span>msnbot/2.0b (+http://search.msn.com/msnbot.htm)<span class="pl-pds">'</span></span>);</span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span><span class="pl-k">-&gt;</span>getBrowserName(); <span class="pl-c"><span class="pl-c">//</span> msnbot</span></span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> use current user agent string</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">UserAgent</span>(<span class="pl-smi">$_SERVER</span>[<span class="pl-s"><span class="pl-pds">'</span>HTTP_USER_AGENT<span class="pl-pds">'</span></span>]);</span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> which is equivalent to:</span></span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">UserAgent</span>();</span></pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#custom-parser-class" id="user-content-custom-parser-class"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Custom parser class</h3>
<p>By default, the class <code>UserAgentStringParser</code> is used to analyze the user agent string. You can replace the parser instance and customize it to match your needs:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> create a custom user agent string parser</span></span>
<span class="pl-s1"><span class="pl-k">class</span> <span class="pl-en">MyUserAgentStringParser</span> <span class="pl-k">extends</span> <span class="pl-e">UserAgentStringParser</span></span>
<span class="pl-s1">{</span>
<span class="pl-s1">    <span class="pl-c"><span class="pl-c">//</span> override methods</span></span>
<span class="pl-s1">}</span>
<span class="pl-s1"></span>
<span class="pl-s1"><span class="pl-c"><span class="pl-c">//</span> inject the custom parser when creating a user agent:</span></span>
<span class="pl-s1"><span class="pl-smi">$parser</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">MyUserAgentStringParser</span>();</span>
<span class="pl-s1"><span class="pl-smi">$userAgent</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">UserAgent</span>(<span class="pl-c1">null</span>, <span class="pl-smi">$parser</span>);</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#contributing" id="user-content-contributing"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Contributing</h2>
<p>If you found a browser or operating system this library fails to recognize, feel free to submit an issue. Please provide the user agent string. And well, if you also want to provide the patch, that's even better.</p>

        </div>

    </div>]