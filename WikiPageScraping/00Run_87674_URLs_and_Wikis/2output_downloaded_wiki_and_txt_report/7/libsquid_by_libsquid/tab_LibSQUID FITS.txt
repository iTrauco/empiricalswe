[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The LibSQUID FITS package provides two application programs; <strong>squidfits</strong> and <strong>squidmerge</strong>.</p>
<p>The <strong>squidfits</strong> utility takes any FITS image with a valid WCS header and breaks it up into
[SQUID Tile](SQUID Index) images at a specified [resolution level](Resolution Level).
The original image is re-projected onto one of the four
quad-cube projections supported by the LibSQUID Library.  Each of the SQUID tile images is updated
with a new WCS header relative to that tile and additional information like the image center and coverage
percentage.  As some of the resulting SQUID tile images won't be fully populated,
[image compression](FITS Compression)
is necessary to make sure unnecessary space isn't consumed by the system.  The squidfits utility also
supports four types of <a href="Interpolation">interpolation</a>; nearest, bilinear, cubic spline, and cubic convolution.
When run without arguments, squidfits produces the following help message:</p>
<blockquote>
<p>Example usage...<br/>
squidfits [args] infile.fit</p>
</blockquote>
<pre><code>    -c              compress fits output images.  
    -i ival         interpolation type:  
                    0 = Nearest neighbor  
                    1 = Bilinear (default)  
                    2 = Cubic spline  
                    3 = Cubic convolution  
    -m fname_mask   filename of mask.  
    -p              projection type:  
                    0 = TSC  
                    1 = CSC  
                    2 = QSC  
                    3 = HSC (default)  
    -b              output image data type (new for v0.6)
                    1 = int16
                    2 = uint16
                    3 = int32
                    4 = uint32
                    5 = float
                    6 = double (default)
    -r rval         tile resolution parameter, default 3.  
    -t tval         # pix on side of tile, calculated if not set.    
</code></pre>
<p>The <strong>squidmerge</strong> utility takes a list of SQUID tile images and merges them.  It will take the first
tile image in the list of arguments and add any non-zero pixels from the next image in the list
to any zero valued pixels in the original image.  The same is then done for each of the subsequent
images in the argument list.  When called without arguments, squidmerge produces a very simple
help message.</p>
<blockquote>
<p>Calling sequence: squidmerge infile1 ... infileN outfile</p>
</blockquote>

        </div>

    </div>]