[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>$E2 <strong>RELOC</strong> - This is a relocation record, used in the relocation dictionary of a load segment. It is used to patch an address in a load segment with a reference to another address in the same load segment. It contains two 1-byte counts followed by two offsets. The first count is the number of bytes to be relocated, and the second count is a bit-shift operator, telling how many times to shift the relocated address before inserting the result into memory. If the bit-shift operator is positive, then the number is shifted to the left, filling vacated bit positions with 0’s. If the bit-shift operator is negative, then the number is shifted right.</p>
<p>The first offset gives the location (relative to the start of the segment) of the number that is to be relocated. The second offset is the location of the reference relative to the start of the segment; that is, it is the value that the number would have if the segment it’s in started at address $000000. For example, suppose the segment includes the following lines:</p>
<pre><code>$0035 label anop
...
$0400       lda label+4
</code></pre>
<p>which corresponds to the following values:</p>
<table>
<thead>
<tr>
<th align="left"></th>
<th align="left"></th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">$E2</td>
<td align="left">operation code</td>
</tr>
<tr>
<td align="left">$02</td>
<td align="left">number of bytes to be relocated</td>
</tr>
<tr>
<td align="left">$00</td>
<td align="left">bit-shift operator</td>
</tr>
<tr>
<td align="left">$00000401</td>
<td align="left">offset of value from start of segment</td>
</tr>
<tr>
<td align="left">$00000039</td>
<td align="left">value if segment started at $000000</td>
</tr>
</tbody>
</table>
<p>Certain types of arithmetic expressions are illegal in a relocatable segment. Specifically, any expression that cannot be evaluated (relative to the start of the segment) by the assembler cannot be used. The expression <code>LAB|4</code> can be evaluated, for example, since the <a class="internal present" href="/ksherlock/java-libomf/wiki/RELOC">RELOC</a> record includes a bit-shift operator; however <code>LAB|4+4</code> cannot be used, because the assembler would have to know the absolute value of <code>LAB</code> in order to perform the bit-shift operation <em>before</em> adding 4 to it. Similarly, the value of <code>LAB*4</code> depends on the absolute value of <code>LAB</code>, and cannot be evaluated relative to the start of the segment, so multiplication is illegal in expressions in relocatable segments.</p>

        </div>

    </div>]