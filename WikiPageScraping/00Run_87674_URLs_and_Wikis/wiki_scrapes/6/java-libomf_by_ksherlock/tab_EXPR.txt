[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>$EB <strong>EXPR</strong> - The first operand byte is the number of bytes to generate, and is &lt;= <code>NUMLEN</code>. This is followed by a reverse polish notation expression. Operators include:</p>
<table>
<thead>
<tr>
<th align="left">Operator</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">$00</td>
<td align="left">end of expression</td>
</tr>
<tr>
<td align="left">$01</td>
<td align="left">signed integer add</td>
</tr>
<tr>
<td align="left">$02</td>
<td align="left">signed integer subtract</td>
</tr>
<tr>
<td align="left">$03</td>
<td align="left">signed integer multiply</td>
</tr>
<tr>
<td align="left">$04</td>
<td align="left">signed integer divide</td>
</tr>
<tr>
<td align="left">$05</td>
<td align="left">modulo operation</td>
</tr>
<tr>
<td align="left">$06</td>
<td align="left">arithmetic negation</td>
</tr>
<tr>
<td align="left">$07</td>
<td align="left">signed bit shift operator</td>
</tr>
<tr>
<td align="left">$08</td>
<td align="left">logical and</td>
</tr>
<tr>
<td align="left">$09</td>
<td align="left">logical or</td>
</tr>
<tr>
<td align="left">$0A</td>
<td align="left">logical eor</td>
</tr>
<tr>
<td align="left">$0B</td>
<td align="left">logical not</td>
</tr>
<tr>
<td align="left">$0C</td>
<td align="left">logical &lt;=</td>
</tr>
<tr>
<td align="left">$0D</td>
<td align="left">logical &gt;=</td>
</tr>
<tr>
<td align="left">$0E</td>
<td align="left">logical &lt;&gt;</td>
</tr>
<tr>
<td align="left">$0F</td>
<td align="left">logical &lt;</td>
</tr>
<tr>
<td align="left">$10</td>
<td align="left">logical &gt;</td>
</tr>
<tr>
<td align="left">$11</td>
<td align="left">logical =</td>
</tr>
<tr>
<td align="left">$12</td>
<td align="left">bit and</td>
</tr>
<tr>
<td align="left">$13</td>
<td align="left">bit or</td>
</tr>
<tr>
<td align="left">$14</td>
<td align="left">bit eor</td>
</tr>
<tr>
<td align="left">$15</td>
<td align="left">bit not</td>
</tr>
</tbody>
</table>
<p>Operands are</p>
<table>
<thead>
<tr>
<th align="left">Operand</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">$80</td>
<td align="left">current location counter</td>
</tr>
<tr>
<td align="left">$81</td>
<td align="left">
<code>ABS</code> - followed by a <code>NUMLEN</code> byte absolute value</td>
</tr>
<tr>
<td align="left">$82</td>
<td align="left">
<code>WEAK</code> - followed by a <code>NUMLEN</code> byte weak reference label name</td>
</tr>
<tr>
<td align="left">$83</td>
<td align="left">reference to a <code>LABLEN</code> byte label in the operand, resolves as the label value</td>
</tr>
<tr>
<td align="left">$84</td>
<td align="left">length attribute of the following <code>LABLEN</code> byte label</td>
</tr>
<tr>
<td align="left">$85</td>
<td align="left">type attribute of the following <code>LABLEN</code> byte label</td>
</tr>
<tr>
<td align="left">$86</td>
<td align="left">count attribute of the following <code>LABLEN</code> byte label</td>
</tr>
<tr>
<td align="left">$87</td>
<td align="left">
<code>REL</code> - followed by a <code>NUMLEN</code> byte displacement from the start of the current module</td>
</tr>
</tbody>
</table>

        </div>

    </div>]