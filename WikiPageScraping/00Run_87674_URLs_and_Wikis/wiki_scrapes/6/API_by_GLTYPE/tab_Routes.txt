[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#here-are-all-the-routes-for-the-api-and-all-their-args-with-their-method-" id="user-content-here-are-all-the-routes-for-the-api-and-all-their-args-with-their-method-"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Here are all the routes for the API and all their args with their method :</h1>
<p><strong>!!! EVERY PUT / POST / DELETE REQUEST (except '/connect') NEED A TOKEN SENT WHEN CONNECTING !!!</strong></p>
<p>POST to '/ingredients' : create user : name, picture, description, faith, values</p>
<p>PUT to '/ingredients/:id' : edit user : name, picture, description, faith, values</p>
<p>Only name mandatory</p>
<p>faith : list of faith</p>
<p>values : calories</p>
<p>POST to '/products' : create product : name, picture, description, brand, ings, value</p>
<p>PUT to '/products/:id' : name, picture, description, brand, ings, value</p>
<p>Only name mandatory</p>
<p>value : calories</p>
<p>ings : list of ingredient</p>
<p>POST to '/receipes' : create receipe : The same as product without brand</p>
<p>PUT to '/receipes/:id' : edit receipe : The same as product without brand</p>
<p>POST to '/moments' : create moment : name, description, target_id, date, picture</p>
<p>PUT to '/moments/:id' : edit moment : name, description, target_id, date, picture</p>
<p>Everything mandatory except the picture</p>
<p>POST to '/comments' : create moment : comment, target_id, date, type</p>
<p>PUT to '/comments/:id' : edit moment : description, target_id, date, type</p>
<p>Everything mandatory except the picture</p>
<p>POST to '/users' : create user : firstname, lastname, picture, email, about, role, password</p>
<p>PUT to '/users/:id' : edit user : firstname, lastname, picture, email, about, password</p>
<p>firstname - lastname - email : between 1 and 50 characteres</p>
<p>passowrd :  between 8 and 20 characteres</p>
<p>role : 1 = consumer / 2 = food supplier / 3 = gastronomist / 4 = admin</p>
<p>about - picture : not mandatory</p>
<p>POST to '/users/connect' : connect : RETURN THE TOKEN YOU NEED TO SAVE FOR EVERY REQUEST</p>
<p>POST to '/users/disconnect' : disconnect : REMOVE THE TOKEN IN BDD (you have to remove the token in the
session if doesn't fail)</p>
<p>DELETE to '/ingredients/:id'</p>
<p>DELETE to '/products/:id'</p>
<p>DELETE to '/receipes/:id'</p>
<p>DELETE to '/moments/:id'</p>
<p>DELETE to '/comments/:id'</p>
<p>DELETE request just need the token and don't return anything in case of succes (code 204)</p>
<p>PUT request need some args (see up) and sent back the user in json + code 200 in succes</p>
<p>POST request need some args (see up) and sent back the user in json + code 201 in succes</p>
<p>GET doesn't need any args except URL variable :</p>
<p>app.get('/ingredients/:id', Ingredient.getIngredientById);</p>
<p>app.get('/ingredients/name/:name', Ingredient.getIngredientByName);</p>
<p>app.get('/ingredients/:id/values', Ingredient.getIngredientValues);</p>
<p>app.get('/products/:id', Product.getProductById);</p>
<p>app.get('/products/name/:name', Product.getProductByName);</p>
<p>app.get('/products/ingredient/:name', Product.getProductByIngredientName);</p>
<p>app.get('/receipes/:id', Receipe.getReceipeById);</p>
<p>app.get('/receipes/name/:name', Receipe.getReceipeByName);</p>
<p>app.get('/moments/:id', Moment.getMomentById);</p>
<p>app.get('/moments/owner/:id', Moment.getMomentByOwnerId);</p>
<p>app.get('/moments/target/:id', Moment.getMomentByTargetId);</p>
<p>app.get('/comments', Comment.getAllComments);</p>
<p>app.get('/comments/:id', Comment.getCommentById);</p>
<p>app.get('/comments/owner/:id/type/:type', Comment.getCommentByOwnerId);</p>
<p>app.get('/comments/target/:id/type/:type', Comment.getCommentByTargetId);</p>
<p>getCommentByTargetId will return something like that : [{moment},[{comment, user}], user] which is an array where every case contains a moment, an array of comments and the owner user related, and the owner user of the moment.</p>
<p>app.get('/users/:id', User.getUserById);</p>
<p>app.get('/users/mail/:email', User.getUserByEmail);</p>
<p>app.get('/users/name/:name', User.getUserByName);</p>

        </div>

    </div>]