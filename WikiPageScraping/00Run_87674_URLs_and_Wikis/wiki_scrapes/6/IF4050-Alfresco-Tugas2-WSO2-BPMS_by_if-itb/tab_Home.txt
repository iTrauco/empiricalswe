[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>#WSO2 BPS
WSO2 Business Process Server (BPS) is an easy-to-use Business Process Server that executes business processes written following WS-BPEL standard. WS-BPEL is emerging as the de facto standard for composing multiple synchronous and asynchronous web services into collaborative and transactional process flows which increase the flexibility and agility of your service-oriented architecture.</p>
<p>##WSO2 BPS Features</p>
<ol>
<li>Define and Execute Business Processes</li>
<li>Data Manipulation &amp; Extensibility</li>
<li>Define Workflows Interacting with People</li>
<li>Create &amp; Monitor Custom Key Performance Indicators (KPIs)</li>
<li>Graphical Process Modeling</li>
<li>Process Management via Graphical Administration Console</li>
<li>Integrates to Existing Environment</li>
<li>High Availability, Scalability and Stability</li>
<li>Lightweight, Developer Friendly and Easy to Deploy</li>
<li>Manage &amp; Monitor</li>
</ol>
<p>#JBoss jBPM
JBoss jBPM is a workflow, process automation, that enables coordination between disparate applications and services, resulting in the deployment of new revenue generating business processes.</p>
<p>JBoss Enterprise Framework that delivers workflow, business process management (BPM) and service orchestration in a multi-process language platform and in a scalable and flexible product footprint.</p>
<p><img alt="JBoss jBPM Architecture" data-canonical-src="http://docs.jboss.com/jbpm/v4/devguide/html_single/images/apis.png" src="https://camo.githubusercontent.com/5defe7a054150488cb45dba7adb50b6b9a106133/687474703a2f2f646f63732e6a626f73732e636f6d2f6a62706d2f76342f64657667756964652f68746d6c5f73696e676c652f696d616765732f617069732e706e67"/></p>
<p>jBPM focuses on executable business process, which are business processes that contain enough detail so they can actually be executed on a BPM engine.</p>
<p><img alt="Overview" data-canonical-src="http://docs.jboss.org/jbpm/v6.1/userguide/images/Chapter-1-Overview/Overview.png" src="https://camo.githubusercontent.com/5c61e28521d1c397de7a0abab85680d1a1337d54/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e312f7573657267756964652f696d616765732f436861707465722d312d4f766572766965772f4f766572766965772e706e67"/></p>
<p>The core engine is the heart of the project and allows you to execute business processes in a flexible manner. It is a pure Java component that you can choose to embed as part of your application or deploy it as a service and connect to it through the web-based UI or remote APIs.</p>
<p>The human task service and runtime persistence are optional core service. Human task service will take care of the human task life cycle if human actors participate in the process. Runtime persistence will persist the state of all your process instances and log audit information about everything that is happening at runtime.</p>
<p>Applications can connect to the core engine by through its Java API or as a set of CDI services, but also remotely through a REST and JMS API.</p>
<p>The process designer allows business users to design and simulate business processes in a web-based environment.</p>
<p>The data modeler allows non-technical users to view, modify and create data models for use in your processes.</p>
<p>A web-based form modeler also allows you to create, generate or edit forms related to your processes (to start the process or to complete one of the user tasks).</p>
<p>Rule authoring allows you to specify different types of business rules (decision tables, guided rules, etc.) for combination with your processes.</p>
<p>All assets are stored and managed on the Guvnor repository (exposed through Git) and can be managed (versioning), built and deployed.</p>
<p>The web-based management console allows business users to manage their runtime (manage business processes like start new processes, inspect running instances, etc.), to manage their task list and to perform Business Activity Monitoring (BAM) and see reports.</p>
<p>The Eclipse-based developer tools are an extension to the Eclipse IDE, targeted towards developers, and allows you to create business processes using drag and drop, test and debug your processes, etc.</p>
<p>##How to Install JBOSS jBPM</p>
<ol>
<li>
<a href="https://sourceforge.net/projects/jbpm/files/jBPM%206/" rel="nofollow">Download</a> the installer and unzip it to local file system.</li>
<li>Go into the jbpm-installer folder where you unzipped the installer and (from a command prompt) run:
<code>ant install.demo</code>. This will:</li>
</ol>
<ul>
<li>Download JBoss AS</li>
<li>Configure and deploy the web tooling</li>
<li>Download Eclipse</li>
<li>Install the Drools and jBPM Eclipse plugin</li>
<li>Install the Eclipse BPMN 2.0 Modeler</li>
</ul>
<ol start="3">
<li>#WSO2 BPS
WSO2 Business Process Server (BPS) is an easy-to-use Business Process Server that executes business processes written following WS-BPEL standard. WS-BPEL is emerging as the de facto standard for composing multiple synchronous and asynchronous web services into collaborative and transactional process flows which increase the flexibility and agility of your service-oriented architecture.</li>
</ol>
<p>##WSO2 BPS Features</p>
<ol>
<li>Define and Execute Business Processes</li>
<li>Data Manipulation &amp; Extensibility</li>
<li>Define Workflows Interacting with People</li>
<li>Create &amp; Monitor Custom Key Performance Indicators (KPIs)</li>
<li>Graphical Process Modeling</li>
<li>Process Management via Graphical Administration Console</li>
<li>Integrates to Existing Environment</li>
<li>High Availability, Scalability and Stability</li>
<li>Lightweight, Developer Friendly and Easy to Deploy</li>
<li>Manage &amp; Monitor</li>
</ol>
<p>#JBoss jBPM
JBoss jBPM is a workflow, process automation, that enables coordination between disparate applications and services, resulting in the deployment of new revenue generating business processes.</p>
<p>JBoss Enterprise Framework that delivers workflow, business process management (BPM) and service orchestration in a multi-process language platform and in a scalable and flexible product footprint.</p>
<p><img alt="JBoss jBPM Architecture" data-canonical-src="http://docs.jboss.com/jbpm/v4/devguide/html_single/images/apis.png" src="https://camo.githubusercontent.com/5defe7a054150488cb45dba7adb50b6b9a106133/687474703a2f2f646f63732e6a626f73732e636f6d2f6a62706d2f76342f64657667756964652f68746d6c5f73696e676c652f696d616765732f617069732e706e67"/></p>
<p>jBPM focuses on executable business process, which are business processes that contain enough detail so they can actually be executed on a BPM engine.</p>
<p><img alt="Overview" data-canonical-src="http://docs.jboss.org/jbpm/v6.1/userguide/images/Chapter-1-Overview/Overview.png" src="https://camo.githubusercontent.com/5c61e28521d1c397de7a0abab85680d1a1337d54/687474703a2f2f646f63732e6a626f73732e6f72672f6a62706d2f76362e312f7573657267756964652f696d616765732f436861707465722d312d4f766572766965772f4f766572766965772e706e67"/></p>
<p>The core engine is the heart of the project and allows you to execute business processes in a flexible manner. It is a pure Java component that you can choose to embed as part of your application or deploy it as a service and connect to it through the web-based UI or remote APIs.</p>
<p>The human task service and runtime persistence are optional core service. Human task service will take care of the human task life cycle if human actors participate in the process. Runtime persistence will persist the state of all your process instances and log audit information about everything that is happening at runtime.</p>
<p>Applications can connect to the core engine by through its Java API or as a set of CDI services, but also remotely through a REST and JMS API.</p>
<p>The process designer allows business users to design and simulate business processes in a web-based environment.</p>
<p>The data modeler allows non-technical users to view, modify and create data models for use in your processes.</p>
<p>A web-based form modeler also allows you to create, generate or edit forms related to your processes (to start the process or to complete one of the user tasks).</p>
<p>Rule authoring allows you to specify different types of business rules (decision tables, guided rules, etc.) for combination with your processes.</p>
<p>All assets are stored and managed on the Guvnor repository (exposed through Git) and can be managed (versioning), built and deployed.</p>
<p>The web-based management console allows business users to manage their runtime (manage business processes like start new processes, inspect running instances, etc.), to manage their task list and to perform Business Activity Monitoring (BAM) and see reports.</p>
<p>The Eclipse-based developer tools are an extension to the Eclipse IDE, targeted towards developers, and allows you to create business processes using drag and drop, test and debug your processes, etc.</p>
<p>##How to Install JBOSS jBPM</p>
<ol>
<li>
<a href="https://sourceforge.net/projects/jbpm/files/jBPM%206/" rel="nofollow">Download</a> the installer and unzip it to local file system.</li>
<li>Go into the jbpm-installer folder where you unzipped the installer and (from a command prompt) run:
<code>ant install.demo</code>. This will:</li>
</ol>
<ul>
<li>Download JBoss AS</li>
<li>Configure and deploy the web tooling</li>
<li>Download Eclipse</li>
<li>Install the Drools and jBPM Eclipse plugin</li>
<li>Install the Eclipse BPMN 2.0 Modeler</li>
</ul>
<ol start="3">
<li>Once the demo setup has finished, you can start playing with the various components by starting the demo setup: <code>ant start.demo</code>. This will:</li>
</ol>
<ul>
<li>Start H2 database server</li>
<li>Start the JBoss AS</li>
<li>Start Eclipse</li>
</ul>

        </div>

    </div>]