[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>In some cases you may wish to use something other than the Drupal entity IDs as the IDs in your API URLs (if, for example, you wish to use some sort of FQN, UUID, or similar for an API that needs to be integrated with other systems that are not aware of the Drupal ID system and have other constraints on IDs).</p>
<p>This can be easily done with restful, though it does take implementing the correct API methods.</p>
<p>By default, restful supports only numeric IDs in URLs. To change this, implement <code>getControllers</code> in your plugin class:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-c"><span class="pl-c">/**</span></span></span>
<span class="pl-s1"><span class="pl-c"> * Overrides \RestfulEntityBase::getControllers().</span></span>
<span class="pl-s1"><span class="pl-c"> <span class="pl-c">*/</span></span></span>
<span class="pl-s1"><span class="pl-k">public</span> <span class="pl-k">function</span> <span class="pl-en">getControllers</span>() {</span>
<span class="pl-s1">  <span class="pl-k">return</span> <span class="pl-c1">array</span>(<span class="pl-s"><span class="pl-pds">'</span>\w+<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">array</span>(</span>
<span class="pl-s1">    <span class="pl-c1">\</span><span class="pl-c1">RestfulInterface</span><span class="pl-k">::</span><span class="pl-c1">GET</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>viewEntities<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">  ));</span>
<span class="pl-s1">}</span></pre></div>
<p>This tells the <code>process</code> method to use viewEntities for IDs that are composed of any alphanumeric characters. (You'd need to extend this to cover the POST, PUT, etc. cases).</p>
<p>That's all that's needed to accept non-numeric IDs in our API URLs. We can now use any logic we wish to load entities based on the ID we are given. We can use the title, for example:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">  <span class="pl-c"><span class="pl-c">/**</span></span></span>
<span class="pl-s1"><span class="pl-c">   * Overrides \RestfulEntityBase::viewEntity().</span></span>
<span class="pl-s1"><span class="pl-c">   *</span></span>
<span class="pl-s1"><span class="pl-c">   * Wrap viewEntity to load the node via title. So we can use </span></span>
<span class="pl-s1"><span class="pl-c">   * the fully qualified name (FQN) as the ID.</span></span>
<span class="pl-s1"><span class="pl-c">   <span class="pl-c">*/</span></span></span>
<span class="pl-s1">  <span class="pl-k">public</span> <span class="pl-k">function</span> <span class="pl-en">viewEntity</span>(<span class="pl-smi">$label</span>) {</span>
<span class="pl-s1">    <span class="pl-smi">$query</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">EntityFieldQuery</span>();</span>
<span class="pl-s1">    <span class="pl-smi">$result</span> <span class="pl-k">=</span> <span class="pl-smi">$query</span></span>
<span class="pl-s1">      <span class="pl-k">-&gt;</span>entityCondition(<span class="pl-s"><span class="pl-pds">'</span>entity_type<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>node<span class="pl-pds">'</span></span>)</span>
<span class="pl-s1">      <span class="pl-k">-&gt;</span>entityCondition(<span class="pl-s"><span class="pl-pds">'</span>bundle<span class="pl-pds">'</span></span>, <span class="pl-smi">$this</span><span class="pl-k">-&gt;</span>getBundle())</span>
<span class="pl-s1">      <span class="pl-k">-&gt;</span>propertyCondition(<span class="pl-s"><span class="pl-pds">'</span>title<span class="pl-pds">'</span></span>, <span class="pl-smi">$label</span>)</span>
<span class="pl-s1">      <span class="pl-k">-&gt;</span>propertyCondition(<span class="pl-s"><span class="pl-pds">'</span>status<span class="pl-pds">'</span></span>, <span class="pl-c1">NODE_PUBLISHED</span>)</span>
<span class="pl-s1">      <span class="pl-c"><span class="pl-c">//</span> There can be only a single item with this label.</span></span>
<span class="pl-s1">      <span class="pl-k">-&gt;</span>range(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>)</span>
<span class="pl-s1">      <span class="pl-k">-&gt;</span>execute();</span>
<span class="pl-s1">    </span>
<span class="pl-s1">    <span class="pl-k">if</span> (<span class="pl-c1">empty</span>(<span class="pl-smi">$result</span>[<span class="pl-s"><span class="pl-pds">'</span>node<span class="pl-pds">'</span></span>])) {</span>
<span class="pl-s1">      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-c1">\</span><span class="pl-c1">RestfulBadRequestException</span>(format_string(<span class="pl-s"><span class="pl-pds">'</span>Label @label is not a valid entity ID.<span class="pl-pds">'</span></span>, <span class="pl-c1">array</span>(<span class="pl-s"><span class="pl-pds">'</span>@label<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-smi">$label</span>));</span>
<span class="pl-s1">    }</span>
<span class="pl-s1"></span>
<span class="pl-s1">    <span class="pl-smi">$id</span> <span class="pl-k">=</span> <span class="pl-c1">key</span>(<span class="pl-smi">$result</span>[<span class="pl-s"><span class="pl-pds">"</span>node<span class="pl-pds">"</span></span>]);</span>
<span class="pl-s1">    <span class="pl-k">return</span> <span class="pl-k">parent</span><span class="pl-k">::</span>viewEntity(<span class="pl-smi">$id</span>);</span>
<span class="pl-s1">  }</span></pre></div>

        </div>

    </div>]