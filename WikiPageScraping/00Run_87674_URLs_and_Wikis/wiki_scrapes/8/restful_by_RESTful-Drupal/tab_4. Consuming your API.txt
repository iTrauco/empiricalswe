[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <blockquote>
<p>This is a partial clone of <a href="https://github.com/RESTful-Drupal/restful/blob/7.x-2.x/docs/api_url.md">https://github.com/RESTful-Drupal/restful/blob/7.x-2.x/docs/api_url.md</a></p>
</blockquote>
<p>On this page:</p>
<ul>
<li>Write operations
<ul>
<li>Basic example</li>
<li>Advanced example</li>
</ul>
</li>
<li>Getting information about the resource
<ul>
<li>Exploring the resource</li>
<li>Returning documentation about the resource</li>
</ul>
</li>
<li>Returning specific fields</li>
<li>Applying a query filter</li>
<li>Loading by an alternate ID.</li>
<li>Working with authentication providers</li>
<li>Error handling</li>
</ul>
<h1>
<a aria-hidden="true" class="anchor" href="#consuming-your-api" id="user-content-consuming-your-api"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Consuming your API</h1>
<p>The RESTful module allows your resources to be used by external clients via
HTTP requests.  This is the module's primary purpose.</p>
<p>You can manipulate the resources using different HTTP request types
(e.g. <code>POST</code>, <code>GET</code>, <code>DELETE</code>), HTTP headers, and special query strings
passed in the URL itself.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#operation-methods" id="user-content-operation-methods"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Operation methods</h2>
<ul>
<li>
<strong>GET</strong>: View an individual item, or view a list of the resource's items.</li>
<li>
<strong>POST</strong>: Create a new item.</li>
<li>
<strong>PUT</strong>: Replace an existing item with a new one (keeps same id).</li>
<li>
<strong>PATCH</strong>: Update an item with new properties / fields.</li>
<li>
<strong>DELETE</strong>: Delete an item.</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#write-operations" id="user-content-write-operations"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Write operations</h2>
<p>Write operations can be performed via the POST (to create items), PUT or PATCH
(to update items) HTTP methods.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#basic-example" id="user-content-basic-example"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Basic example</h3>
<p>The following request will create an article using the articles resource:</p>
<div class="highlight highlight-source-httpspec"><pre><span class="pl-k">POST</span><span class="pl-c1"> /articles HTTP/1.1</span>
<span class="pl-s"><span class="pl-v">Content-Type:</span> application/json</span>
<span class="pl-s"><span class="pl-v">Accept:</span> application/json</span>

{
  <span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>My article<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>body<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>&lt;p&gt;This is a short one&lt;/p&gt;<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>tags<span class="pl-pds">"</span></span>: [<span class="pl-c1">1</span>, <span class="pl-c1">6</span>, <span class="pl-c1">12</span>]
}</pre></div>
<p>Note how we are setting the properties that we want to set using JSON. The
provided payload format needs to match the contents of the <code>Content-Type</code> header
(in this case <em>application/json</em>).</p>
<p>It's also worth noting that when settings reference fields with multiple values,
you can submit an array of IDs or a string of IDs separated by comas.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#advanced-example" id="user-content-advanced-example"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Advanced example</h3>
<p>You use sub-requests to manipulate (create or alter) the relationships in a single request.The following example will:</p>
<ol>
<li>Update the title of the article to be <em>To TDD or Not</em>.</li>
<li>Update the contents of tag 6 to replace it with the provided content.</li>
<li>Create a new tag and assign it to the updated article.</li>
</ol>
<pre><code>PATCH /articles/1 HTTP/1.1
Content-Type: application/vnd.api+json
Accept: application/vnd.api+json

{
  "title": "To TDD or Not",
  "tags": [
    {
      "id": "6",
      "body": {
        "label": "Batman!",
        "description": "The gadget owner."
      },
      "request": {
        "method": "PATCH"
      }
    },
    {
      "body": {
        "label": "everything",
        "description": "I can only say: 42."
      },
      "request": {
        "method": "POST",
        "headers": {"Authorization": "Basic Yoasdkk1="}
      }
    }
  ]
}
</code></pre>
<p>See the
<a href="https://gist.github.com/e0ipso/cc95bfce66a5d489bb8a">extension specification</a>
for an example using JSON API.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#getting-information-about-the-resource" id="user-content-getting-information-about-the-resource"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting information about the resource</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#exploring-the-resource" id="user-content-exploring-the-resource"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Exploring the resource</h3>
<p>Using a HTTP <code>GET</code> request on a resource's root URL will return information
about that resource, in addition to the data itself.</p>
<pre><code>curl https://example.com/api/
</code></pre>
<p>This will output all the available <strong>latest</strong> resources (of course, if you have
enabled the "Discovery Resource" option). For example, if there are 3 different
api version plugins for content type Article (1.0, 1.1, 2.0) it will display the
latest only (2.0 in this case).</p>
<p>If you want to display all the versions of all the resources declared add the
query <strong>?all=true</strong> like this.</p>
<pre><code>curl https://example.com/api?all=true
</code></pre>
<p>The data results are stored in the <code>data</code> property of the JSON response, while
the <code>self</code> and <code>next</code> objects contain information about the resource.</p>
<div class="highlight highlight-source-js"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span><span class="pl-k">:</span> [
    {
      <span class="pl-s"><span class="pl-pds">"</span>self<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>https://example.com/api/v1.0/articles/123<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>field<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>A field value<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>field2<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Another field value<span class="pl-pds">"</span></span>
    },
    <span class="pl-c"><span class="pl-c">//</span> { ... more results follow ... }</span>
  ],
  <span class="pl-s"><span class="pl-pds">"</span>count<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-c1">100</span>,
  <span class="pl-s"><span class="pl-pds">"</span>self<span class="pl-pds">"</span></span><span class="pl-k">:</span> {
    <span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Self<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>href<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>https://example.com/api/v1.0/articles<span class="pl-pds">"</span></span>
  },
  <span class="pl-s"><span class="pl-pds">"</span>next<span class="pl-pds">"</span></span><span class="pl-k">:</span> {
    <span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Next<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>href<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>https://example.com/api/v1.0/articles?page=2<span class="pl-pds">"</span></span>
  }
}</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#returning-documentation-about-the-resource" id="user-content-returning-documentation-about-the-resource"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Returning documentation about the resource</h3>
<p>Using an HTTP <code>OPTIONS</code> request, you can return documentation about the
resource.  To do so, make an OPTIONS request to the resource's root URL.</p>
<pre><code>curl -X OPTIONS -i https://example.com/api/v1.0/articles
</code></pre>
<p>The resource will respond with a JSON object that contains documentation for
each field defined by the resource.</p>
<p>See the <em>Documenting your API</em> section of the <a href="../README.md">README file</a>
for examples of the types of information returned by such a request.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#returning-specific-fields" id="user-content-returning-specific-fields"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Returning specific fields</h2>
<p>Using the <code>?fields</code> query string, you can declare which fields should be
returned.  Note that you can only return fields already being returned by
<code>publicFields()</code>.  This is used, for example, if you have many fields
in <code>publicFields()</code>, but your client only needs a few specific ones.</p>
<pre><code># Handler v1.0
curl https://example.com/api/v1/articles/2?fields=id
</code></pre>
<p>Returns:</p>
<div class="highlight highlight-source-js"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span><span class="pl-k">:</span> [{
    <span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>2<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>label<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Foo<span class="pl-pds">"</span></span>
  }]
}</pre></div>
<p>It is worth noting, that if field returns an array, you will need to specifically call each field, you cannot simply call field=a_field. For example, if your data looks like the following:</p>
<div class="highlight highlight-source-js"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span><span class="pl-k">:</span> [{
    <span class="pl-s"><span class="pl-pds">"</span>a_field<span class="pl-pds">"</span></span><span class="pl-k">:</span> {
       <span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>123<span class="pl-pds">"</span></span>,
       <span class="pl-s"><span class="pl-pds">"</span>label<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Label<span class="pl-pds">"</span></span>,
     }
}]
}</pre></div>
<p>To return both, you would need to specifically call:</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> Handler v1.0</span>
curl https://example.com/api/v1/articles/2<span class="pl-k">?</span>fields=a_field.id,a_field.label</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#applying-a-query-filter" id="user-content-applying-a-query-filter"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Applying a query filter</h2>
<p>RESTful allows applying filters to the database query used to generate the list.</p>
<p>Bear in mind that for entity based resources, only those fields with a
<code>'property'</code> (matching to an entity property or a Field API field) can be used
for filtering.</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> Handler v1.0</span>
curl https://example.com/api/v1/articles<span class="pl-k">?</span>filter[label]=abc</pre></div>
<p>You can even filter results using basic operators. For instance to get all the
articles after a certain date:</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> Handler v1.0</span>
curl https://example.com/api/articles<span class="pl-k">?</span>filter[created][value]=1417591992<span class="pl-k">&amp;</span>filter[created][operator]=<span class="pl-s"><span class="pl-pds">"</span>&gt;=<span class="pl-pds">"</span></span></pre></div>
<p>Additionally you can provide multiple filters for the same field. That is
specially useful when filtering on multiple value fields. The following example
will get all the articles with the integer multiple field that contains all 1, 3
and 5.</p>
<pre><code>curl https://example.com/api/articles?filter[integer_multiple][value][0]=1&amp;filter[integer_multiple][value][1]=3&amp;filter[integer_multiple][value][2]=5
</code></pre>
<p>You can do more advanced filtering by providing values and operators. The
following example will get all the articles with an integer value less than 5
and another equal to 10.</p>
<pre><code>curl https://example.com/api/articles?filter[integer_multiple][value][0]=5&amp;filter[integer_multiple][value][1]=10&amp;filter[integer_multiple][operator][0]="&gt;"&amp;filter[integer_multiple][operator][0]="="
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#loading-by-an-alternate-id" id="user-content-loading-by-an-alternate-id"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Loading by an alternate ID.</h2>
<p>Some times you need to load an entity by an alternate ID that is not the regular
entity ID, for example a unique ID title. All that you need to do is provide the
alternate ID as the regular resource ID and inform that the passed in ID is not
the regular entity ID but a different field. To do so use the <code>loadByFieldName</code>
query parameter.</p>
<pre><code>curl -H 'X-API-version: v1.5' https://www.example.org/articles/1234-abcd-5678-efg0?loadByFieldName=uuid
</code></pre>
<p>That will load the article node and output it as usual. Since every REST
resource object has a canonical URL (and we are using a different one) a <em>Link</em>
header will be added to the response with the canonical URL so the consumer can
use it in future requests.</p>
<pre><code>HTTP/1.1 200 OK
Date: Mon, 22 Dec 2014 08:08:53 GMT
Content-Type: application/hal+json; charset=utf-8
...
Link: https://www.example.org/articles/12; rel="canonical"

{
  ...
}
</code></pre>
<p>The only requirement to use this feature is that the value for your
<code>loadByFieldName</code> field needs to be one of your exposed fields. It is also up to
you to make sure that that field is unique. Note that in case that more tha one
entity matches the provided ID the first record will be loaded.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#working-with-authentication-providers" id="user-content-working-with-authentication-providers"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Working with authentication providers</h2>
<p>RESTful comes with <code>cookie</code>, <code>base_auth</code> (user name and password in the HTTP
header) authentications providers, as well as a "RESTful token auth" module that
has a <code>token</code> authentication provider.</p>
<p>Note: if you use cookie-based authentication then you also need to set the
HTTP <code>X-CSRF-Token</code> header on all writing requests (POST, PUT and DELETE).
You can retrieve the token from <code>/api/session/token</code> with a standard HTTP
GET request.</p>
<p>See <a href="https://github.com/Gizra/angular-restful-auth">this</a> AngularJs example that
shows a login from a fully decoupled web app to a Drupal backend.</p>
<p>Note: If you use basic auth under .htaccess password you might hit a flood
exception, as the server is sending the .htaccess user name and password as the
authentication. In such a case you may set the <code>restful_skip_basic_auth</code> to
TRUE, in order to avoid using it. This will allow enabling and disabling the
basic auth on different environments.</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> (Change username and password)</span>
curl -u <span class="pl-s"><span class="pl-pds">"</span>username:password<span class="pl-pds">"</span></span> https://example.com/api/login-token

<span class="pl-c"><span class="pl-c">#</span> Response has access token.</span>
{<span class="pl-s"><span class="pl-pds">"</span>access_token<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>YOUR_TOKEN<span class="pl-pds">"</span></span>}

<span class="pl-c"><span class="pl-c">#</span> Call a "protected" with token resource (Articles resource version 1.3 in "RESTful example")</span>
curl https://example.com/api/v1.3/articles/1<span class="pl-k">?</span>access_token=YOUR_TOKEN

<span class="pl-c"><span class="pl-c">#</span> Or use access-token instead of access_token for ensuring header is not going to be</span>
<span class="pl-c"><span class="pl-c">#</span> dropped out from $_SERVER so it remains compatible with other webservers different than apache.</span>
curl -H <span class="pl-s"><span class="pl-pds">"</span>access-token: YOUR_TOKEN<span class="pl-pds">"</span></span> https://example.com/api/v1.3/articles/1</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#error-handling" id="user-content-error-handling"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Error handling</h2>
<p>If an error occurs when operating the REST endpoint via URL, A valid JSON object
with <code>code</code>, <code>message</code> and <code>description</code> would be returned.</p>
<p>The RESTful module adheres to the <a href="http://tools.ietf.org/html/draft-nottingham-http-problem-06" rel="nofollow">Problem Details for HTTP
APIs</a> draft to
improve DX when dealing with HTTP API errors. Download and enable the <a href="https://drupal.org/project/advanced_help" rel="nofollow">Advanced
Help</a> module for more information
about the errors.</p>
<p>For example, trying to sort a list by an invalid key</p>
<div class="highlight highlight-source-shell"><pre>curl https://example.com/api/v1/articles<span class="pl-k">?</span>sort=wrong_key</pre></div>
<p>Will result with an HTTP code 400, and the following JSON:</p>
<div class="highlight highlight-source-js"><pre>{
  <span class="pl-s"><span class="pl-pds">'</span>type<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-pds">'</span>title<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>The sort wrong_key is not allowed for this path.<span class="pl-pds">'</span></span>,
  <span class="pl-s"><span class="pl-pds">'</span>status<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">400</span>,
  <span class="pl-s"><span class="pl-pds">'</span>detail<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>Bad Request.<span class="pl-pds">'</span></span>,
}</pre></div>

        </div>

    </div>]