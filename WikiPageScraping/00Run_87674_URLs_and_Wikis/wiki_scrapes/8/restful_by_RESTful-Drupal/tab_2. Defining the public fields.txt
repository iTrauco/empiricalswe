[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><strong>Resources</strong> will usually want to provide <strong>public fields</strong>, which are the fields that the API makes available for requests to that endpoint.</p>
<p>Your resource plugin will need to implement the method <code>publicFields</code> (previously <code>publicFieldsInfo</code> in 1.x) which returns a keyed array describing the fields you wish to make public.</p>
<p>These fields are either Drupal fields, Drupal entity properties (such as nid, status, created etc) or completely arbitrary API fields that return anything you want.</p>
<p>The most typical case would be returning a field or property of the entity you're exposing in this resource.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#example-arbitrary-field" id="user-content-example-arbitrary-field"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example arbitrary field.</h4>
<p>A simple example array item for an arbitrary field would look like the following:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$public_fields</span>[<span class="pl-s"><span class="pl-pds">'</span>myField<span class="pl-pds">'</span></span>] <span class="pl-k">=</span> <span class="pl-c1">array</span>(</span>
<span class="pl-s1">  <span class="pl-s"><span class="pl-pds">'</span>callback<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">array</span>(<span class="pl-smi">$this</span>, <span class="pl-s"><span class="pl-pds">'</span>myFieldDataProviderCallbackWithALongName<span class="pl-pds">'</span></span>), <span class="pl-c"><span class="pl-c">//</span> Additional array elements will be passed as arguments to the callback.</span></span>
<span class="pl-s1">);</span></pre></div>
<p>which will call the specified function on the resource class your <code>publicFields</code> method is defined in:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">  <span class="pl-k">public</span> <span class="pl-k">static</span> <span class="pl-k">function</span> <span class="pl-en">myFieldDataProviderCallbackWithALongName</span>(<span class="pl-c1">DataInterpreterInterface</span> <span class="pl-smi">$value</span>) {</span>
<span class="pl-s1">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">'</span>barry<span class="pl-pds">'</span></span>;</span>
<span class="pl-s1">  }</span>
<span class="pl-s1"></span></pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#example-entity-property" id="user-content-example-entity-property"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example entity property</h4>
<p>The following example exposes the author user ID:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$public_fields</span>[<span class="pl-s"><span class="pl-pds">'</span>uid<span class="pl-pds">'</span></span>] <span class="pl-k">=</span> <span class="pl-c1">array</span>(</span>
<span class="pl-s1">  <span class="pl-s"><span class="pl-pds">'</span>property<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>author<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">  <span class="pl-s"><span class="pl-pds">'</span>sub_property<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>uid<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">);</span></pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#field-classes" id="user-content-field-classes"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Field classes</h3>
<p>Each public field is mapped to a Field class. RESTful assigns a class to each field automatically if none is provided, based on the the field's type (e.g. entity reference, text, text-long, file, image etc). This is done in <code>ResourceField::fieldClassName()</code>.</p>
<p>If you wish, you may specify each field's class explicitly inside <code>publicFields()</code> e.g.</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-smi">$public_fields</span>[<span class="pl-s"><span class="pl-pds">'</span>myNewField<span class="pl-pds">'</span></span>] <span class="pl-k">=</span> <span class="pl-c1">array</span>(</span>
<span class="pl-s1">  <span class="pl-s"><span class="pl-pds">'</span>class<span class="pl-pds">'</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">'</span>\Drupal\restful\Plugin\resource\Field\ResourceFieldKeyValue<span class="pl-pds">'</span></span>,</span>
<span class="pl-s1">  <span class="pl-c"><span class="pl-c">//</span> etc...</span></span>
<span class="pl-s1">}</span></pre></div>

        </div>

    </div>]