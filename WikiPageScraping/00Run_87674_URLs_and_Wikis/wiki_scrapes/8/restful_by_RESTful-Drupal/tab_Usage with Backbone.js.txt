[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>For a full example app which uses Backbone.Marionette to connect to a RESTful Drupal instance, check out <a href="https://github.com/infiniteluke/todo_restful">todo_restful</a>.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#implement-parse" id="user-content-implement-parse"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Implement parse()</h2>
<p>RESTful.module responses contain a <code>data</code> element, which contains the model data. Backbone.js by default assumes the entire response will be the model data, so your models and collections will need to implement the <code>parse()</code> method, to give Backbone just the response's <code>data</code> element.</p>
<h6>
<a aria-hidden="true" class="anchor" href="#example-user-resource-response" id="user-content-example-user-resource-response"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example user resource response</h6>
<div class="highlight highlight-source-json"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>: [
    {
      <span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>5<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>label<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>Barry<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>self<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>http://drupalsite.local/api/v1.1/users/5<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>mail<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>barry@testing.com<span class="pl-pds">"</span></span>
    }
  ],
  <span class="pl-s"><span class="pl-pds">"</span>self<span class="pl-pds">"</span></span>: {
    <span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>Self<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>href<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>http://drupalsite.local/api/v1.1/users/5<span class="pl-pds">"</span></span>
  }
}</pre></div>
<h6>
<a aria-hidden="true" class="anchor" href="#example-backbonejs-model" id="user-content-example-backbonejs-model"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example Backbone.js model</h6>
<div class="highlight highlight-source-js"><pre><span class="pl-k">var</span> User <span class="pl-k">=</span> <span class="pl-smi">Backbone</span>.<span class="pl-smi">Model</span>.<span class="pl-en">extend</span>({
  <span class="pl-en">urlRoot</span> <span class="pl-k">:</span> <span class="pl-k">function</span>() {
    <span class="pl-k">return</span> restBasePath <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">'</span>/api/users/<span class="pl-pds">'</span></span>;
  },

  <span class="pl-c"><span class="pl-c">//</span> Modify the response that RESTful.module gives us.</span>
  <span class="pl-en">parse</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">response</span>, <span class="pl-smi">options</span>) {
    <span class="pl-k">if</span> (<span class="pl-smi">response</span>.<span class="pl-c1">data</span>) {
        <span class="pl-c"><span class="pl-c">//</span> RESTful sends models buried inside a data element.</span>
        <span class="pl-k">return</span> <span class="pl-smi">response</span>.<span class="pl-c1">data</span>[<span class="pl-c1">0</span>];
    }
    <span class="pl-k">return</span> response;
  },

});</pre></div>
<h6>
<a aria-hidden="true" class="anchor" href="#example-backbonejs-collection" id="user-content-example-backbonejs-collection"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example Backbone.js collection</h6>
<div class="highlight highlight-source-js"><pre><span class="pl-k">var</span> Users <span class="pl-k">=</span> <span class="pl-smi">Backbone</span>.<span class="pl-smi">Collection</span>.<span class="pl-en">extend</span>({
  
  model<span class="pl-k">:</span> User,
  
  url <span class="pl-k">:</span> restBasePath <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">'</span>/api/users/<span class="pl-pds">'</span></span>,

  <span class="pl-c"><span class="pl-c">//</span> RESTful sends models buried inside a data element.</span>
  <span class="pl-en">parse</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">response</span>) {
    <span class="pl-k">return</span> <span class="pl-smi">response</span>.<span class="pl-c1">data</span>;
  },
});
</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#add-auth-headers-to-every-request" id="user-content-add-auth-headers-to-every-request"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Add auth headers to every request</h2>
<p>You'll need to add headers to every request that needs to be authenticated. When using cookie auth, you'll want to add the <code>X-CSRF-Token</code> and when using token auth you'll need to add the <code>access_token</code>.</p>
<p>This can neatly be achieved in Backbone using underscore's <code>_.wrap</code> method. For example:</p>
<div class="highlight highlight-source-js"><pre>      <span class="pl-c"><span class="pl-c">//</span> Make all our AJAX requests send the access_token in a header.</span>
      <span class="pl-smi">self</span>.<span class="pl-en">addAuthHeaders</span>({
        <span class="pl-s"><span class="pl-pds">'</span>X-CSRF-Token<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-smi">self</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">"</span>X-CSRF-Token<span class="pl-pds">"</span></span>)
      });</pre></div>
<p>or</p>
<div class="highlight highlight-source-js"><pre>      <span class="pl-c"><span class="pl-c">//</span> Make all our AJAX requests send the access_token in a header.</span>
      <span class="pl-smi">self</span>.<span class="pl-en">addAuthHeaders</span>({
        <span class="pl-s"><span class="pl-pds">'</span>access_token<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-smi">self</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">"</span>access_token<span class="pl-pds">"</span></span>)
      });</pre></div>
<p>and</p>
<div class="highlight highlight-source-js"><pre>  <span class="pl-en">addAuthHeaders</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">authHeaders</span>) {
    <span class="pl-smi">Backbone</span>.<span class="pl-smi">ajax</span> <span class="pl-k">=</span> <span class="pl-smi">_</span>.<span class="pl-en">wrap</span>(<span class="pl-smi">Backbone</span>.<span class="pl-smi">ajax</span>, <span class="pl-k">function</span>(<span class="pl-smi">originalFunc</span>, <span class="pl-smi">params</span>) {
       <span class="pl-smi">params</span>.<span class="pl-c1">headers</span> <span class="pl-k">=</span> <span class="pl-smi">_</span>.<span class="pl-en">extend</span>({}, <span class="pl-smi">params</span>.<span class="pl-c1">headers</span>, authHeaders);
       <span class="pl-k">return</span> <span class="pl-en">originalFunc</span>(params);
    });
  }</pre></div>

        </div>

    </div>]