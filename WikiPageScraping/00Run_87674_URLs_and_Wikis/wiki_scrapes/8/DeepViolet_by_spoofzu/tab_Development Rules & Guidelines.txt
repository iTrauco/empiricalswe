[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><strong>R10 Documentation requirements for pull requests</strong>.  Each significant pull request must be preceded with accompanying documentation with a minimum of 3 days prior notice.  The reason is that developers introducing significant changes/improvements must allow a period of open and fair community debate around the feature prior to implementation.  How can you provide notice, 1) post a new <a href="https://github.com/spoofzu/DeepViolet/issues">issue</a>, 2) post to the <a href="https://groups.google.com/forum/#!forum/deepviolet-development" rel="nofollow">Google DeepViolet Group</a>.  Pull requests not accompanied with the documentation link OR have not waited at least 3-days will be rejected.</p>
<p><strong>R20 Nascent pull requests for stylistic changes</strong>.  Each person has different design and coding styles.  Consider the following example,</p>
<pre><code>if(condition) {
  .. do something..
}
</code></pre>
<p>OR</p>
<pre><code>if(condition)
{
  .. do something..
}
</code></pre>
<p>Any pull requests based purely upon these coding style preferences will be rejected.  If you are submitting new code you are allowed to choose a style that works for you.  Anyone making changes to your code can adopt their own coding style.  However, developers are not allowed to reformat code in other areas just because they don't like others coding styles.  The reason these pull requests will be rejected is two part, 1) if your not contributing you don't get to dictate coding style preferences to others, 2) it significantly increases the time it takes to review pull requests and adds no value to the project.</p>
<p><strong>R30 Ease of use is key.</strong>  Any improvements must not introduce needless complexity.</p>
<p><strong>R40 Only check in a consistent set of changes.</strong> They don't have to fully implement new functionality, but they must not break existing functionality.</p>
<p><strong>R50 Improvements include corresponding unit tests</strong>.</p>
<p><strong>R60 Equitable licensing</strong>.  Any 3rd party code and libraries you introduce is licensed in a compatible way with the Apache v2 license.  Message project leader with questions.</p>
<p><strong>R70 Provide attribution</strong>. If you include the code of others in accordance with <strong>R60</strong>, you will acknowledge the original author and if possible include a link to the original version or alternatively provide original author contact information.</p>
<p><strong>R80</strong> Check in code that is cleaner than you checked out, aka 'Clean Code' (<a href="http://www.cleancoders.com/" rel="nofollow">http://www.cleancoders.com/</a>).  Keep in mind <strong>R20</strong>.</p>
<p><em>Development Rules &amp; Guidelines adapted in part from those provided for the <a href="https://github.com/zaproxy/zaproxy/wiki/DevGuidelines">OWASP ZAP project</a>.</em></p>

        </div>

    </div>]