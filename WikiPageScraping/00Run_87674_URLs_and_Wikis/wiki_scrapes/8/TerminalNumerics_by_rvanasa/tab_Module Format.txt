[<div class="wiki-body gollum-textile-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>This is the current design format for modules.</p>
<p>- Module Properties -<br/>
Each module must contain a Properties file with the name <code>module.props</code>, which is read by the system upon loading the module. Below is an example <code>module.props</code> file.</p>
<pre><code># example module properties (this is a comment line)
id: example
version: 1.0.0
name: Example Module
delegate: ExampleModule</code></pre>
<p>- Module Delegate -<br/>
The delegate property designates the Java class file in which you may add programmatic features to the software, such as UI elements and actions. Here is an example module delegate class:</p>
<pre><code>// imports subject to change
import net.anasa.math.module.IModuleDelegate;
import net.anasa.math.module.ModuleException;
import net.anasa.math.ui.GraphComponent;

public class ExampleModule implements IModuleDelegate
{
    // runs after the module is instantiated (avoid using constructors in module delegates)
    public void init()
    {
        // creates a graph component and displays the function specified by the "display" property
        addComponent("graph_with_function", (props) -&gt; new GraphComponent(props.getString("display")));
        // defines a UI action to print "hello" to the console (this can be run by interactive UI elements)
        addAction("say_hello", () -&gt; System.out.println("hello")));
    }
}</code></pre>
<p>- UI Layout <span>XML</span> -<br/>
This is not officially part of the module system right now, but it is still usable for UI layouts. The premise behind this <span>XML</span> setup is to allow for the definition of complex user interfaces without the need for any Java code. This is comparable to a swing-based version of <span>HTML</span>. Here is an example of a very basic layout <span>XML</span> file, which uses features from the above module delegate.</p>
<pre><code>&lt;?xml version="1.0"?&gt;
&lt;layout type="border"&gt;
    &lt;component pos="top" id="label" text="Example XML Layout" /&gt;
    &lt;component pos="center" id="graph_with_function" function="3-(x+1)^2" /&gt;
&lt;/layout&gt;
</code></pre>
        </div>

    </div>]