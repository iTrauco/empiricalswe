[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h3>
<a aria-hidden="true" class="anchor" href="#step-1-install-dependencies" id="user-content-step-1-install-dependencies"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 1: Install dependencies</h3>
<ul>
<li>Install the latest GCC (GNU Compiler Collection) for ARM Cortex processors:
<a href="https://launchpad.net/gcc-arm-embedded" rel="nofollow">https://launchpad.net/gcc-arm-embedded</a>
</li>
<li>Install dfu-util.  Mac users can install dfu-util with Homebrew, Linux users may find it in their package manager, and everyone can get it from <a href="http://dfu-util.gnumonks.org/index.html" rel="nofollow">http://dfu-util.gnumonks.org/index.html</a>
</li>
<li>Windows users: In order for the Core to show up on the dfu list, you need to replace the USB driver with a utility called <a href="http://zadig.akeo.ie/" rel="nofollow">Zadig</a>. Here is a <a href="https://github.com/pbatard/libwdi/wiki/Zadig">tutorial</a> on using it.</li>
<li>Make sure you are able to run <code>make</code> from the terminal window.
In Windows it needs to be explicitly installed.</li>
</ul>
<p>Make sure all the above are in the PATH, so you can run them from the command line.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#step-15-beta-tester-jtag" id="user-content-step-15-beta-tester-jtag"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 1.5: Beta tester? JTAG?</h3>
<p>The cores we sent out to beta testers in June have a memory map that differs from the current master branch of this repository.  <strong>You need to base your builds off the beta-tester-mem-map tag!</strong></p>
<pre><code>git checkout beta-tester-mem-map
</code></pre>
<p>Then change your device ID to your name (or whatever you like) on line 14 of src/spark_utilities.c.</p>
<p>If you have a JTAG programmer like the STLINK/V2 that works with the STM32 and want to use the latest master, email Zachary.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#step-2-compile-your-code" id="user-content-step-2-compile-your-code"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 2: Compile your code</h3>
<ul>
<li>
<p>Command Line</p>
<ol>
<li>Clone core-common-lib repo first and change into the build directory</li>
<li><code>make clean all</code></li>
<li>Change into the core-firmware\build directory</li>
<li><code>make clean all</code></li>
<li>OR <code>make clean dependents all</code> - This should build the dependency : libcore-common-lib.a</li>
</ol>
</li>
<li>
<p>Eclipse</p>
<p>It is possible to build this repository with Eclipse CDT and the GNU ARM Eclipse Plug-in's
"CDT GNU Cross Development Tools" component, but the setup process is lengthy, detailed, and complex.
If you really want to use Eclipse and can't figure it out on your own let us know in the community!</p>
<p>Here are a few key build settings:</p>
<ul>
<li>In Compiler -&gt; Optimization, "CHECK" the "Function sections", "UNCHECK" the "Data sections".</li>
<li>In Linker -&gt; General -&gt; Script file (-T), browse &amp; select linker file "linker_stm32f10x_md_dfu.ld"</li>
</ul>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#step-3-flash-your-code" id="user-content-step-3-flash-your-code"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 3: Flash your code</h3>
<ol>
<li>Enter DFU mode by keeping the BUTTON pressed for &gt; 1sec</li>
<li>List the currently attached DFU capable USB devices by running the following command on host: <code>dfu-util -l</code>
</li>
<li>The STM32 boards in usb-dfu mode should be listed as follows:</li>
</ol>
<pre><code>    Found DFU: [1d50:607f] devnum=0, cfg=1, intf=0, alt=0, name="@Internal Flash  /0x08000000/12*001Ka,116*001Kg"
    Found DFU: [1d50:607f] devnum=0, cfg=1, intf=0, alt=1, name="@SPI Flash : SST25x/0x00000000/512*04Kg"
</code></pre>
<ol start="4">
<li>cd to the core-firmware/build folder and type the below command to program the core-firmware application using dfu-util:</li>
</ol>
<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> BETA TESTERS flash to 0x0800A000</span>
dfu-util -d 0483:df11 -a 0 -s 0x0800A000:leave -D core-firmware.bin

<span class="pl-c"><span class="pl-c">#</span> LATEST MASTER WITH INTEGRATED OTA FIRMWARE UPGRADE CODE, flash to 0x08005000</span>
dfu-util -d 1d50:607f -a 0 -s 0x08005000:leave -D core-firmware.bin</pre></div>

        </div>

    </div>]