[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>目标KPI</p>
<p>支持多客户端 web ios android</p>
<p>高效： 并发连接数1万以上</p>
<p>易扩展： 支持第三方SSO登录
方便和其他现有系统的互交互
方便二次开发</p>
<p>方案介绍：</p>
<p>Netty + SocketIO + AKKA + Redis</p>
<p>组件介绍：</p>
<p>Netty java平台上最高效的底层通讯组件 由JBOSS提供的一个java开源框架。Netty提供基于NIO异步的、事件驱动的网络应用程序框架和工具，用以快速开发高性能、高可靠性的网络服务器和客户端程序。吸收了多种协议的实现经验，这些协议包括FTP,SMTP,HTTP，各种二进制，文本协议，并经过相当精心设计的项目，最终，Netty 成功的找到了一种方式，在保证易于开发的同时还保证了其应用的性能，稳定性和伸缩性。</p>
<p>SocketIO</p>
<p>Socket.IO 实现了实时双向的基于事件的通讯机制。旨在让各种浏览器与移动设备上实现实时app功能，模糊化各种传输机制。
Socket.IO 是跨平台，多种连接方式自动切换，做即时通讯方面的开发很方便
支持以下协议：
WebSocket
Adobe® Flash® Socket
AJAX long polling
AJAX multipart streaming
Forever Iframe
JSONP Polling</p>
<p>AKKA Akka 是一个用 Scala 编写的库，用于简化编写容错的、高可伸缩性的 Java 和 Scala 的 Actor 模型应用。它已经成功运用在电信行业。系统几乎不会宕机（高可用性 99.9999999 % 一年只有 31 ms 宕机</p>
<p>Redis Redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sorted set --有序集合)和hash（哈希类型）。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。</p>
<p><img alt="" data-canonical-src="https://app.yinxiang.com/shard/s33/sh/707de981-ba1b-4e6a-b18a-76c731de05e7/293fe18a9ea6659f/res/1413d2d6-53e6-492f-9130-d37b1eb2effc/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202014-11-24%20%E4%B8%8A%E5%8D%889.44.54.png?resizeSmall&amp;width=832" src="https://camo.githubusercontent.com/2b3cfa714a3e815fc543041a5f45dace9b204cb5/68747470733a2f2f6170702e79696e7869616e672e636f6d2f73686172642f7333332f73682f37303764653938312d626131622d346536612d623138612d3736633733316465303565372f323933666531386139656136363539662f7265732f31343133643264362d353365362d343932662d393133302d6433376231656232656666632f254535254231253846254535254239253935254535254246254142254537253835254137253230323031342d31312d3234253230254534254238253841254535253844253838392e34342e35342e706e673f726573697a65536d616c6c2677696474683d383332"/></p>
<p>与XMPP方案比较的优点：</p>
<p>Netty基于NIO的高效通讯底层性能优于openfire 使用的传统Servlet架构
Redis 的基于内存＋硬盘的会话数据存储 比 openfire的 mysql高效很多
Socket.IO对于浏览器,Websocket的支持 优于openfire 基于事件的异步编程模式 简单高效
基于AKKA的核心并发性能优异，扩展能力强
XMPP 基于xml的协议过重
Openfire整套方案过于笨重，对其改造难度大</p>
<p>Openfire的优点：
整套方案 首次部署难度小
方案比较成熟</p>

        </div>

    </div>]