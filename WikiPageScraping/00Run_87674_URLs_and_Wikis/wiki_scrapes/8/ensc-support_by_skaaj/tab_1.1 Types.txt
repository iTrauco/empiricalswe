[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#11-variables---les--diff%C3%A9rents-types" id="user-content-11-variables---les--différents-types"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>1.1 Variables - Les  différents types</h1>
<h2>
<a aria-hidden="true" class="anchor" href="#%C3%89nonc%C3%A9" id="user-content-Énoncé"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Énoncé</h2>
<p>On souhaiterait stocker quelques valeurs dans un programme informatique :</p>
<ul>
<li>Le titre d'un album : "Untitled"</li>
<li>Le nombre d'albums vendus : 5000.</li>
<li>Le prix d'un album en euros: 9,99.</li>
</ul>
<p>Quels types doit-on utiliser pour nos variables ?<br/>
Aide : <a href="https://msdn.microsoft.com/fr-fr/library/ya5y69ds.aspx" rel="nofollow">MSDN</a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#correction" id="user-content-correction"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Correction</h2>
<p>Pour commencer on va stocker le titre de l'album. Il s'agit uniquement d'un texte, ainsi nous allons utiliser une chaîne de caractères.</p>
<div class="highlight highlight-source-cs"><pre><span class="pl-k">string</span> <span class="pl-smi">titreAlbum</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Untitled<span class="pl-pds">"</span></span>;</pre></div>
<p>Ensuite on nous demande de stocker un nombre d'album vendus. Comme on ne peut pas vendre la moitié d'un album nous avons besoin d'un entier :</p>
<div class="highlight highlight-source-cs"><pre><span class="pl-k">int</span> <span class="pl-smi">nbAlbumsVendus</span> <span class="pl-k">=</span> <span class="pl-c1">5000</span>;</pre></div>
<p>Pour terminer, on a besoin de stocker le prix d'un album. Cette fois-ci on ne peut pas utiliser un entier, on va  donc utiliser un nombre décimal. On peut faire :</p>
<div class="highlight highlight-source-cs"><pre><span class="pl-k">float</span> <span class="pl-smi">prixAlbum</span> <span class="pl-k">=</span> <span class="pl-c1">9.99f</span>;
<span class="pl-c"><span class="pl-c">//</span> ou</span>
<span class="pl-k">double</span> <span class="pl-smi">prixAlbum</span> <span class="pl-k">=</span> <span class="pl-c1">9.99</span>;</pre></div>
<p>L'avantage du type <code>float</code> est qu'il utilise moins de mémoire (RAM) que le <code>double</code>. En revanche, il sera moins précis. Ici, on veut stocker un prix ce qui ne nécessite pas une grande précision, on peut donc préférer le <code>float</code>.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#le-code-source" id="user-content-le-code-source"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Le code source</h4>
<div class="highlight highlight-source-cs"><pre><span class="pl-k">using</span> <span class="pl-en">System</span>;

<span class="pl-k">class</span> <span class="pl-en">Program</span>
{
    <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">Main</span>(<span class="pl-k">string</span>[] <span class="pl-smi">args</span>)
    {       
            <span class="pl-c"><span class="pl-c">//</span> L'opérateur « = » prend la partie de droite et la met dans la partie de gauche</span>
            <span class="pl-k">string</span> <span class="pl-smi">titreAlbum</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Untitled<span class="pl-pds">"</span></span>;
            <span class="pl-k">int</span> <span class="pl-smi">nbAlbumsVendus</span> <span class="pl-k">=</span> <span class="pl-c1">5000</span>;
            <span class="pl-k">float</span> <span class="pl-smi">prixAlbum</span> <span class="pl-k">=</span> <span class="pl-c1">9.99f</span>;

            <span class="pl-smi">Console</span>.<span class="pl-en">WriteLine</span>(<span class="pl-smi">titreAlbum</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">"</span> a été vendu <span class="pl-pds">"</span></span> <span class="pl-k">+</span> <span class="pl-smi">nbAlbumsVendus</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">"</span> fois au prix de <span class="pl-pds">"</span></span> <span class="pl-k">+</span> <span class="pl-smi">prixAlbum</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">"</span> euros<span class="pl-pds">"</span></span>);

            <span class="pl-c"><span class="pl-c">//</span> Remarque : on aurait pu demander à l'utilisateur du programme de remplir ces informations.</span>
            <span class="pl-c"><span class="pl-c">//</span> Nous aurions alors utilisé la fonction « Console.ReadLine() » qui demande à l'utilisateur</span>
            <span class="pl-c"><span class="pl-c">//</span> de rentrer un texte qui sera la valeur renvoyée par cette fonction.</span>
            <span class="pl-c"><span class="pl-c">//</span> Ainsi, si on avait voulu demander le titre de l'album on aurait eu :</span>
            <span class="pl-smi">titreAlbum</span> <span class="pl-k">=</span> <span class="pl-smi">Console</span>.<span class="pl-en">ReadLine</span>();
            <span class="pl-c"><span class="pl-c">//</span> Ici, si l'utilisateur écrit « Bonjour » alors ligne précédente équivaut à :</span>
            <span class="pl-smi">titreAlbum</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Bonjour<span class="pl-pds">"</span></span>;
    }
}</pre></div>
<p>Il existe deux grandes familles de types qui sont les types valeurs et les types références. Cette notion est expliqué dans la page <a href="https://github.com/skaaj/ensc-support/wiki/4.3-Les-types-de-passage-de-param%C3%A8tres">fonctions</a>.</p>

        </div>

    </div>]