[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#imospc" id="user-content-imospc"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>ImoSPC</h1>
<p>ImoSPC provides an API for playing <a href="http://en.wikipedia.org/wiki/Nintendo_S-SMP#Format" rel="nofollow">SPC</a> files and Zip archives, as well as reading SPC metadata, using JavaScript.</p>
<p>(This page is under construction.)</p>
<h2>
<a aria-hidden="true" class="anchor" href="#basic-usage" id="user-content-basic-usage"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Basic usage</h2>
<p>You need to grab <code>imospc.js</code>, <code>imo-w-spc.js</code>, <code>imo-w-unzip.js</code>, and <code>imo-fl.swf</code> from <a href="wiki/../../tree/master/bin">the repository</a>. Or, you can <a href="#compiling">compile</a> it yourself.</p>
<p>These files need those exact names, and they need to be stored in the same directory.</p>
<div class="highlight highlight-text-html-basic"><pre>&lt;<span class="pl-ent">script</span> <span class="pl-e">type</span>=<span class="pl-s"><span class="pl-pds">"</span>text/javascript<span class="pl-pds">"</span></span> <span class="pl-e">src</span>=<span class="pl-s"><span class="pl-pds">"</span>url/to/imospc.js<span class="pl-pds">"</span></span>&gt;&lt;/<span class="pl-ent">script</span>&gt;</pre></div>
<p>You need to initialize ImoSPC using <code>ImoSPC.init</code> in order to use it. The initialization process is asynchrous, so you need to add event listeners for the <code>init</code> and <code>initerror</code> events, using <code>ImoSPC.addEventListener</code>.</p>
<div class="highlight highlight-source-js"><pre><span class="pl-smi">ImoSPC</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">"</span>init<span class="pl-pds">"</span></span>, myInitProc);
<span class="pl-smi">ImoSPC</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">"</span>initerror<span class="pl-pds">"</span></span>, myInitFailProc);
<span class="pl-smi">ImoSPC</span>.<span class="pl-en">init</span>();</pre></div>
<div class="highlight highlight-source-js"><pre><span class="pl-k">function</span> <span class="pl-en">myInitFailproc</span>(<span class="pl-smi">e</span>) {
    <span class="pl-c"><span class="pl-c">//</span> This isn't a good way to handle initerror, but it demonstrates the idea.</span>
    <span class="pl-en">alert</span>(<span class="pl-s"><span class="pl-pds">"</span>Failed to initialize!<span class="pl-pds">"</span></span>);
}</pre></div>
<p>Once ImoSPC is initialized, you can now load metadata using <code>ImoSPC.open</code>.</p>
<div class="highlight highlight-source-js"><pre><span class="pl-k">function</span> <span class="pl-en">myInitproc</span>() {
    <span class="pl-c"><span class="pl-c">//</span> Passing autostart: true here will cause the opened file to play immediately.</span>
    <span class="pl-c"><span class="pl-c">//</span> You can also pass autostart: true to ImoSPC.init to use this behaviour by default.</span>
    <span class="pl-c"><span class="pl-c">//</span> You can also listen for the 'load' event instead of using autostart.</span>
    <span class="pl-smi">ImoSPC</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>url/to/file.spc<span class="pl-pds">"</span></span>, { autostart<span class="pl-k">:</span> <span class="pl-c1">true</span> });
}</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#links" id="user-content-links"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Links</h2>
<p><a class="internal present" href="/ExoticMatter/ImoSPC/wiki/API-Reference">API reference</a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#compiling" id="user-content-compiling"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Compiling</h2>
<p>To compile ImoSPC, you need <a href="https://github.com/kripken/emscripten">Emscripten</a>, [FlasCC], and [Flex].</p>
<p>(under construction)</p>
<p>Under Windows: compile <code>imo-w-spc.js</code> and <code>imo-w-unzip.js</code> by running <code>make-workers.bat</code>.</p>
<p>Under Linux: compile <code>imospc.js</code> with <code>make main</code>.</p>

        </div>

    </div>]