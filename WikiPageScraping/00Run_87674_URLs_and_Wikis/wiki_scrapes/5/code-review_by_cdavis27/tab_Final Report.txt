[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><strong>Description</strong></p>
<p>The website was made to be used in academic programming classes. It provides an easy way for students to get feedback on their coding style and practices from instructors or TAs. I wanted to design a very simple app that allows you to focus on just reviewing code. I feel that I was able to accomplish the beginnings of that idea. Learning a new framework proved to much more difficult than I had anticipated. I had never used Django or angular prior to this project and there is definitely a learning curve. Consequently I was not able to finish everything I had initially thought I would. A lot of my time was spent reading and going through Django and Angular tutorials and googling and trying out various things trying to get something to work.</p>
<p>The following descriptions and images highlight the main features I was able to implement.</p>
<p>This is where a user would login, the actual login functionality is not yet implemented. Just click login to move to the next page.</p>
<p><img alt="" src="https://github.com/cdavis27/code-review/raw/master/design/login.png"/></p>
<p>I implemented most of the projects page. This is the landing page once you login.</p>
<p><img alt="" src="https://github.com/cdavis27/code-review/raw/master/design/projects.png"/></p>
<p>Selecting a specific project brings you to a page that displays the different files within that project.</p>
<p><img alt="" src="https://github.com/cdavis27/code-review/raw/master/design/project.png"/></p>
<p>Selecting a specific file will bring to a page that displays the code. Basically this is an online text editor. The server reads the tag and changes the syntax highlighting to the correct language.</p>
<p><img alt="" src="https://github.com/cdavis27/code-review/raw/master/design/file.png"/></p>
<p>Clicking on a line number in the gutter will open a modal. This modal allows you to add a comment to the line you selected. The gutter is then highlighted, indicating there is a comment on that line.</p>
<p><img alt="" src="https://github.com/cdavis27/code-review/raw/master/design/addComment.png"/></p>
<p>Clicking on the “Comments” tab brings you to a page that displays all of the comments for the entire project. Eventually you will be able to sort these comments by date, reviewer or file.</p>
<p>Clicking the “Upload” button brings up a modal that allows you to upload a project. Currently it only allows you to upload one file. Uploading a zipped file and then unzipping in on the server side ended up being more difficult than I had anticipated.</p>
<p>Clicking the “Flag” button brings up a modal that allows you type in an email address for a reviewer. Eventually this will then send a message to the reviewer letting them know your code is ready to review.</p>
<p><strong>Database Schema</strong></p>
<p>I used a relational database to store my data. I used postgresql as that works well with Django. I created the entities in the models.py class. From what I understand Django then basically converts the Django models I created into SQL tables with the serializer.py class. This class turns the Django models into JSON.</p>
<p>The following ER diagram illustrates the different entities I created and their associated attributes.
The relationships are indicated by the lines drawn between the entities. For the portion I completed I mostly used the  project, file, and comment entities.</p>
<p>My tables have a lot of many to one relationships. Each user owns many projects. Each project owns many files which individually own many comments.</p>
<p><img alt="" src="https://github.com/cdavis27/code-review/raw/master/design/codeReview-ERD.png"/></p>
<p><strong>Future Work</strong></p>
<p>As discussed earlier the setup for this project took quite some time. I now more comfortable with Django and angular and feel moving forward it will be much easier and quicker! The following list outlines the next steps in the order I hope to approach them.</p>
<ul>
<li>User login and account creation</li>
<li>folder structure on left side bar in the editor view (similar to sublime)</li>
<li>Make the “Flag” modal search for registered users</li>
<li>Reviews page:</li>
<li>Inbox like structure - view waiting review requests</li>
<li>Be able to view past reviews</li>
<li>Build the activity page</li>
<li>Activity page “new action” indicator</li>
<li>User setting page</li>
<li>add picture</li>
<li>change editor theme</li>
</ul>

        </div>

    </div>]