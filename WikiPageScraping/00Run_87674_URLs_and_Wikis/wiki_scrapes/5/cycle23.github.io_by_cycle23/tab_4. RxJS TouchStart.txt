[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Looks like for touch screen I'll want some of the stuff from: <a href="https://github.com/Reactive-Extensions/RxJS-DOM/blob/master/doc/operators/touchstart.md">https://github.com/Reactive-Extensions/RxJS-DOM/blob/master/doc/operators/touchstart.md</a></p>
<div class="highlight highlight-source-js"><pre><span class="pl-k">var</span> input <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(<span class="pl-s"><span class="pl-pds">'</span>input<span class="pl-pds">'</span></span>);
<span class="pl-k">var</span> source <span class="pl-k">=</span> <span class="pl-smi">Rx</span>.<span class="pl-c1">DOM</span>.<span class="pl-en">touchstart</span>(input);
<span class="pl-k">var</span> subscription <span class="pl-k">=</span> <span class="pl-smi">source</span>.<span class="pl-en">subscribe</span>(</pre></div>
<p><a href="https://github.com/Reactive-Extensions/RxJS-DOM">https://github.com/Reactive-Extensions/RxJS-DOM</a></p>
<p>For now, holding off on this aspect and continuing with rest of implementation. I need to learn a lot more about RxJS, lambdas/anonymous functions in EC6, etc.</p>
<p>May be interesting to look at this touch emulator: <a href="http://hammerjs.github.io/touch-emulator/" rel="nofollow">http://hammerjs.github.io/touch-emulator/</a></p>
<p>Also I may be more likely to just work with Angular event handling before I start to tackle this layer.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#later-edit" id="user-content-later-edit"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>later edit:</h3>
<p><a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/gettingstarted/events.md">Reactive JS Events with 'touch' notes</a></p>
<div class="highlight highlight-source-js"><pre><span class="pl-smi">Rx</span>.<span class="pl-smi">dom</span> <span class="pl-k">=</span> {};

<span class="pl-k">var</span> events <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>blur focus focusin focusout load resize scroll unload click dblclick <span class="pl-pds">"</span></span> <span class="pl-k">+</span>
  <span class="pl-s"><span class="pl-pds">"</span>mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave <span class="pl-pds">"</span></span> <span class="pl-k">+</span>
  <span class="pl-s"><span class="pl-pds">"</span>change select submit keydown keypress keyup error contextmenu<span class="pl-pds">"</span></span>;

<span class="pl-k">if</span> (<span class="pl-smi">root</span>.<span class="pl-smi">PointerEvent</span>) {
  events <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">"</span> pointerdown pointerup pointermove pointerover pointerout pointerenter pointerleave<span class="pl-pds">"</span></span>;
}

<span class="pl-k">if</span> (<span class="pl-smi">root</span>.<span class="pl-smi">TouchEvent</span>) {
  events <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">"</span> touchstart touchend touchmove touchcancel<span class="pl-pds">"</span></span>;
}

<span class="pl-smi">events</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">'</span> <span class="pl-pds">'</span></span>).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">e</span>) {
  <span class="pl-smi">Rx</span>.<span class="pl-smi">dom</span>[e] <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">element</span>, <span class="pl-smi">selector</span>) {
    <span class="pl-k">return</span> <span class="pl-smi">Rx</span>.<span class="pl-smi">Observable</span>.<span class="pl-en">fromEvent</span>(element, e, selector);
  };
});</pre></div>
<p>I was able to get this working by merging the behaviors and looking for any touchEvent:</p>
<div class="highlight highlight-source-js"><pre><span class="pl-k">let</span> tick <span class="pl-k">=</span> <span class="pl-smi">Rx</span>.<span class="pl-smi">Observable</span>.<span class="pl-en">merge</span>(<span class="pl-en">bindKey</span>(<span class="pl-s"><span class="pl-pds">"</span>space<span class="pl-pds">"</span></span>),
                               <span class="pl-smi">Rx</span>.<span class="pl-c1">DOM</span>.<span class="pl-en">fromEvent</span>(canvas,<span class="pl-s"><span class="pl-pds">"</span>touchstart<span class="pl-pds">"</span></span>))
                        .<span class="pl-en">buffer</span>(<span class="pl-smi">Rx</span>.<span class="pl-smi">Observable</span>.<span class="pl-en">interval</span>(<span class="pl-c1">33</span>));

 <span class="pl-k">...</span>

    <span class="pl-k">if</span> (keys[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">"</span>space<span class="pl-pds">"</span></span> <span class="pl-k">||</span>
        (keys[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> <span class="pl-c1">undefined</span> <span class="pl-k">&amp;&amp;</span> 
        keys[<span class="pl-c1">0</span>].<span class="pl-smi">touches</span>[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> <span class="pl-c1">undefined</span>)) {
</pre></div>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <ul>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/0.-History-leadup">History, Lead Up</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/1.-First-steps%2C-purescript-is-magic">Purescript is Magic</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/Z.1.-ReactiveJS-Sections">ReactiveJS</a>
&lt;- Click here for breakdown of sections within these parts.</p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/2.-Initial-ReactiveJS-Port">ReactiveJS Part 1: Reactive Donkey</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/B.-ReactiveJS-Part-2%3A-Completed-LearnRX">ReactiveJS Part 2: Learn RX</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/F.-RXJs-Design-Principles">ReactiveJs Part 3: Design Guidelines and Examples</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/G.-RxJS-Donkey-Refactor">ReactiveJs Part 4: Refactor Donkey</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.-Audio-Break">Audio Break</a></p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.1.-WebAudioX">WebAudioX</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.2.-iOS-Audio-Combined-with-RXJs-Issues">iOS Issues</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.3.-Debugging-jquery.mb.audio">Debugging jquery.mb.audio</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.4.-HowlerJS---WebAudio-with-HTML5-Audio-fallback">HowlerJS for WebAudio</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/C.-Video-Editing-and-Game-Modding">Video Editing and Game Modding</a></p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/C.1.-Sims4-Modding">Sims 4 Python</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/D.-Ramda">Ramda Functional Javascript</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/E.-Javascript-Testing">Javascript Testing</a></p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/E.1.-Testing-with-QUnit">Testing with QUnit</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/H.-Angular-Donkey">AngularJs Part 1: Angular Donkey</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/I.-Android-Development">Android Development</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/Z.-Appendix">Appendix, references</a></p>
</li>
</ul>

          </div>
        </div>
    </div>]