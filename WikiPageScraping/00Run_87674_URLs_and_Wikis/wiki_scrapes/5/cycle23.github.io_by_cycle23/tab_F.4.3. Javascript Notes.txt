[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#external-anonymous-wrapper-and-self-execution" id="user-content-external-anonymous-wrapper-and-self-execution"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>External Anonymous Wrapper and Self Execution</h2>
<p>Wrapping external item in anonymous function allows internal hiding of definitions.</p>
<p>Not used in alphabet, but in the earlier canvas paint example, window and undefined were passed into the external anonymous function. This is explained here in <a href="http://markdalgleish.com/2011/03/self-executing-anonymous-functions/" rel="nofollow">Self Executing Anonymous Functions</a>.</p>
<p>'window' is exposed to allow input and output of the external variables we desire to use and 'undefined' is declared, although I'm still not 100% sure I follow the reasoning for that one, other than to make sure it is defined regardless of platform.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#null-coalescing-operator-object-creation" id="user-content-null-coalescing-operator-object-creation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Null Coalescing Operator Object Creation</h2>
<p><a href="http://stackoverflow.com/questions/476436/is-there-a-null-coalescing-operator-in-javascript/476445#476445" rel="nofollow">http://stackoverflow.com/questions/476436/is-there-a-null-coalescing-operator-in-javascript/476445#476445</a></p>
<p>Simply explained:</p>
<pre><code>object || (object = Object.create(...))

alert(Boolean(null)); // false
alert(Boolean(undefined)); // false
alert(Boolean(0)); // false
alert(Boolean("")); // false
alert(Boolean("false")); // true -- gotcha! :)
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#lexical-closure-self--this" id="user-content-lexical-closure-self--this"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Lexical Closure: self = this</h2>
<p><a href="http://stackoverflow.com/questions/962033/what-underlies-this-javascript-idiom-var-self-this" rel="nofollow">http://stackoverflow.com/questions/962033/what-underlies-this-javascript-idiom-var-self-this</a>
<a href="http://webkit.org/misc/DatabaseExample.html" rel="nofollow">http://webkit.org/misc/DatabaseExample.html</a></p>
<pre><code>var self = this;
this.keyboardObservable.subscribe(function () {
  if (self.gameState === Gamestate.paused) {
    self.hideMessage();
    self.playLevel();
  }
});
</code></pre>
<p>Just being used to make sure we still have object since the closure is out of context for 'this'.</p>
<p>Examples also show using "_this" instead of "self", since "self" does have special meaning.</p>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <ul>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/0.-History-leadup">History, Lead Up</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/1.-First-steps%2C-purescript-is-magic">Purescript is Magic</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/Z.1.-ReactiveJS-Sections">ReactiveJS</a>
&lt;- Click here for breakdown of sections within these parts.</p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/2.-Initial-ReactiveJS-Port">ReactiveJS Part 1: Reactive Donkey</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/B.-ReactiveJS-Part-2%3A-Completed-LearnRX">ReactiveJS Part 2: Learn RX</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/F.-RXJs-Design-Principles">ReactiveJs Part 3: Design Guidelines and Examples</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/G.-RxJS-Donkey-Refactor">ReactiveJs Part 4: Refactor Donkey</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.-Audio-Break">Audio Break</a></p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.1.-WebAudioX">WebAudioX</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.2.-iOS-Audio-Combined-with-RXJs-Issues">iOS Issues</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.3.-Debugging-jquery.mb.audio">Debugging jquery.mb.audio</a></li>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/A.4.-HowlerJS---WebAudio-with-HTML5-Audio-fallback">HowlerJS for WebAudio</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/C.-Video-Editing-and-Game-Modding">Video Editing and Game Modding</a></p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/C.1.-Sims4-Modding">Sims 4 Python</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/D.-Ramda">Ramda Functional Javascript</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/E.-Javascript-Testing">Javascript Testing</a></p>
<ul>
<li><a class="internal present" href="/cycle23/cycle23.github.io/wiki/E.1.-Testing-with-QUnit">Testing with QUnit</a></li>
</ul>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/H.-Angular-Donkey">AngularJs Part 1: Angular Donkey</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/I.-Android-Development">Android Development</a></p>
</li>
<li>
<p><a class="internal present" href="/cycle23/cycle23.github.io/wiki/Z.-Appendix">Appendix, references</a></p>
</li>
</ul>

          </div>
        </div>
    </div>]