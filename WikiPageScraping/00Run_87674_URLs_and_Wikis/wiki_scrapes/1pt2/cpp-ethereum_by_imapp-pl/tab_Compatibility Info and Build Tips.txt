[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Please use this page to specify any hints on the compatibility of the Ethereum software base and how you got it to build or what you did while attempting.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#ubuntu" id="user-content-ubuntu"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Ubuntu</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#1204-precise-troubleshooting" id="user-content-1204-precise-troubleshooting"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>12.04 (Precise) TROUBLESHOOTING</h3>
<p>Pretty problematic building/installation, with plenty of issues. Highly recommended to upgrade to the 14.04 (which is also a LTS version).</p>
<h4>
<a aria-hidden="true" class="anchor" href="#basic-references--requirements" id="user-content-basic-references--requirements"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Basic references &amp; requirements</h4>
<p>Here there is a step-by-step guide (although it gives some problems, it's the best available):
<a href="http://askubuntu.com/questions/414293/how-to-install-ethereum" rel="nofollow">http://askubuntu.com/questions/414293/how-to-install-ethereum</a></p>
<p>And here two threads of common problems found with 12.04:
<a href="http://forum.ethereum.org/discussion/203/how-to-install-ethereum-on-ubuntu-12-04" rel="nofollow">http://forum.ethereum.org/discussion/203/how-to-install-ethereum-on-ubuntu-12-04</a>
<a href="http://forum.ethereum.org/discussion/comment/905/" rel="nofollow">http://forum.ethereum.org/discussion/comment/905/</a></p>
<p>And of course use this wiki, both the <a href="https://github.com/ethereum/cpp-ethereum/wiki/Building-on-Ubuntu">Building on Ubuntu</a> (checking 13.04 and other versions) and especially this troubleshooting you are reading.</p>
<p><strong>For less experienced users</strong>: you may need to know how to <a href="http://www.howtogeek.com/howto/ubuntu/see-what-version-of-a-package-is-installed-on-ubuntu/" rel="nofollow">look up the version of an installed package</a> and <a href="http://askubuntu.com/questions/92019/how-to-install-specific-ubuntu-packages-with-exact-version" rel="nofollow">how to install specific versions of packages</a>.</p>
<p><strong>Requirements</strong>: you will need gcc-4.7, g++-4.7, libboost1.53-all-dev (apart from libboost1.53-dev), qtbase5-dev. You need PPA repositories for all of them, e.g.:</p>
<pre><code>sudo apt-add-repository ppa:ubuntu-sdk-team/ppa
sudo apt-add-repository ppa:apokluda/boost1.53
sudo apt-get update
</code></pre>
<p>For gcc, the referenced <a href="http://www.swiftsoftwaregroup.com/upgrade-gcc-4-7-ubuntu-12-04/" rel="nofollow">http://www.swiftsoftwaregroup.com/upgrade-gcc-4-7-ubuntu-12-04/</a> is useful but you still may find issues. There is plenty of info googling  <em>ubuntu 12.04 gcc 4.7</em> . Note the following troubleshooting on gcc Cmake problems.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#version-conflict-with-libminiupnpc8--libminiupnpc-dev" id="user-content-version-conflict-with-libminiupnpc8--libminiupnpc-dev"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Version conflict with libminiupnpc8 / libminiupnpc-dev</h4>
<p>That's a library that has a version conflict (1.6-3ubuntu1 and 1.6-precise2), probably related to previous Bitcoin-related software in the same Ubuntu. <code>sudo aptitude install libminiupnpc-dev</code> should help solving it. Otherwise, <code>apt-cache policy libminiupnpc8</code> will show the different versions it has available in the repositories. You can either use repository pinning (to change priorities) or remove repositories to force apt-get to install the desired version. Some related info in: <a href="http://forum.ethereum.org/discussion/203/how-to-install-ethereum-on-ubuntu-12-04" rel="nofollow">http://forum.ethereum.org/discussion/203/how-to-install-ethereum-on-ubuntu-12-04</a></p>
<h4>
<a aria-hidden="true" class="anchor" href="#cmake-error-gcc--g-version" id="user-content-cmake-error-gcc--g-version"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cmake Error: gcc / g++ version</h4>
<p>While executing <code>cmake ../cpp-ethereum -DCMAKE_BUILD_TYPE=Release</code>, and error such as this may appear (even if you installed gcc-4.7 and g++-4.7):</p>
<pre><code>CMake Error at CMakeLists.txt:104 (message): ethereum requires g++ 4.7 or greater
</code></pre>
<p>You can check the default version with <code>g++ --version</code>. You may be able to fix it using update-alternatives. Following <a href="http://askubuntu.com/questions/26498/choose-gcc-and-g-version" rel="nofollow">http://askubuntu.com/questions/26498/choose-gcc-and-g-version</a> you may do:
Remove the alternatives if any, and make sure the 4.7 versions are installed:</p>
<pre><code>sudo update-alternatives --remove-all gcc 
sudo update-alternatives --remove-all gcc 
sudo update-alternatives --remove-all g++
sudo apt-get install gcc-4.7 g++-4.7
</code></pre>
<p>Check that there is <code>/usr/bin/gcc-4.6</code>, <code>/usr/bin/gcc-4.7</code>  and  <code>/usr/bin/gcc</code>:</p>
<pre><code>ls /usr/bin/gcc*
</code></pre>
<p>Include the different alternatives with different priorities:</p>
<pre><code>`sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 10`
`sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 20`
`sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 10`
`sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.7 20`
`sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30`
`sudo update-alternatives --set cc /usr/bin/gcc`
`sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30`
`sudo update-alternatives --set c++ /usr/bin/g++`
</code></pre>
<p>Check which are now the automatic versions (should be 4.7):</p>
<pre><code>`sudo update-alternatives --config gcc`
`sudo update-alternatives --config g++`
</code></pre>
<p>If everything is correct, now clean and try again the cmake that gave you the error, e.g.:</p>
<pre><code>`cmake clean`
`cmake ../cpp-ethereum -DCMAKE_BUILD_TYPE=Release`
</code></pre>
<h4>
<a aria-hidden="true" class="anchor" href="#cmake-error-boost-libraries" id="user-content-cmake-error-boost-libraries"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cmake Error: Boost libraries</h4>
<p>While executing <code>cmake ../cpp-ethereum -DCMAKE_BUILD_TYPE=Release</code>, the error looks like this:</p>
<pre><code>CMake Error at /usr/share/cmake-2.8/Modules/FindBoost.cmake:1194 (message):
  Unable to find the requested Boost libraries.

  Boost version: 1.53.0

  Boost include path: /usr/include

  The following Boost libraries could not be found:
</code></pre>
<p>It may complain about boost_thread, boost_date_time, boost_python... doesn't matter which. You should make sure "libboost1.53-all-dev" is correctly installed.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#cmake-error-qt5quick" id="user-content-cmake-error-qt5quick"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Cmake Error: Qt5Quick</h4>
<p>While executing <code>cmake ../cpp-ethereum -DCMAKE_BUILD_TYPE=Release</code>, the error looks like this:</p>
<pre><code>CMake Error at libqethereum/CMakeLists.txt:29 (find_package):
  By not providing "FindQt5Quick.cmake" in CMAKE_MODULE_PATH this project has
  asked CMake to find a package configuration file provided by "Qt5Quick",
  but CMake did not find one.

  Could not find a package configuration file provided by "Qt5Quick" with any
  of the following names:

    Qt5QuickConfig.cmake
    qt5quick-config.cmake

  Add the installation prefix of "Qt5Quick" to CMAKE_PREFIX_PATH or set
  "Qt5Quick_DIR" to a directory containing one of the above files.  If
  "Qt5Quick" provides a separate development package or SDK, be sure it has
  been installed.
</code></pre>
<p>I solved it by installing the following packages: qtbase5-dev qt5-default qtdeclarative5-dev libqt5webkit5-dev</p>
<h4>
<a aria-hidden="true" class="anchor" href="#make-error-libcryptopp" id="user-content-make-error-libcryptopp"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Make Error: libcryptopp</h4>
<p>While executing the make of cpp-ethereum (after a successful cmake), the error looks like:</p>
<pre><code>[ 40%] Building CXX object libethcore/CMakeFiles/ethcore.dir/BlockInfo.cpp.o
Linking CXX shared library libethcore.so
/usr/bin/ld: /opt/cryptopp562/libcryptopp.a(cryptlib.o): relocation R_X86_64_32S against `_ZTVN8CryptoPP9ExceptionE can not be used when making a shared object; recompile with -fPIC
/opt/cryptopp562/libcryptopp.a: could not read symbols: Bad value
collect2: error: ld returned 1 exit status
make[2]: *** [libethcore/libethcore.so] Error 1
make[1]: *** [libethcore/CMakeFiles/ethcore.dir/all] Error 2
make: *** [all] Error 2
</code></pre>
<p>Thus, it is related to the installation of cryptopp562. You can notice it says "recompile with -fPIC". If you open the "GNUmakefile" of cryptopp562, it says "-fPIC" is supported, and you can uncomment the line</p>
<pre><code># CXXFLAGS += -fPIC
</code></pre>
<p>so it looks like:</p>
<pre><code>CXXFLAGS += -fPIC
</code></pre>
<p>Afterwards, in the cryptopp562 directory, you may:</p>
<pre><code>make clean
make
</code></pre>
<p>And now run again the cpp-ethereum make.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#make-error-linking-cxx-executable-eth" id="user-content-make-error-linking-cxx-executable-eth"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Make Error: "Linking CXX executable eth"</h4>
<p>While executing the make of cpp-ethereum (after a successful cmake), the error looks like:</p>
<pre><code>[ 75%] Building CXX object test/CMakeFiles/testeth.dir/rlp.cpp.o
Linking CXX executable testeth
/usr/bin/ld: warning: libsnappy.so.1, needed by /usr/lib/gcc/x86_64-linux-gnu/4.7/../../../x86_64-linux-gnu/libleveldb.so, not found (try using -rpath or -rpath-link)
/usr/lib/gcc/x86_64-linux-gnu/4.7/../../../x86_64-linux-gnu/libleveldb.so: undefined reference to `snappy::GetUncompressedLength(char const*, unsigned long, unsigned long*)'
/usr/lib/gcc/x86_64-linux-gnu/4.7/../../../x86_64-linux-gnu/libleveldb.so: undefined reference to `snappy::MaxCompressedLength(unsigned long)'
/usr/lib/gcc/x86_64-linux-gnu/4.7/../../../x86_64-linux-gnu/libleveldb.so: undefined reference to `snappy::RawUncompress(char const*, unsigned long, char*)'
/usr/lib/gcc/x86_64-linux-gnu/4.7/../../../x86_64-linux-gnu/libleveldb.so: undefined reference to `snappy::RawCompress(char const*, unsigned long, char*, unsigned long*)'
collect2: error: ld returned 1 exit status
make[2]: *** [test/testeth] Error 1
make[1]: *** [test/CMakeFiles/testeth.dir/all] Error 2
make: *** [all] Error 2
</code></pre>
<p>The issue is due to libleveldb-dev, as found in:
<a href="http://forum.ethereum.org/discussion/comment/905/#Comment_905" rel="nofollow">http://forum.ethereum.org/discussion/comment/905/#Comment_905</a>
You may need <code>aptitude remove libleveldb-dev</code>.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#make-error-libleveldbso" id="user-content-make-error-libleveldbso"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Make Error: libleveldb.so</h4>
<p>While executing the make of cpp-ethereum (after a successful cmake), the error looks like:</p>
<pre><code>[ 40%] Building CXX object libethcore/CMakeFiles/ethcore.dir/BlockInfo.cpp.o
make[2]: *** no rule to build target «/usr/lib/x86_64-linux-gnu/libleveldb.so», needed by «libethcore/libethcore.so». 
</code></pre>
<p>This was caused by having a libleveldb version for i386 (libleveldb1:i386) while having a amd64 architecture. A simple <code>apt-get install libleveldb1</code> reveals it. Downloading and installing the packages libleveldb-dev and/or libleveldb1 and/or libsnappy1 for amd64 solved it. You may need <code>aptitude install libminiupnpc-dev</code></p>
<h4>
<a aria-hidden="true" class="anchor" href="#make-error-neth--ncurses" id="user-content-make-error-neth--ncurses"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Make Error: neth &amp; ncurses</h4>
<p>While executing the make of cpp-ethereum (after a successful cmake), the error looks like:</p>
<pre><code>Scanning dependencies of target neth
[ 80%] Building CXX object neth/CMakeFiles/neth.dir/main.cpp.o
/opt/cpp-ethereum/neth/main.cpp:46:21: fatal error: ncurses.h: No such file or directory
compilation terminated.
make[2]: *** [neth/CMakeFiles/neth.dir/main.cpp.o] Error 1
make[1]: *** [neth/CMakeFiles/neth.dir/all] Error 2
make: *** [all] Error 2
</code></pre>
<p>Install <code>libncurses5-dev</code>.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#make-error-alethzero--qlineedit" id="user-content-make-error-alethzero--qlineedit"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Make Error: alethzero &amp; QLineEdit</h4>
<p>While executing the make of cpp-ethereum (after a successful cmake), the error looks like:</p>
<pre><code>[ 87%] Building CXX object alethzero/CMakeFiles/alethzero.dir/MainWin.cpp.o
In file included from /opt/cpp-ethereum/alethzero/MainWin.cpp:43:0:
/opt/cpp-ethereum-build/alethzero/ui_Main.h: In member function ‘void Ui_Main::setupUi(QMainWindow*)’:
/opt/cpp-ethereum-build/alethzero/ui_Main.h:685:27: error: ‘class QLineEdit’ has no member named ‘setClearButtonEnabled’
make[2]: *** [alethzero/CMakeFiles/alethzero.dir/MainWin.cpp.o] Error 1
make[1]: *** [alethzero/CMakeFiles/alethzero.dir/all] Error 2
make: *** [all] Error 2
</code></pre>
<p>The QT used is not the right version. The Class QLineEdit in 5.0.2 doesn't have such method 'setClearButtonEnabled' (<a href="http://qt.apidoc.info/5.0.2/qtwidgets/qlineedit.html" rel="nofollow">http://qt.apidoc.info/5.0.2/qtwidgets/qlineedit.html</a> ), while in 5.2 it does (<a href="http://qt.apidoc.info/5.2.0/qtwidgets/qlineedit.html" rel="nofollow">http://qt.apidoc.info/5.2.0/qtwidgets/qlineedit.html</a> ). If you execute <code>qmake -v</code> it would show which version you are using:</p>
<pre><code>QMake version 3.0
Using Qt version 5.0.2 
</code></pre>
<p>You may try to install the packages <code>qtbase5-dev qt5-default qtdeclarative5-dev libqt5webkit5-dev</code> but depending on the repositories used it may not work. For me, it worked downloading the official qt5 release and installing it:</p>
<pre><code>wget http://download.qt-project.org/official_releases/online_installers/qt-opensource-linux-x64-1.6.0-4-online.run 
chmod +x qt-opensource-linux-x64-1.6.0-4-online.run 
./qt-opensource-linux-x64-1.6.0-4-online.run 
echo "PATH=/opt/Qt5.2/5.2.1/gcc_64/bin:$PATH" &gt;&gt; ~/.bashrc
source ~/.bashrc
</code></pre>
<p>(change the PATH line accordingly). Now executing <code>qmake -v</code> should show something like:</p>
<pre><code>QMake version 3.0
Using Qt version 5.2.1 in /opt/Qt5.2/5.2.1/gcc_64/lib
</code></pre>
<p>A cpp-ethereum make straight away may not work (as it needs to be relinked to the right QT). Try cleaning and redoing the clone, cmake and make if it doesn't work otherwise.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#1304" id="user-content-1304"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>13.04</h3>
<p>Works with build instructions as per the Wiki</p>
<p>####Linking against the correct version of Cryptopp</p>
<p>If during the build process you get <code>undefined reference to vtable for CryptoPP::SHA3</code> linking errors, you may be linking against the wrong version of the Cryptopp library. Please check that your cpp-ethereum, cpp-ethereum-build and cryptopp562 are all in the same directory, then remove the system version of librypto++-dev</p>
<p><code>apt-get remove libcrypto++-dev</code></p>
<p>Check the output of this command: you may need to remove some directories omitted by <code>apt-get remove</code> manually. Recompile, and hopefully now the build will link against the correct version of Cryptopp. More info can be found  <a href="https://github.com/ethereum/cpp-ethereum/issues/46#issuecomment-37817319">here</a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#debian" id="user-content-debian"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Debian</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#wheezy" id="user-content-wheezy"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Wheezy</h3>
<p>Works similar to Ubuntu, but needs newer versions of libboost and libminiupnpc. The following creates a headless build:</p>
<ul>
<li>Install the following packages:</li>
</ul>
<pre><code>sudo apt-get install build-essential libgmp-dev libgmp3-dev libcrypto++-dev \
  git cmake  automake libtool libleveldb-dev yasm unzip python-all-dev libbz2-dev
</code></pre>
<p>Create a directory for the libraries which will be built, as you probably don't want them as system libraries. This will be used as a prefix for the builds. Add <code>&lt;prefix&gt;/lib</code> and <code>&lt;prefix&gt;/usr/lib</code> to your LD_LIBRARY_PATH. Add <code>&lt;prefix&gt;/include</code> and <code>&lt;prefix&gt;/usr/include</code> to your C_INCLUDE_PATH and CPLUS_INCLUDE_PATH.</p>
<p>Download miniupnpc-1.6.20120502.tar.gz from <a href="http://miniupnp.tuxfamily.org/" rel="nofollow">http://miniupnp.tuxfamily.org/</a> , unpack and build it. Install it with <code>PREFIX=&lt;prefix&gt; make install</code></p>
<p>Make sure you have following packages installed:
<code>python-all-dev</code> and <code>libbz2-dev</code></p>
<p>Download boost_1_55_tar.bz2 from boost.org. Build according to the instructions and install with <code>b2 install --prefix=&lt;prefix&gt;</code></p>
<p>Build cryptopp562 and SECP256k1 according to the Ubuntu-instructions.</p>
<p>Pull the ethereum source from git and edit the file cpp-ethereum/CMakeLists.txt. Add your prefix-dir at a location of your choice <code>LINK_DIRECTORIES(&lt;prefix&gt;/lib)</code></p>
<p>The rest works like on Ubuntu. Don't forget to add <code>-DHEADLESS=1</code> to the cmake-call!</p>
<h2>
<a aria-hidden="true" class="anchor" href="#other-distributions" id="user-content-other-distributions"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Other Distributions</h2>
<p>The current ethereum client depends on an older version of libminiupnpc. The client has been successfully tested with libminiupnpc 1.6.2 which is the version Ubuntu currently uses.</p>

        </div>

    </div>]