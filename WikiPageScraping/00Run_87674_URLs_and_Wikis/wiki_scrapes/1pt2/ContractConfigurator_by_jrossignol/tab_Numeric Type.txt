[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>The numeric data types include types such as <code>int</code>, <code>short</code>, <code>float</code> and <code>double</code>.  For this section, they are together referred to as <code>numeric</code>.</p>
<p><strong>Local Functions</strong></p>
<table>
<thead>
<tr>
<th align="left">Function Signature</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Random()</code>
</td>
<td align="left">Returns a random number that is greater than or equal to 0.0, but less than 1.0.  Note for integer types this will <em>always</em> return 0 - use the second interface instead.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Random(</code><a href="Numeric-Type"><code>numeric</code></a><code>min,</code><a href="Numeric-Type"><code>numeric</code></a><code>max)</code>
</td>
<td align="left">Returns a random number that is greater than or equal to <em>min</em>, but less than <em>max</em>.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Min(</code><a href="Numeric-Type"><code>numeric</code></a><code>a,</code><a href="Numeric-Type"><code>numeric</code></a><code>b)</code>
</td>
<td align="left">Returns whichever is smallest out of <code>a</code> and <code>b</code>.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Max(</code><a href="Numeric-Type"><code>numeric</code></a><code>a,</code><a href="Numeric-Type"><code>numeric</code></a><code>b)</code>
</td>
<td align="left">Returns whichever is largest out of <code>a</code> and <code>b</code>.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Pow(</code><a href="Numeric-Type"><code>numeric</code></a><code>a,</code><a href="Numeric-Type"><code>numeric</code></a><code>b)</code>
</td>
<td align="left">Returns a to the power of b.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Log(</code><a href="Numeric-Type"><code>numeric</code></a><code>a,</code><a href="Numeric-Type"><code>numeric</code></a><code>b)</code>
</td>
<td align="left">Returns the logarithm of a in base b.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Round(</code><a href="Numeric-Type"><code>numeric</code></a><code>value)</code>
</td>
<td align="left">Rounds the number to the nearest full integer value (uses bankers rounding).</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>numeric</code></a> <code>Round(</code><a href="Numeric-Type"><code>numeric</code></a><code>value,</code><a href="Numeric-Type"><code>numeric</code></a><code>precision)</code>
</td>
<td align="left">Rounds the number to the nearest multiple of <code>precision</code>.  For example <code>Round(113.0, 5.0)</code> would return <code>115.0</code>.</td>
</tr>
</tbody>
</table>
<p><strong>Global Functions</strong></p>
<table>
<thead>
<tr>
<th align="left">Function Signature</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">
<a href="Numeric-Type"><code>int</code></a><code>int(</code><a href="Numeric-Type"><code>numeric</code></a><code>val)</code>
</td>
<td align="left">Converts the value to an integer representation.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>long</code></a><code>long(</code><a href="Numeric-Type"><code>numeric</code></a><code>val)</code>
</td>
<td align="left">Converts the value to a long integer representation.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>uint</code></a><code>uint(</code><a href="Numeric-Type"><code>numeric</code></a><code>val)</code>
</td>
<td align="left">Converts the value to an unsigned integer representation.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>ulong</code></a><code>ulong(</code><a href="Numeric-Type"><code>numeric</code></a><code>val)</code>
</td>
<td align="left">Converts the value to an unsigned long integer representation.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>float</code></a><code>float(</code><a href="Numeric-Type"><code>numeric</code></a><code>val)</code>
</td>
<td align="left">Converts the value to a float (single precision) representation.</td>
</tr>
<tr>
<td align="left">
<a href="Numeric-Type"><code>double</code></a><code>double(</code><a href="Numeric-Type"><code>numeric</code></a><code>val)</code>
</td>
<td align="left">Converts the value to a float (double precision) representation.</td>
</tr>
</tbody>
</table>
<p><strong>Methods</strong></p>
<table>
<thead>
<tr>
<th align="left">Method Signature</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">
<a href="String-Type"><code>string</code></a> <code>Print()</code>
</td>
<td align="left">Returns the pretty-printed string value of the number, using the following rules:<ol>
<li>Integer numbers less than 10 are printed in english ("one", "two", etc.)</li>
<li>Numbers greater than 1000 use the number grouping separator (not sure if KSP respects locale in this).  For example "1,000", "1,000,000".</li>
<li>Real numbers are printed with two decimal places.</li>
<li>Real numbers less than 1.0 are printed with five decimal places.</li>
</ol>
</td>
</tr>
<tr>
<td align="left">
<a href="String-Type"><code>string</code></a> <code>ToString(</code><a href="String-Type"><code>string</code></a><code>format)</code>
</td>
<td align="left">Converts to a string using the given C# format expression.</td>
</tr>
</tbody>
</table>

        </div>

    </div>]