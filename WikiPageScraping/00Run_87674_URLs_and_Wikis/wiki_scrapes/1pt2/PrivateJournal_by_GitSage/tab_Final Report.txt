[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>#Description
The purpose of my site is to give people an easy, secure system that they can use to write their journals. Especially, the site needs to keep all of their data on their local machine. That way they don't need to trust any third party with their data.</p>
<p>So far, I have implemented the following features: log in; log out; add entry; and view entry. Three important features are missing: filter entries; delete entries; and edit entry. As well, vital security measures have not been put in place. No data is encrypted; passwords are sent and stored in plaintext; a number of bad sql injection vulnerabilities exist. These issues can be cleaned up in time.</p>
<p>The back end is written in Flask. The front end uses Jinja (included with Flask).</p>
<p><img alt="" data-canonical-src="http://i.imgur.com/lKgQczT.png" src="https://camo.githubusercontent.com/eb8009c5d489fac363534ef3a1b4b732f0fabed6/687474703a2f2f692e696d6775722e636f6d2f6c4b6751637a542e706e67"/>
Here we can see the login page. Very standard, nothing special.</p>
<p><img alt="" data-canonical-src="http://i.imgur.com/EcFO0hq.png" src="https://camo.githubusercontent.com/3fc0c0a79f6dc15577a53673d24177313f4eb9ac/687474703a2f2f692e696d6775722e636f6d2f4563464f3068712e706e67"/>
This is the homepage. Users can upload new entries on this page. All they have to do is press "Save" and the process is complete!</p>
<p><img alt="" data-canonical-src="http://i.imgur.com/Fzp43g7.png" src="https://camo.githubusercontent.com/57d40fe1c30c6597adfbd684f8325d026d6a3646/687474703a2f2f692e696d6775722e636f6d2f467a70343367372e706e67"/>
When a user clicks a link on the left side of the page, they are taken here. They can view the entry but not edit it.</p>
<p>#Database Schema
Data is stored in a simple relational database. This database has two tables: one for users, one for entries.</p>
<p><img alt="" data-canonical-src="http://i.imgur.com/je8zNvB.png" src="https://camo.githubusercontent.com/e722b2759c9ea07185ddd85ac6dd0b495253a7b5/687474703a2f2f692e696d6775722e636f6d2f6a65387a4e76422e706e67"/>
As you can see, there are only two entities: a user table and an entry table. The user table has a one-to-many relationship with the entry table. Several of the fields are currently unused and probably will be forever. In fact, I haven't yet decided whether or not the user table will even have more than a single record. The point of a journal is that only one person can read and write, correct? Nonetheless, I used a table because I wanted to keep my options open for the future.</p>
<p>#Future Work
Obviously, the first thing that needs to happen is the implementation of all missing features, in particular: filtering, editing, deleting, and strong data security.</p>
<p>Speaking of data security: my plan is to encrypt all data when it is stored in the database. That way, if anyone should get access to the SQLite file, they would find themselves holding a bunch of gibberish.</p>
<p>I have had my mind on a few other possible future additions, in particular: read-only users; multiple write users; and the ability to easily store images on the server (at the moment, the web application does not provide any way to upload images to the server).</p>
<p>Overall, I'm very happy with this project. It's been a pleasure completing it.</p>

        </div>

    </div>]