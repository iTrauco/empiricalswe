[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#vimeo-pro" id="user-content-vimeo-pro"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Vimeo PRO</h1>
<p>Regular Vimeo integrates no problem, just spawn a Video model with <code>'module': 'garp'</code> (you can find the template for this in <code>/garp/application/modules/g/models/config/Video.json</code>) and you're done.
The CMS allows Vimeo URLs no problem, so everything automatically works very well.</p>
<p>Vimeo PRO is a special case. That is, when the PRO user decides to make their videos private (and that is a common reason to pay for a PRO account). The regular Vimeo API cannot find private videos, therefore we have to use the advanced API.</p>
<p>The following are the steps you must take to integrate the advanced API into Garp:</p>
<p>Login as your PRO user at <code>vimeo.com</code>. Create a new app at <code>https://developer.vimeo.com/apps/new</code>. The app info should be self-explanatory. You can leave the <strong>App Callback URL</strong> blank.
Next, take the <strong>Client ID</strong> and <strong>Client Secret</strong> and add them to <code>application.ini</code> in the following fashion:</p>
<pre><code>auth.adapters.vimeo.class = "Vimeo"
auth.adapters.vimeo.consumerKey = "your client ID"
auth.adapters.vimeo.consumerSecret = "your client secret"
auth.adapters.vimeo.mapping["display_name"] = "name"
</code></pre>
<p>Note: the <code>"name"</code> mapping should correspond to your user table. It might be first_name, depending on your setup.
Spawn an <code>AuthVimeo</code> model as per the template in <code>/garp/application/modules/g/models/config/AuthVimeo.json</code>.
Configure the Videoable behavior in <code>Video.json</code> as follows:</p>
<pre><code>"Videoable": {
    "vimeo": {
        "useVimeoPro": true
    }
}
</code></pre>
<p>Done! You can now find the private videos using the API.
The <code>AuthVimeo</code> model can be used to set the access token / secret of the currently logged in admin. That way one could access their own private videos if they login with Vimeo.
Note: this functionality is in beta. Please ask Harmen and Peter for more info, it's been developed for <a href="http://code.grrr.nl/tefaf" rel="nofollow">Tefaf</a> at some point but no full version was shipped. The <code>AuthVimeo</code> model however is still a necessity in making this work.</p>
<p>For reference, sites that use Vimeo PRO are <a href="http://code.grrr.nl/tefaf" rel="nofollow">Tefaf</a> and <a href="http://code.grrr.nl/triodustips" rel="nofollow">Triodus Tips</a>.</p>

        </div>

    </div>]