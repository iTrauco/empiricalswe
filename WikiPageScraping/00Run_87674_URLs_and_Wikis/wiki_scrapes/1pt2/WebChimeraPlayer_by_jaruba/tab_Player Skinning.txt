[<div class="wiki-body gollum-mediawiki-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          
<p>WebChimera NPAPI Player Themes all come with a UIsettings.qml file, a main.qml file and a components folder. <b>If you wish to skin the Player without needing to modify any of the internal code, check out <a class="internal present" href="/jaruba/WebChimeraPlayer/wiki/.skin%28%29">.skin()</a> in the JavaScript API.</b>
</p>
<p><br/>
</p><table summary="Contents"><tbody><tr><td>
<div><h2>
<a aria-hidden="true" class="anchor" href="#table-of-contents" id="user-content-table-of-contents"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Table of Contents</h2></div>
<ul><ul>
<li>
<a href="#Basic_Settings">Basic Settings</a><ul>
<li><a href="#Colors">Colors</a></li>
<li><a href="#Fonts">Fonts</a></li>
<li><a href="#Icons">Icons</a></li>
</ul>
</li>
<li><a href="#Positioning_Components">Positioning Components</a></li>
<li><a href="#Modifying_Components">Modifying Components</a></li>
</ul></ul>
</td></tr></tbody></table>
<h2>
<a aria-hidden="true" class="anchor" href="#basic-settings" id="user-content-basic-settings"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Basic_Settings"></a><span>Basic Settings</span>
</h2>



<p>By modifying the values in UIsettings.qml (typically located at <code>/player/themes/[theme-name]/UIsettings.qml</code>) you can change the color of every element in the player, change the icons from the buttons in the player and fonts used.
</p>
<p>The <code>UIsettings.qml</code> variables are loaded with the <code>ui</code> identifier in <code>main.qml</code>.
</p>

<h3>
<a aria-hidden="true" class="anchor" href="#colors" id="user-content-colors"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Colors"></a><span>Colors</span>
</h3>



<p>To change the Player Theme colors, all you need to do is change the color hex values from the <code>color</code> variable in UIsettings.qml
</p>

<h3>
<a aria-hidden="true" class="anchor" href="#fonts" id="user-content-fonts"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Fonts"></a><span>Fonts</span>
</h3>



<p>To change the theme fonts you need to change <code>iconFont</code> (see Icons), <code>defaultFont</code> and <code>secondaryFont</code> from <code>settings</code> in UIsettings.qml to point to the Font URLs.
</p>

<h3>
<a aria-hidden="true" class="anchor" href="#icons" id="user-content-icons"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Icons"></a><span>Icons</span>
</h3>



<p>To change the button icons in the theme, you need to first include a Font Icon Set.
</p>
<p>The Sleek Theme (default theme) uses it's own personal Font Icon Set that includes only the icons needed by the theme. If you want different icons, you will need to choose an icon set (you can see a <a href="http://speckyboy.com/2013/12/09/top-50-free-icon-sets-2013/" rel="nofollow">list here</a>) or create your own optimized icon set on <a href="http://www.fontello.com/" rel="nofollow">Fontello</a>. (Fontello can also convert SVG Files to Font Icons and combine icons from multiple Font Sets)
</p>
<p>After finding the icon set you want to use, include it in <code>UIsettings.qml</code> by changing the value from <code>settings.iconFont</code>
</p>
<p>And finally, change the <code>icon</code> variables to point to the required font icon codes (all the font codes need to be written with "\u" in front, as mentioned in <a href="http://kdeblog.mageprojects.com/2012/11/20/using-fonts-awesome-in-qml/" rel="nofollow">this article</a>)
</p>
<p><br/>
</p>

<h2>
<a aria-hidden="true" class="anchor" href="#positioning-components" id="user-content-positioning-components"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Positioning_Components"></a><span>Positioning Components</span>
</h2>



<p>main.qml (typically located at <code>/player/themes/[theme-name]/main.qml</code>) is the primary file of the theme, it loads the <a class="internal present" href="/jaruba/WebChimeraPlayer/wiki/Player-QML-API-Header">Player QML API Header</a> and positions all the components on the screen. When a parameter is set to a component in <code>main.qml</code>, it overwrites the default component's parameters.
</p>
<p><br/>
</p>

<h2>
<a aria-hidden="true" class="anchor" href="#modifying-components" id="user-content-modifying-components"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-Modifying_Components"></a><span>Modifying Components</span>
</h2>



<p>All themes come bundled with their own custom components (typically located in <code>/player/themes/[theme-name]/components/</code>) that organize the visual side of the player. These components are written in QML and can be edited. (main.qml can overwrite the parameters of these components)
</p>
<p>Keep in mind that in order for <a class="internal present" href="/jaruba/WebChimeraPlayer/wiki/QML-API">QML API</a> and <a class="internal present" href="/jaruba/WebChimeraPlayer/wiki/JavaScript-API">JavaScript API</a> to work, you need to keep the id's in the theme components as they are, as many functions from the QML API reference the components by those id's.
</p>
<p>The default components are loaded with the <code>Loader.</code> identifier in <code>main.qml</code>.</p>
        </div>

    </div>]