[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#customising-the-module-resolver" id="user-content-customising-the-module-resolver"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Customising the Module Resolver</h2>
<p>By default, a heuristic resolver is used to find module paths. This can be changed by setting the <code>moduleResolver</code> configuration option to a resolver of your choice. The custom resolver must export a <code>resolveModulePath(file, module)</code> method that takes two parameters:</p>
<ul>
<li>
<code>file</code> : The path to the file importing the module.</li>
<li>
<code>module</code> : The module string, e.g. <code>./foo</code>.</li>
</ul>
<p><code>resolveModulePath</code> must return a string containing the full path of the resolved module, or throw an appropriate error if the module cannot be resolved. For example:</p>
<div class="highlight highlight-source-js"><pre><span class="pl-en">resolveModulePath</span>(<span class="pl-smi">file</span>, <span class="pl-c1">module</span>) {
 <span class="pl-k">...</span>
 <span class="pl-k">return</span> resolvedModulePath;
 or
 <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">"</span>Couldn't find module ...<span class="pl-pds">"</span></span>);
 });
}</pre></div>

        </div>

    </div>]