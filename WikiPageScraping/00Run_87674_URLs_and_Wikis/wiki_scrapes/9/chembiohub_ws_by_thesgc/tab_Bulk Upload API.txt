[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <ul>
<li><strong><a href="#post-validate-files">POST Validate Files</a></strong></li>
<li><strong><a href="#post-validate-list-of-smiles-strings">POST Validate List (of SMILES strings)</a></strong></li>
<li><strong><a href="#post-validate-drawn">POST Validate Drawn</a></strong></li>
<li><strong><a href="#post-update-temp-batches">POST Update Temp Batches</a></strong></li>
<li><strong><a href="#get-list-of-temp-batches">GET List of Temp Batches</a></strong></li>
<li><strong><a href="#post-update-multiple-batch-custom-fields">POST Update Multiple Batch Custom Fields - (used to update the data mapping)</a></strong></li>
<li><strong><a href="#post-multiple-batch-save">POST Multiple Batch Save (Save the temporary data permanently for a multiple batch of compounds)</a></strong></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-validate-files" id="user-content-post-validate-files"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Validate Files</strong>
</h2>
<p>Validate a given File and generate a temporary elasticsearch index. This API is used in the first phase of the addcompounds page after the <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Flow-File-and-Download-API">Flow File and Download API</a> is used to upload the file.</p>
<ul>
<li>
<p>Tests</p>
<ul>
<li>Tests for the upload of files are located <a href="../blob/master/cbh_tests/features/compound_batch_upload.feature">here</a>.</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/search?utf8=%E2%9C%93&amp;q=%22%24scope.assignFile%22">Front end code where this is used</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=post_validate_files">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_compound_batches/validate_files</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li><strong>POST data</strong></li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">file_name</td>
<td></td>
<td>The identifier supplied by the <a href="Flow-File-and-Download-API#post-flowfile-when-uploading"> Flowfile upload API</a> when uploading the original file</td>
<td></td>
</tr>
<tr>
<td align="center">multiplebatch</td>
<td></td>
<td>The multiple batch ID will be written to here once the file is processed</td>
<td></td>
</tr>
<tr>
<td align="center">type</td>
<td></td>
<td>The type of item that is to be validated</td>
<td>file OR sketch OR smilesdata</td>
</tr>
<tr>
<td align="center">fileextension</td>
<td></td>
<td>The type of file that is to be validated</td>
<td>xlsx OR sdf OR cdxml</td>
</tr>
<tr>
<td align="center">projectKey</td>
<td></td>
<td>The project key being uploaded to</td>
<td></td>
</tr>
<tr>
<td align="center">struccol</td>
<td></td>
<td>The structure column name if uploading an XLSX file</td>
<td></td>
</tr>
<tr>
<td align="center">state</td>
<td></td>
<td>The structure column name if uploading an XLSX file</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>Sample Usage</strong></p>
<pre><code>  {"file_name":"small.sdf-33594-1462449571195",
  "multiplebatch":null,
  "type":"file",
  "fileextension":"sdf",
  "projectKey":"cccccccc",
  "struccol":"",
  "state":"validate"}
</code></pre>
</li>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 202 <br/></p>
</li>
<li>
<p><strong>Notable response attributes</strong></p>
</li>
</ul>
</li>
</ul>
<p>See separate page for <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a></p>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>No schema available for this method</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-validate-list" id="user-content-post-validate-list"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Validate List</strong>
</h2>
<p>Validate a given list of SMILES strings and generate a temporary elasticsearch index. This API is used by the SMILES string input box on the addcompounds page.</p>
<ul>
<li>
<p><strong>Tests</strong></p>
<ul>
<li>Tests of the SMILES upload are located <a href="../blob/master/cbh_tests/features/compound_batch_smiles_list.feature">here</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addcompounds.js#L536">Front end code where this is used</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=post_validate_list">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_compound_batches/validate_list</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li><strong>POST data</strong></li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">multiplebatch</td>
<td></td>
<td>The multiple batch ID will be written to here once the file is processed</td>
<td></td>
</tr>
<tr>
<td align="center">type</td>
<td></td>
<td>The type of item that is to be validated</td>
<td>file OR sketch OR smilesdata</td>
</tr>
<tr>
<td align="center">fileextension</td>
<td></td>
<td>The type of file that is to be validated</td>
<td>xlsx OR sdf OR cdxml</td>
</tr>
<tr>
<td align="center">projectKey</td>
<td></td>
<td>The project key being uploaded to</td>
<td></td>
</tr>
<tr>
<td align="center">struccol</td>
<td></td>
<td>The structure column name if uploading an XLSX file</td>
<td></td>
</tr>
<tr>
<td align="center">state</td>
<td></td>
<td>The structure column name if uploading an XLSX file</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>Sample Usage</strong></p>
<pre><code>  $scope.processSmilesData = function(){
      $scope.current_dataset_id = $scope.inputData.inputstring;
      var conf =   {
              "multiplebatch": null,
              "smilesdata" : $scope.inputData.inputstring,
              "type": "smilesdata",
              "projectKey" : projectKey,
              "struccol" : "",
              "state" : "validate"};
       $scope.datasets[$scope.current_dataset_id] = {
          "config": conf,
          "cancellers" : []
      };
       CBHCompoundBatch.createMultiBatch(
          $scope.datasets[$scope.current_dataset_id]).then(
              function(data){        });
</code></pre>
</li>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 202 <br/></p>
</li>
<li>
<p><strong>Notable response attributes</strong></p>
</li>
</ul>
</li>
</ul>
<p>See separate page for <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a></p>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>No schema available for this method</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-validate-drawn" id="user-content-post-validate-drawn"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Validate Drawn</strong>
</h2>
<p>Validate a single drawn molecule from the ChemDoodle sketcher and process it as is done for the above other methods.</p>
<ul>
<li>
<p><strong>Tests</strong></p>
<ul>
<li>Tests for this API are located <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_tests/features/compound_batch_single.feature">here</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong><a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addsinglecompound.js#L257">Front end code where this is used</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=post_validate_drawn">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_compound_batches/validate_drawn</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li><strong>POST data</strong></li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">multiplebatch</td>
<td></td>
<td>The multiple batch ID will be written to here once the file is processed</td>
<td></td>
</tr>
<tr>
<td align="center">type</td>
<td></td>
<td>The type of item that is to be validated in this case sketch</td>
<td>file OR sketch OR smilesdata</td>
</tr>
<tr>
<td align="center">fileextension</td>
<td></td>
<td>The type of file that is to be validated</td>
<td>xlsx OR sdf OR cdxml</td>
</tr>
<tr>
<td align="center">projectKey</td>
<td></td>
<td>The project key being uploaded to</td>
<td></td>
</tr>
<tr>
<td align="center">state</td>
<td></td>
<td>The structure column name if uploading an XLSX file</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>Sample Usage</strong></p>
<pre><code> $scope.validateDrawn  = function(){
          //validate the drawn compound using the same mechanism as validation from file
          var conf = {
                  "multiplebatch": null,
                  "sketch": $scope.mol.molecule,
                  "type": "sketch",
                  "customFields": $scope.mol.customFields,
                  "supplementaryFields": $scope.mol.supplementaryFields,
                  "projectKey" : projectKey,
                  "struccol" : "",
                  "state" : "validate"};
          //also need to get the project and supplementary field data through
          $scope.dataset = {
              "config": conf,
              "cancellers" : []
          };
       CBHCompoundBatch.createMultiBatch(
          $scope.datasets[$scope.current_dataset_id]).then(
              function(data){        });
</code></pre>
</li>
<li>
<p><strong>Success Response:</strong></p>
<ul>
<li>
<p><strong>Code:</strong> 202 <br/></p>
</li>
<li>
<p><strong>Notable response attributes</strong></p>
</li>
</ul>
</li>
</ul>
<p>See separate page for <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a></p>
<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>No schema available for this method</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-update-temp-batches" id="user-content-post-update-temp-batches"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Update Temp Batches</strong>
</h2>
<p>Update the temporary batch data that has been uploaded by the user via the validate methods above.</p>
<ul>
<li>
<p><strong>Tests</strong></p>
<ul>
<li>Tests not yet available for this API</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li><strong>This function is used in the front end to update the action column in the data preview on the <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addcompounds.js#L127">addcompounds page</a></strong></li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=update_temp_batches">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_compound_batches/update_temp_batches</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li><strong>POST data</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Param</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>objects</td>
<td>The list temporary of batch objects you are looking to update</td>
</tr>
<tr>
<td>objects[].properties</td>
<td>The properties sub-object</td>
</tr>
<tr>
<td>objects[].properties.action</td>
<td>The action to be applied to this particular temporary batch - can either be "New Batch" or "Ignore"</td>
</tr>
<tr>
<td>objects[].uncuratedFields</td>
<td>The data from the uploaded spreadsheet or SDF as an object of name: value pairs</td>
</tr>
<tr>
<td>Other fields on the objects</td>
<td>The other fields require some refactoring and removal as they are overwritten anyway at a later stage in creation of the compound batches</td>
</tr>
<tr>
<td>project</td>
<td>The project key?</td>
</tr>
<tr>
<td>projectKey</td>
<td>The project key?</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>Example Content</strong></p>
<pre><code>           {

  	"multiplebatch": 2615,
  	"objects": [{
  		"Project": null,
  		"Upload ID": null,
  		"acdAcidicPka": null,
  		"acdBasicPka": null,
  		"acdLogd": null,
  		"acdLogp": null,
  		"alogp": null,
  		"bigimage": "iVBORw0KGgoAAAANSUhEUgAAAyAAAAMgCAYAAADbcAZoAABejUlEQV",
  		"blindedBatchId": "",
  		"canonicalSmiles": null,
  		"chemblId": null,
  		"created": "2016-05-05T10:21:17.117856",
  		"createdBy": "andy",
  		"createdById": null,
  		"creator": null,
  		"ctab": "\n\n\n 16 16  0  0  0  0  0  0  0  0999 V2000\n   -0.7035    0.2",
  		"customFields": {},
  		"fullMolformula": null,
  		"id": 1,
  		"image": "iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAHMklEQVR4nO2ab0x",
  		"knownDrug": null,
  		"medChemFriendly": null,
  		"modified": "2016-05-05T10:21:17.117875",
  		"molecularFormula": null,
  		"molecularWeight": null,
  		"multipleBatchId": 2615,
  		"numRo5Violations": null,
  		"originalSmiles": "",
  		"passesRuleOfThree": null,
  		"preferredCompoundName": null,
  		"project": "/217",
  		"projectCounter": -1,
  		"properties": {
  			"action": "Ignore"
  		},
  		"rotatableBonds": null,
  		"smiles": null,
  		"species": null,
  		"standardInchi": "InChI=1S/C9H12N2O3S/c1-3-14-8(13)6-5-10-9(15-4-2)11-7(6)12/h5H,3-4H2,1-2H3,(H,10,11,12)",
  		"standardInchiKey": "OVUWQJVYJRQMSC-UHFFFAOYSA-N",
  		"stdCtab": "\n\n\n 16 16  0  0  0  0  0  0  0  0999",
  		"stdInChiKey": null,
  		"timestamp": "2016-05-05",
  		"uncuratedFields": {
  			"CAS": "5518-76-3",
  			"Chemical Names": "5-Pyrimidinecarboxylic acid, 2-(ethylthio)-1,4-dihydro-4-oxo-, ethyl ester",
  			"Molecular Formula": "C9H12N2O3S",
  			"Molecular Weight": 228,
  			"NSC": 60266,
  			"PubChem SID": "108303, 26664999, 26664999"
  		},

  	}],
  	"project": "cccccccc",
  	"projectKey": "cccccccc",

  }
</code></pre>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#get-list-of-temp-batches" id="user-content-get-list-of-temp-batches"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>GET List of Temp Batches</strong>
</h2>
<p>Return a list of the part processed temporary batches</p>
<ul>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li>Used in front end when retrieving the data preview on the addcompounds page - either when <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addcompounds.js#L659">the pagination buttons</a> are pressed <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addcompounds.js#L160">or when the filters are pressed</a> or <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addcompounds.js#L617">when the page is reloaded</a>.</li>
<li><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_chem_api/compounds.py#L786">Back end code</a></strong></li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_compound_batches/get_part_processed_multiple_batch/?format={format}&amp;current_batch={current_batch}&amp;query={query}</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>GET</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
<tr>
<td align="center">format</td>
<td>The desired format</td>
<td>json, yaml, xml etc.</td>
<td></td>
</tr>
<tr>
<td align="center">current_batch</td>
<td>The multiple batch id which is being requested</td>
<td>A number that was generated by validating a file, drawing or  list of SMILES with the methods above</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">query</td>
<td></td>
<td>The query you wish to run against the data in Elasticsearch</td>
<td>This works with the elasticsearch query format for example: {"bool":{"must":[],"should":[],"must_not":[{"term":{"warnings.withoutstructure":"true"}},{"term":{"warnings.parseError":"true"}}]}} this JSON is URL encoded</td>
</tr>
<tr>
<td align="center">sorts</td>
<td></td>
<td>The sort which needs to be run on the data in elasticsearch format.</td>
<td>for example [{"uncuratedFields.CAS":{"order":"asc","missing":"_last","unmapped_type":"string"}}]</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>Code:</strong> 200 <br/></p>
</li>
<li>
<p><strong>Content:</strong></p>
</li>
</ul>

<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>No schema available for this</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR If the user you request does not exist</p>
<ul>
<li>
<strong>Code:</strong> 404 Nothing here <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li><strong>Sample Call:</strong></li>
</ul>
<p>See above code links</p>
<ul>
<li><strong>Notes:</strong></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-update-multiple-batch-custom-fields" id="user-content-post-update-multiple-batch-custom-fields"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Update Multiple Batch Custom Fields</strong>
</h2>
<p>Update the "operations" field of each header record in order to "map" the fields in the dataset to the fields in the project. The structure column is handled separately and has its own attribute</p>
<ul>
<li>
<p><strong>Tests</strong></p>
<ul>
<li>Tests not yet available for this API</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li>
<p>Used in the front end when the user clicks on a tick box in the mapping pop-up <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/directives/handsoncompoundtable.js#L32">when the user clicks on a tick box in the mapping pop-up</a> This then initiates a chain of calls which sends an update to the back end. Currently the <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addcompounds.js#L212">update sent</a> includes all of the upload metadata even though no change is required to any of the attributes.</p>
</li>
<li>
<p><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_chem_api/compounds.py#L607">Back end code</a></strong></p>
</li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_compound_batches/multi_batch_custom_fields/</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li><strong>POST data</strong></li>
</ul>
<p>Because this API accepts the whole of the headers and statistics response back to the server then the schema and example data are as in</p>
<p><a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a></p>
<p>The params that are intented to be changed with this API are listed below</p>
<table>
<thead>
<tr>
<th>Param</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>multiplebatch</td>
<td>The ID of the multiple batch object to be updated</td>
</tr>
<tr>
<td>headers[].operations</td>
<td>The list of operations which the back end should perform on this field in order to convert and move it into the system. The operations are expressed as JSON patch and are added either <a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_chem_api/compounds.py#L1153">by the back end code when automapping</a> or by the front end code <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/directives/handsoncompoundtable.js#L32">when the user clicks on a tick box in the mapping pop-up</a>
</td>
</tr>
<tr>
<td>headers[].copyto</td>
<td>The name of the custom field which this field will be mapped to</td>
</tr>
<tr>
<td>struccol</td>
<td>The column which contains the SMILES</td>
</tr>
</tbody>
</table>
<ul>
<li>
<strong>Code:</strong> 200 <br/>
</li>
</ul>
<p>The full request and response format is shown in <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a></p>
<ul>
<li><strong>Content:</strong></li>
</ul>

<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>No schema available for this
The full request and response format is shown in <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR If the user you request does not exist</p>
<ul>
<li>
<strong>Code:</strong> 404 Nothing here <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li><strong>Sample Call:</strong></li>
</ul>
<p>See above code links</p>
<ul>
<li><strong>Notes:</strong></li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#post-multiple-batch-save" id="user-content-post-multiple-batch-save"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>POST Multiple Batch Save</strong>
</h2>
<p>Save all of the temporary data in the multiple batch preview as permanent data.</p>
<ul>
<li>
<p><strong>Tests</strong></p>
<ul>
<li>The multiple batch save is tested <a href="https://github.com/thesgc/chembiohub_ws/search?utf8=%E2%9C%93&amp;q=%22I+take+the+response+from+post+validate+drawn+and+post+it+to+multi+batch+save%22">here</a>
</li>
</ul>
</li>
<li>
<p><strong>Source Code links</strong></p>
<ul>
<li>
<p>Used in the front end when the user clicks <a href="https://github.com/thesgc/ng-chem/blob/master/app/scripts/controllers/addcompounds.js#L96">save for the compounds preview</a></p>
</li>
<li>
<p><strong><a href="https://github.com/thesgc/chembiohub_ws/blob/master/cbh_chem_api/compounds.py#L468">Back end code</a></strong></p>
</li>
</ul>
</li>
<li>
<p><strong>URL</strong></p>
<p>/{namespace}/api/cbh_compound_batches/multi_batch_save/</p>
</li>
<li>
<p><strong>Method:</strong></p>
<p><code>POST</code></p>
</li>
<li>
<p><strong>URL Params</strong></p>
<p><strong>Required:</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Param</th>
<th>Default</th>
<th>Description</th>
<th>options</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">namespace</td>
<td>Default for your installation is chembiohub</td>
<td>the URL path, conda environment name etc.</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Optional:</strong></p>
<p>None</p>
<ul>
<li><strong>POST data</strong></li>
</ul>
<p>Because this API accepts the whole of the headers and statistics response back to the server then the schema and example data are as in</p>
<p><a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a></p>
<p>The only actual required parameter is the multiplebatch id.</p>
<table>
<thead>
<tr>
<th>Param</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>multiplebatch</td>
<td>The ID of the multiple batch object to be saved</td>
</tr>
</tbody>
</table>
<ul>
<li>
<strong>Code:</strong> 201 <br/>
</li>
</ul>
<p>The full request and response format is shown in <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a></p>
<ul>
<li><strong>Content:</strong></li>
</ul>

<ul>
<li>
<p><strong>Response Schema</strong></p>
<ul>
<li>No schema available for this
The full request and response format is shown in <a class="internal present" href="/thesgc/chembiohub_ws/wiki/Bulk-upload-validation-response-attributes">Bulk upload validation response attributes</a>
</li>
</ul>
</li>
<li>
<p><strong>Error Response:</strong></p>
<p>If you are not logged in to the application</p>
<ul>
<li>
<strong>Code:</strong> 401 UNAUTHORIZED <br/>
<strong>Content:</strong> ``</li>
</ul>
<p>OR If the user you request does not exist</p>
<ul>
<li>
<strong>Code:</strong> 404 Nothing here <br/>
<strong>Content:</strong>
</li>
</ul>
</li>
</ul>

<pre><code>   { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li>
<strong>Code:</strong> 500 INTERNAL SERVER ERROR <br/>
<strong>Content:</strong>
</li>
</ul>

<pre><code>    { error : "The error name from the back end" , traceback : "The traceback in python"}
</code></pre>
<ul>
<li><strong>Sample Call:</strong></li>
</ul>
<p>See above code links</p>
<ul>
<li><strong>Notes:</strong></li>
</ul>

        </div>

    </div>]