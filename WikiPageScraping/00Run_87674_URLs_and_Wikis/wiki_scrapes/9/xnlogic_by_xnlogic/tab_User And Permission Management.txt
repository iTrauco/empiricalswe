[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>XN leverages its rich <a href="Data-Modeling">data modeling</a> capabilities to create a flexible user &amp; permission management system.</p>
<ul>
<li>Allows you to define groups and users.</li>
<li>Granular control over access permissions - Different permissions are granted to users/groups, by part.</li>
<li>Built using xnlogic models and parts, which means that it is easily extensible.</li>
<li>Tested and used in production environments.</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#basic-concepts" id="user-content-basic-concepts"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Basic Concepts</h2>
<p>The basic concepts are fairly simple:</p>
<ul>
<li>There are 5 <em>permission</em> types: <code>create</code>, <code>read</code>, <code>update</code>, <code>delete</code> and <code>action</code>.</li>
<li>Permissions are granted to <em>users</em> and/or <em>groups</em>, per <em>part</em>.</li>
<li>This allows us to flexibly define <em>who</em> (user/group) gets <em>which</em> permission to <em>what</em> part.</li>
<li>Also, users/groups can inherit permissions from other users/groups.</li>
</ul>
<p><img alt="XN Model High-Level Diagram" data-canonical-src="https://dl.dropboxusercontent.com/s/ahssf9s06k2e4tk/XN_model_high_level.png" src="https://camo.githubusercontent.com/6877e005ccd05032847a7895c6c62e97ec5912fa/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f732f6168737366397330366b326534746b2f584e5f6d6f64656c5f686967685f6c6576656c2e706e67"/></p>
<h3>
<a aria-hidden="true" class="anchor" href="#permission-types" id="user-content-permission-types"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Permission Types</h3>
<p>The following table describes the five different permission types.</p>
<table>
<thead>
<tr>
<th>Type</th>
<th>From</th>
<th>To</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>create</code></td>
<td>user/group</td>
<td>part</td>
<td>The user/group can create that part. <em>NOTE:</em> Parts can only be created as part of a model object. In order to create a model object, a user must have <code>create</code> permission to <em>all</em> of the model's parts.</td>
</tr>
<tr>
<td><code>read</code></td>
<td>user/group</td>
<td>part</td>
<td>The user/group can read that part of any model object.</td>
</tr>
<tr>
<td><code>update</code></td>
<td>user/group</td>
<td>part</td>
<td>The user/group can update that part of any model object.</td>
</tr>
<tr>
<td><code>delete</code></td>
<td>user/group</td>
<td>part</td>
<td>TODO: Needs clarification</td>
</tr>
<tr>
<td><code>action</code></td>
<td>user/group</td>
<td>part</td>
<td>Allows the user/group to run actions that are defined in that part.</td>
</tr>
</tbody>
</table>
<h3>
<a aria-hidden="true" class="anchor" href="#the-internals" id="user-content-the-internals"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>The Internals</h3>
<ul>
<li>
<code>UserAccount</code> and <code>SecurityGroup</code> are the only two models that have a <code>Permission</code> part.</li>
<li>The <code>Permission</code> part's relations store the permission model (i.e. <em>who</em> has <em>which</em> permission to <em>what</em> part).</li>
<li>The following relations (from <code>Permission</code> to <code>Part</code>s) define "<em>who</em> has <em>which</em> permission to <em>what</em> part":
<ul>
<li>
<code>create_access</code>, <code>read_access</code>, <code>update_access</code>, <code>delete_access</code> and <code>action_access</code>
</li>
</ul>
</li>
<li>The following relations (from <code>Permission</code> to other <code>Permission</code>s) define permission inheritance:
<ul>
<li>
<code>inherit_create</code>, <code>inherit_read</code>, <code>inherit_update</code>, <code>inherit_delete</code> and <code>inherit_action</code> relations.</li>
</ul>
</li>
</ul>
<p><img alt="XN Model More Detailed" data-canonical-src="https://dl.dropboxusercontent.com/s/sx56zihxvqe7tuz/XN_model_more_details.png" src="https://camo.githubusercontent.com/37f1602cd8aee759e1cb7a22405add3cc8da9085/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f732f737835367a6968787671653774757a2f584e5f6d6f64656c5f6d6f72655f64657461696c732e706e67"/></p>
<p>The following table summarizes how these relations are used to define the permission model:</p>
<table>
<thead>
<tr>
<th>From Model</th>
<th>Relation</th>
<th>To Model</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>UserAccount / SecurityGroup</td>
<td><code>&lt;TYPE&gt;_access</code></td>
<td>Part</td>
<td>The user/group has <code>&lt;TYPE&gt;</code> permission to the part.</td>
</tr>
<tr>
<td>UserAccount / SecurityGroup</td>
<td><code>inherit_&lt;TYPE&gt;</code></td>
<td>UserAccount / SecurityGroup</td>
<td>The first (i.e. from) user/group inherits all <code>&lt;TYPE&gt;</code> permissions from the second (i.e. to) user/group.</td>
</tr>
</tbody>
</table>

        </div>

    </div>]