[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>XN DSL Documentation</p>
<h2>
<a aria-hidden="true" class="anchor" href="#structuring-an-application" id="user-content-structuring-an-application"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Structuring an Application</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#models" id="user-content-models"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Models</h3>
<ul>
<li>Simple compositions. They give meaning to groups of parts.</li>
<li>No Inheritance</li>
<li>They are what you create</li>
<li>Actions only work on them</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#parts" id="user-content-parts"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Parts</h3>
<ul>
<li>
<p>Composable building blocks of business logic</p>
</li>
<li>
<p>what if I don't need separate parts?</p>
</li>
<li>
<p>Often 1:1 correspondence between parts and models, but not always.</p>
</li>
<li>
<p>The core of the domain often has intricacies that models or simple inheritance don't capture</p>
</li>
<li>
<p>Common patterns:</p>
<ul>
<li>Note
A part that fully describes a model. The simplest example.</li>
<li>Computer
A part that clearly describes one aspect of a model, but is likely to be present in variations</li>
<li>Rackable
A feature or quality of a thing being modelled</li>
<li>Virtual
A part that has no properties or relationships. Acts like a tag.</li>
<li>HasNotes -&gt; Notes (switch ports, etc)
A part that manages the relationship between the model and some other model
It carries no further information about the model.
The HasNotes part can be added to any model.</li>
<li>Networked -&gt; Interfaces
Interfaces could be considered to be part of a server, but here it makes sense to model it separately.
Interfaces are separately configurable.
Every device that is networked will have at least one interface to the network. Some have hundreds.</li>
<li>SwitchController
A part that is sometimes integral and sometimes a component.
Part of a small switch or in a switch module for a larger standalone switch.
We can model the real world structure underlying the design of the devices.</li>
<li>Asset, Financial
Break a single concept into 2 parts to allow more fine-grained permissions</li>
</ul>
</li>
<li>
<p>Aside: Ruby Modules
what are they?
why do we use them instead of Classes like a normal app?</p>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#intro-to-xn-gem-template" id="user-content-intro-to-xn-gem-template"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>intro to xn-gem-template</h3>
<pre><code>A bare bones app, based on an existing xn application. You can add whatever additional dependencies you like.
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#the-dsl" id="user-content-the-dsl"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>The DSL</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#parts-should-be-in-a-devoted-namespace-module" id="user-content-parts-should-be-in-a-devoted-namespace-module"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Parts should be in a devoted 'namespace' module.</h3>
<ul>
<li>PM does structured namespace resolution.</li>
<li>Namespace must be registered. There is one registered by default in the xn-gem-template</li>
<li>Don't put anything else in this namespace.</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#each-part-is-just-a-ruby-module-we-turn-the-module-into-a-part-with-the-pacer_vertex-command" id="user-content-each-part-is-just-a-ruby-module-we-turn-the-module-into-a-part-with-the-pacer_vertex-command"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Each part is just a Ruby Module. We turn the module into a part with the pacer_vertex command.</h3>
<ul>
<li>
<p>pacer_vertex
the only option you usually need for this is <code>doc: "A documentation string"</code></p>
</li>
<li>
<p>property</p>
<ul>
<li>name</li>
<li>type: :text | :select | :date | :boolean | :numeric | :object</li>
<li>-- optional:</li>
<li>doc: 'Documentation string for the property'</li>
<li>filter: true (default false)
Generate a standard property filter for the API for this property</li>
<li>index: true (default false)
If set, this property will be indexed in both the live and the history graphs</li>
<li>on_clone: :ignore | :template</li>
<li>special options for :select type
options: ['Option Strings'], limit_to_list: true</li>
<li>default: DEFAULT_VALUE</li>
<li>read_only: true (default false)</li>
<li>label: "Property Label"
Useful if the label needs to be more descriptive than the actual property name which will otherwise be transformed into a default label.</li>
<li>unit: 'Unit Name'</li>
<li>allow_blank: false (default true)
This basically specifies that the property is optional</li>
<li>on_change :method_name
method_name is called with no arguments, but defined on the vertex (so self is available)</li>
</ul>
</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#relationships" id="user-content-relationships"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Relationships:</h3>
<table>
<thead>
<tr>
<th></th>
<th>from</th>
<th>to</th>
</tr>
</thead>
<tbody>
<tr>
<td>one</td>
<td>from_one</td>
<td>to_one</td>
</tr>
<tr>
<td>many</td>
<td>from_many</td>
<td>to_many</td>
</tr>
</tbody>
</table>
<p>Should be used in pairs. Pairs may be constructed in any combination.</p>
<pre><code> -  :PartName | Namespace::PartName
      Symbol version is most often used - necessary because of inherent reference circularity / load order problems.
      Name will be used to automatically generate rel accessors and route methods, etc.
      Pluralization is used where appropriate.
 -  -- optional:
 -  to:
 -  from:
 -  doc: "Doc string for the rel"
 -  filter: true
      enable filtering by this rel via the api
 -  on_clone: :link | :ignore | :clone | :template
 -  edge_label: :some_edge_label | nil
      nil -&gt; read only rel (requires edge_labels to be set)
 -  edge_labels: [:a_label, :another_label]
      The rel may have any one of the given rels.
      When a rel is created, this is ignored.
 -  default: proc { |inst| rels }
 -  -- validations:
 -  optional: false | required: true
      for one rels only. Default is optional
 -  min: &lt;number&gt; | :property_name
      inclusive
 -  max: see min
      inclusive
 -  -- obscure:
 -  clone_when: proc { |instance| true }
 -  match: :property_name | { :this_property_name =&gt; :other_property_name }
      to be valid, the property in this record must match the property on the other record
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#display-name-block" id="user-content-display-name-block"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>display :name, &amp;block</h3>
<pre><code>  A read-only calculated property that recomputed each time it is read.
  The code that produces this property should be very fast and have no side-effects.
  The display will be included any time the properties of the part are rendered.
</code></pre>
<h4>
<a aria-hidden="true" class="anchor" href="#display_name-block" id="user-content-display_name-block"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>display_name &amp;block</h4>
<pre><code>  Works the same as any display property. For the special built-in display_name present in all records.
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#traversal" id="user-content-traversal"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>traversal</h3>
<h4>
<a aria-hidden="true" class="anchor" href="#route_traversal-name-return_parts-partname--namespacepartname--partname-anotherpartname-block" id="user-content-route_traversal-name-return_parts-partname--namespacepartname--partname-anotherpartname-block"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>route_traversal :name, return_parts: :PartName | Namespace::PartName | [:PartName, :AnotherPartName], &amp;block</h4>
<ul>
<li>return_parts:</li>
<li>args: [{name: :text | :select | :date | :boolean | :numeric | :object |  | :PartName | Namespace::PartName |  }
, ...]
args are ordered. Type can be any custom or system-defined type or a part name.
If using full property definition options, a map of type, default, label and allow_blank can be used.</li>
<li>read_access, create_access, update_access, delete_access, action_access
: :PartName | [ part names ... ]
Specify extra permissions</li>
<li>doc:</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#document" id="user-content-document"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>document</h3>
<h3>
<a aria-hidden="true" class="anchor" href="#report-name-block" id="user-content-report-name-block"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>report :name, &amp;block</h3>
<h3>
<a aria-hidden="true" class="anchor" href="#job" id="user-content-job"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>job</h3>
<pre><code>  An action that can be applied to a collection of records matching a traversal.
  For argument details, see 'action'
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#action" id="user-content-action"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>action</h3>
<pre><code>  An action that causes work to be done against an individual record.
</code></pre>
<ul>
<li>guard: :guard_method_name</li>
<li>guard_method
def guard_method_name(errors)
errors.add :field, "Error message" if self.problem
end</li>
<li>doc:</li>
<li>args: see route_traversal args.</li>
<li>&amp;block
optional block of code.
If a block is present, the action is executed within the request and the result is its return value
If no block is present, the job is put onto a message queue together with arguments and details about the record(s) it was called against.</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#validate-validation_function" id="user-content-validate-validation_function"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>validate :validation_function</h3>
<pre><code>  takes no arguments, defined on Vertex. Add errors to self.errors(:property, "Error message")
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#categorical" id="user-content-categorical"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>categorical!</h3>
<h3>
<a aria-hidden="true" class="anchor" href="#cloneable-not_cloneable" id="user-content-cloneable-not_cloneable"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>cloneable! not_cloneable!</h3>
<h3>
<a aria-hidden="true" class="anchor" href="#sensitive" id="user-content-sensitive"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>sensitive!</h3>
<h3>
<a aria-hidden="true" class="anchor" href="#not_descriptive" id="user-content-not_descriptive"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>not_descriptive!</h3>
<p>Writing business logic
module Vertex
module Route
module Edge</p>
<p>see network/has_switch_ports
as
graph.app
app.as_model
app finders
app.create
...</p>
<p>Handling data model changes in production</p>
<p>Transactions
Entirely handled for you by the framework for processes within the scope of an API request.
Intermediate commits in large jobs</p>
<p>Migrations and Data Loading
Handling transactions
Renaming Parts
Removing Parts
Splitting Records
Merging Records
Bulk updating properties or relationships</p>
<p>Built-in parts (source)
Record
Job
RecordJob / ValueJob
If you are using the permissions module
User
Group
Permission</p>
<p>Using the History Graph
Getting data from the history graph
Pacer::Temporal
Moving around in time the history graph</p>
<p>Static helper methods in Ruby</p>
<p>How to load your code or parts
Where to put things in your project
how to load dependencies in order</p>
<p>How to work with your app in the console
app = PM['appname']
app.graph
app.history_graph
GemName.reload!</p>

        </div>

    </div>]