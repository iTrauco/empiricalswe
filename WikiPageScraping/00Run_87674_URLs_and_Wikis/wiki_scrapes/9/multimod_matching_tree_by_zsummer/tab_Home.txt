[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Welcome to the multimod_matching_tree wiki!
language C. a multiple-mode-string matching method. super simple and super performance.</p>
<p>这是一个简洁的多模匹配超级树, 利用少量内存(预分配几十M, 对内存有要求的客户端慎用).</p>
<p><code></code><br/>
<code>/*</code><br/>
<code>data structure:</code><br/>
<code>[head]</code><br/>
<code>├── [node0]</code><br/>
<code>├── [node1]</code><br/>
<code>├── [node2]</code><br/>
<code>├── [node3]</code><br/>
<code>│ ├── [node0]</code><br/>
<code>│ ├── [node1]</code><br/>
<code>│ ├── [node2]</code><br/>
<code>│ ├── [node3]</code><br/>
<code>│ │ ├── [node0]</code><br/>
<code>│ │ ├── [node...]</code><br/>
<code>│ │ └── [node255]</code><br/>
<code>│ ├── [node...]</code><br/>
<code>│ ├── [node253]</code><br/>
<code>│ ├── [node254]</code><br/>
<code>│ └── [node255]</code><br/>
<code>├── [node...]</code><br/>
<code>├── [node254]</code><br/>
<code>└── [node255]</code><br/>
<code>`example:` ` patterns is:` ` string "123" ==&gt; 0x31 0x32 0x33 ==&gt; 49 50 51` ` string "132" ==&gt; 0x31 0x33 0x32 ==&gt; 49 51 50` ` string "1234" ==&gt; 0x31 0x32 0x33 0x34 ==&gt; 49 50 51 52`</code><br/>
<code>the build tree like this:</code><br/>
<code>[head]</code><br/>
<code>└── [node49]{_is_used = true,_is_boundary=false}</code><br/>
<code>├── [node50]{_is_used = true,_is_boundary=false}</code><br/>
<code>│ └── [node51]{_is_used = true,_is_boundary=true}</code><br/>
<code>│ └── [node52]{_is_used = true,_is_boundary=true}</code><br/>
<code>│</code><br/>
<code>└── [node51]{_is_used = true,_is_boundary=false}</code><br/>
<code>└── [node50]{_is_used = true,_is_boundary=true}</code><br/>
<code>` when use method "match_tree_matching" matching from text or biniry stream example "12345":` ` be greedy: return 4;` ` not greedy: return 3;`</code><br/>
<code>*/</code><br/>
<code></code></p>

        </div>

    </div>]