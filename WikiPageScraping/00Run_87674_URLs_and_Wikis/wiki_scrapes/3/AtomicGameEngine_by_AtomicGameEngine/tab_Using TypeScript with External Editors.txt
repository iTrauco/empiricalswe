[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><img alt="" src="https://raw.githubusercontent.com/wiki/AtomicGameEngine/AtomicGameEngine/images/repo/scripting/using-typescript-with-external-editors/header.png"/></p>
<h3>
<a aria-hidden="true" class="anchor" href="#using-typescript-with-external-editors" id="user-content-using-typescript-with-external-editors"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Using TypeScript with External Editors</h3>
<hr/>
<p>Instead of the built-in Monaco editor, you may use an external editor. In this overview, we'll explain how to use Atom and VSCode.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#setting-up-a-new-project" id="user-content-setting-up-a-new-project"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Setting up a New Project</h2>
<ul>
<li>Create a new TypeScript project in the Atomic Editor</li>
<li>Navigate to <code>Developer &gt; Plugins &gt; TypeScript &gt; Create External Editor Project</code> <br/>
<img src="https://raw.githubusercontent.com/wiki/AtomicGameEngine/AtomicGameEngine/images/repo/scripting/using-typescript-with-external-editors/generateExternalProject.png" vspace="12.5"/> <br/>
This will generate a <code>tsconfig.json</code> file and copy over the latest <code>Atomic.d.ts</code> into your project directory.</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#using-atom-as-an-external-editor" id="user-content-using-atom-as-an-external-editor"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Using Atom as an External Editor</h2>
<p>First, make sure that you have a copy of Atom installed - it can be found @ <a href="https://atom.io" rel="nofollow">https://atom.io</a> and is available for all major platforms. <br/></p>
<img align="left" src="https://raw.githubusercontent.com/wiki/AtomicGameEngine/AtomicGameEngine/images/repo/scripting/using-typescript-with-external-editors/atomPackage.png" vspace="10"/>
Besides Atom, you will also need the [Typescript package](https://atom.io/packages/atom-typescript). You can install it manually or use the built-in package installer to install the package (see picture to the left). <br/><br/>
When all these steps are done, open your root project folder inside of Atom, and voila, you should be good to go. To build the project, use `F6`. <br/>
<p>Additionally, you can use a linter to help identify some style and best practice violations in your code:<br/>
<a href="https://atom.io/packages/linter" rel="nofollow">https://atom.io/packages/linter</a><br/>
<a href="https://atom.io/packages/linter-tslint" rel="nofollow">https://atom.io/packages/linter-tslint</a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#using-vscode-as-an-external-editor" id="user-content-using-vscode-as-an-external-editor"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Using VSCode as an External Editor</h2>
<p>First, make sure you have a copy of VSCode installed - it can be found @ <a href="https://code.visualstudio.com" rel="nofollow">https://code.visualstudio.com</a>, and is, just as Atom, available on all major platforms. <br/></p>
<p>In VSCode, open the root of your project folder. Now, you will need to configure a Task Runner - you can do this by opening the Command Palette (<code>View &gt; Command Palette</code> or <code>CMD</code>/<code>CTRL + SHIFT + P</code>) and finding <code>Tasks: Configure Task Runner</code>.<br/>
<img src="https://raw.githubusercontent.com/wiki/AtomicGameEngine/AtomicGameEngine/images/repo/scripting/using-typescript-with-external-editors/taskRunner.png" vspace="12.5"/><br/>
Select <code>TypeScript: tsconfig.json</code> in the task runners available. Now, you should be able to edit your TypeScript and add new scripts inside of VSCode. To Build, press <code>CMD</code>/<code>CTRL + SHIFT + B</code>.<br/></p>
<p><img align="left" src="https://raw.githubusercontent.com/wiki/AtomicGameEngine/AtomicGameEngine/images/repo/warning.png" width="25"/> If you're on Linux, you may have to install TypeScript using <code>sudo npm install -g typescript</code> first.</p>
<p><img align="left" src="https://raw.githubusercontent.com/wiki/AtomicGameEngine/AtomicGameEngine/images/repo/warning.png" width="25"/> VSCode has the ability to hide the generated <code>.js</code> files from the file tree for any corresponding <code>.ts</code> files.  To do this, you can modify the <code>files.exclude</code> setting under <code>Preferences-&gt;Settings</code>.</p>
<p>An example configuration is:</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-s"><span class="pl-pds">"</span>files.exclude<span class="pl-pds">"</span></span><span class="pl-k">:</span> {
        <span class="pl-c"><span class="pl-c">//</span> exclude .js and .js.map files, when in a TypeScript project.  Also .asset files.</span>
        <span class="pl-s"><span class="pl-pds">"</span>**/*.js<span class="pl-pds">"</span></span><span class="pl-k">:</span> { <span class="pl-s"><span class="pl-pds">"</span>when<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>$(basename).ts<span class="pl-pds">"</span></span>},
        <span class="pl-s"><span class="pl-pds">"</span>**/*.js.map<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-c1">true</span>,
        <span class="pl-s"><span class="pl-pds">"</span>**/*.asset<span class="pl-pds">"</span></span><span class="pl-k">:</span> <span class="pl-c1">true</span>
    }</pre></div>
<p>Additionally, you can use this <a href="https://marketplace.visualstudio.com/items?itemName=eg2.tslint" rel="nofollow">linter</a> to help identify some style and best practice violations in your code.</p>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p><img align="left" data-canonical-src="https://atomicwiki.us/atomicwiki_imgs/atomicLogo.png" height="22" src="https://camo.githubusercontent.com/221d0a11732835c9763ed76a29958208a863bdfd/68747470733a2f2f61746f6d696377696b692e75732f61746f6d696377696b695f696d67732f61746f6d69634c6f676f2e706e67"/><a href="https://github.com/AtomicGameEngine/AtomicGameEngine/wiki">Home</a> | Copyright (c) 2014 - 2017 THUNDERBEAST GAMES LLC</p>

          </div>
        </div>
    </div>]