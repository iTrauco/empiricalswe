[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#note-this-is-a-wip" id="user-content-note-this-is-a-wip"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>NOTE: This is a WIP</h1>
<p>A NuGet Package is in the works, while it doesn't arrive, here is how you can use Atomic as a library in C#:</p>
<p><strong>NOTE: Make sure you're building for the same architecture explicitly. AnyCPU won't work without some code intelligence (more details below).</strong></p>
<p>Visual Studio 2017 is used for this example.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#building-the-dependencies" id="user-content-building-the-dependencies"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Building the Dependencies</h1>
<ul>
<li>Clone Atomic, Cmake it or use the build scripts, and open the project/solution</li>
<li>Build the following projects:
<ul>
<li>AtomicNETNative
<ul>
<li>This will generate the native library that contains the Atomic Engine (AtomicNETNative.dll)</li>
</ul>
</li>
<li>GenerateAtomicNET
<ul>
<li>This will generate a C# project named AtomicNET that contains the bindings to the native library</li>
</ul>
</li>
</ul>
</li>
<li>Open the AtomicNET solution and build the AtomicNET.Desktop project.
<ul>
<li>It will output a managed binary named AtomicNET.dll along with a XML file with the same name, containing the code documentation. It may not be on the same folder, in which case you'll want to copy it there so when you reference the managed library your editor will find the docs.</li>
</ul>
</li>
</ul>
<h1>
<a aria-hidden="true" class="anchor" href="#using-the-libraries" id="user-content-using-the-libraries"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Using the Libraries</h1>
<ul>
<li>Create a new C# "Console App" project (to help debug, you can change this later on the project properties)</li>
<li>Add a reference to the AtomicNET.dll:
<ul>
<li><img alt="17-08-25-26" src="https://user-images.githubusercontent.com/8399299/29719004-f6b8201a-898a-11e7-9c90-2130cc0b29cf.png"/></li>
<li><img alt="17-08-25-28" src="https://user-images.githubusercontent.com/8399299/29719046-13e07656-898b-11e7-85ed-e945683feb9f.png"/></li>
<li><img alt="17-08-25-30" src="https://user-images.githubusercontent.com/8399299/29719068-2636ab86-898b-11e7-9c85-deae76d925db.png"/></li>
</ul>
</li>
<li>Link the Existing AtomicNETNative.dll and if you're using DirectX, the Direct3D Compiler:
<ul>
<li><img alt="17-08-25-31" src="https://user-images.githubusercontent.com/8399299/29719160-7610fcf6-898b-11e7-8824-5ea162183391.png"/></li>
<li><img alt="17-08-25-32" src="https://user-images.githubusercontent.com/8399299/29719166-7800dedc-898b-11e7-8272-0a1643bd84e4.png"/></li>
<li>
<img alt="17-08-25-33" src="https://user-images.githubusercontent.com/8399299/29719167-7b46d894-898b-11e7-81d0-35b78ffede9a.png"/>
<ul>
<li><strong>don't forget to add as link (as shown above)</strong></li>
</ul>
</li>
</ul>
</li>
<li>Configure the linked dependencies to be copied to the output folder:
<ul>
<li><img alt="17-08-25-34" src="https://user-images.githubusercontent.com/8399299/29719286-dc848b1a-898b-11e7-9f1c-a72762842964.png"/></li>
<li><img alt="17-08-25-36" src="https://user-images.githubusercontent.com/8399299/29719292-de74d9ca-898b-11e7-85db-96e3f04be7c1.png"/></li>
</ul>
</li>
<li>Configure the command line arguments; Atomic needs to know where to look for resources, in your final distributable version you can either pass them in a launcher/shortcut or set them up in code, to easily run from the IDE, you can add them to the arguments to be passed when it runs the output:
<ul>
<li><img alt="17-08-25-37" src="https://user-images.githubusercontent.com/8399299/29719323-fa20afdc-898b-11e7-815b-e4769d0a1b93.png"/></li>
<li><img alt="17-08-25-38" src="https://user-images.githubusercontent.com/8399299/29719329-fd2b5998-898b-11e7-9a96-b1954e967569.png"/></li>
<li>Copy the folders "CoreData" and "PlayerData" from the Resources folder on the root of your local Atomic repository to the directory configured as --resourcePrefix, and create an empty "Cache" folder in the directory passed in --project, here's an example:
<ul>
<li><img alt="17-08-25-40" src="https://user-images.githubusercontent.com/8399299/29719537-e9e687da-898c-11e7-92e1-47e86b4ae5d4.png"/></li>
<li>Alternatively, you can specify only the --project path and put the Resources folder containing the engine assets in it.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>**IMPORTANT: Make sure you tick "enable native code debugging" in VS2015 otherwise the application will crash with no apparent reason while debugging!</p>
<p><strong>You should now be able to run this simple code:</strong></p>
<div class="highlight highlight-source-cs"><pre><span class="pl-k">using</span> <span class="pl-en">AtomicEngine</span>;

<span class="pl-k">class</span> <span class="pl-en">Game</span> : <span class="pl-en">AppDelegate</span>
{
}

<span class="pl-k">namespace</span> <span class="pl-en">AtomicPlayer</span>
{
    <span class="pl-k">class</span> <span class="pl-en">Program</span>
    {
        <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">Main</span>(<span class="pl-k">string</span>[] <span class="pl-smi">args</span>)
        {
            <span class="pl-smi">Application</span>.<span class="pl-en">Run</span>&lt;<span class="pl-en">Game</span>&gt;(<span class="pl-smi">args</span>);
        }
    }
}
</pre></div>
<h1>
<a aria-hidden="true" class="anchor" href="#dealing-with-different-architectures" id="user-content-dealing-with-different-architectures"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Dealing with different architectures</h1>
<p>TODO</p>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p><img align="left" data-canonical-src="https://atomicwiki.us/atomicwiki_imgs/atomicLogo.png" height="22" src="https://camo.githubusercontent.com/221d0a11732835c9763ed76a29958208a863bdfd/68747470733a2f2f61746f6d696377696b692e75732f61746f6d696377696b695f696d67732f61746f6d69634c6f676f2e706e67"/><a href="https://github.com/AtomicGameEngine/AtomicGameEngine/wiki">Home</a> | Copyright (c) 2014 - 2017 THUNDERBEAST GAMES LLC</p>

          </div>
        </div>
    </div>]