[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#contents" id="user-content-contents"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Contents</h1>
<ul>
<li>Enum
<ul>
<li><a href="#nslogicoperator">NSLogicOperator</a></li>
<li><a href="#nspredicateoperator">NSPredicateOperator</a></li>
</ul>
</li>
<li>Logical operators
<ul>
<li>[and] (#and)</li>
<li>[or] (#or)</li>
</ul>
</li>
<li>Init
<ul>
<li><a href="#init">init(firstPredicate, secondPredicate, predicateOperator)</a></li>
</ul>
</li>
<li>Class methods
<ul>
<li><a href="#predicatebuilder">predicateBuilder</a></li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#nslogicoperator" id="user-content-nslogicoperator"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>NSLogicOperator</h2>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">public</span> <span class="pl-k">enum</span> <span class="pl-en">NSLogicOperator</span> : <span class="pl-e"><span class="pl-c1">String</span> </span>{
    <span class="pl-k">case</span> <span class="pl-c1">And</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>AND<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">Or</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OR<span class="pl-pds">"</span></span>
}</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#nspredicateoperator" id="user-content-nspredicateoperator"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>NSPredicateOperator</h2>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">public</span> <span class="pl-k">enum</span> <span class="pl-en">NSPredicateOperator</span> : <span class="pl-e"><span class="pl-c1">String</span> </span>{
    <span class="pl-k">case</span> <span class="pl-c1">And</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>AND<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">Or</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>OR<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">In</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>IN<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">Equal</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>==<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">NotEqual</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>!=<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">GreaterThan</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>&gt;<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">GreaterThanOrEqual</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>&gt;=<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">LessThan</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>&lt;<span class="pl-pds">"</span></span>
    <span class="pl-k">case</span> <span class="pl-c1">LessThanOrEqual</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>&lt;=<span class="pl-pds">"</span></span>
}</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#and" id="user-content-and"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>And</h2>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">public</span> <span class="pl-k">func</span> <span class="pl-en">&amp;</span> (<span class="pl-smi"><span class="pl-en">left</span></span> : NSPredicate, <span class="pl-smi"><span class="pl-en">right</span></span> : NSPredicate )<span class="pl-k">-&gt;</span> NSPredicate
<span class="pl-k">public</span> <span class="pl-k">func</span> <span class="pl-en">&amp;</span> (<span class="pl-smi"><span class="pl-en">left</span></span> : NSPredicate, <span class="pl-smi"><span class="pl-en">right</span></span> : [NSPredicate] )<span class="pl-k">-&gt;</span> NSPredicate
<span class="pl-k">public</span> <span class="pl-k">func</span> <span class="pl-en">&amp;</span> (<span class="pl-smi"><span class="pl-en">left</span></span> : [NSPredicate], <span class="pl-smi"><span class="pl-en">right</span></span> : [NSPredicate] )<span class="pl-k">-&gt;</span> NSPredicate</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#example" id="user-content-example"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example</h4>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">let</span> firstLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level &gt; 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> secondLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level =&lt; 36<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> typePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>type.id = 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> namePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>name == Charmender<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>

firstLevelPredicate <span class="pl-k">&amp;</span> secondLevelPredicate
<span class="pl-c"><span class="pl-c">//</span>NSPredicate (format: "level &gt; 1 AND level =&lt; 36")</span>
<span class="pl-c"></span>[firstLevelPredicate, namePredicate] <span class="pl-k">&amp;</span> [secondLevelPredicate]
<span class="pl-c"><span class="pl-c">//</span>NSPredicate (format: "level &gt; 1 AND name == Charmender AND level =&lt; 36")</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#or" id="user-content-or"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Or</h2>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">public</span> <span class="pl-k">func</span> <span class="pl-en">|</span> (<span class="pl-smi"><span class="pl-en">left</span></span> : NSPredicate, <span class="pl-smi"><span class="pl-en">right</span></span> : NSPredicate )<span class="pl-k">-&gt;</span> NSPredicate
<span class="pl-k">public</span> <span class="pl-k">func</span> <span class="pl-en">|</span> (<span class="pl-smi"><span class="pl-en">left</span></span> : NSPredicate, <span class="pl-smi"><span class="pl-en">right</span></span> : [NSPredicate] )<span class="pl-k">-&gt;</span> NSPredicate
<span class="pl-k">public</span> <span class="pl-k">func</span> <span class="pl-en">|</span> (<span class="pl-smi"><span class="pl-en">left</span></span> : [NSPredicate], <span class="pl-smi"><span class="pl-en">right</span></span> : [NSPredicate] )<span class="pl-k">-&gt;</span> NSPredicate</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#example-1" id="user-content-example-1"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example</h4>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">let</span> firstLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level &gt; 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> secondLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level =&lt; 36<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> typePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>type.id = 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> namePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>name == Charmender<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>

firstLevelPredicate <span class="pl-k">|</span> secondLevelPredicate
<span class="pl-c"><span class="pl-c">//</span>NSPredicate (format: "level &gt; 1 OR level =&lt; 36")</span>
<span class="pl-c"></span>[firstLevelPredicate, namePredicate] <span class="pl-k">|</span> [secondLevelPredicate]
<span class="pl-c"><span class="pl-c">//</span>NSPredicate (format: "level &gt; 1 OR name == Charmender OR level =&lt; 36")</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#init" id="user-content-init"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Init</h2>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">init</span> firstPredicate <span class="pl-k">:</span> NSPredicate, secondPredicate<span class="pl-k">:</span> NSPredicate, predicateOperator<span class="pl-k">:</span> NSLogicOperator )</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#example-2" id="user-content-example-2"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example</h4>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">let</span> firstLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level &gt; 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> secondLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level =&lt; 36<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> typePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>type.id = 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> namePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>name == Charmender<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>

<span class="pl-c1">NSPredicate</span>(<span class="pl-c1">firstPredicate</span>: firstLevelPredicate, <span class="pl-c1">secondPredicate</span>: secondLevelPredicate, 
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "(level &gt; 1) AND (level =&lt; 36)")</span>
<span class="pl-c"></span>
<span class="pl-c"><span class="pl-c">//</span>Or more complex NSPredicate</span>
<span class="pl-c"></span><span class="pl-c1">NSPredicate</span>(<span class="pl-c1">firstPredicate</span>: firstLevelPredicate, <span class="pl-c1">secondPredicate</span>: secondLevelPredicate <span class="pl-k">&amp;</span> namePredicate, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">And</span>)
<span class="pl-c"><span class="pl-c">//</span>NSPredicate(format: "(level &gt; 1) AND (level =&lt; 36 AND name == Charmender)")</span>
<span class="pl-c"></span><span class="pl-c1">NSPredicate</span>(<span class="pl-c1">firstPredicate</span>: firstLevelPredicate, <span class="pl-c1">secondPredicate</span>: secondLevelPredicate <span class="pl-k">&amp;</span> namePredicate, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">Or</span>)
<span class="pl-c"><span class="pl-c">//</span>NSPredicate(format: "(level &gt; 1) OR (level =&lt; 36 AND name == Charmender)")</span></pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#example-3" id="user-content-example-3"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example</h4>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">let</span> firstLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level &gt; 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> secondLevelPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>level =&lt; 36<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> typePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>type.id = 1<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
<span class="pl-k">let</span> namePredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span> (<span class="pl-c1">format</span>: <span class="pl-s"><span class="pl-pds">"</span>name == Charmender<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
    
<span class="pl-k">var</span>  expectedPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">firstPredicate</span>: firstLevelPredicate, <span class="pl-c1">secondPredicate</span>: secondLevelPredicate, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">Or</span>)
<span class="pl-c"><span class="pl-c">//</span>NSPredicate(format: "(level &gt; 1) OR (level =&lt; 36)")</span>
<span class="pl-c"></span>expectedPredicate <span class="pl-k">=</span> <span class="pl-c1">NSPredicate</span>(<span class="pl-c1">firstPredicate</span>: firstLevelPredicate, <span class="pl-c1">secondPredicate</span>: secondLevelPredicate <span class="pl-k">&amp;</span> namePredicate, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">Or</span>) 
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "(level &gt; 1) OR (level =&lt; 36 AND name == Charmender)")</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#predicatebuilder" id="user-content-predicatebuilder"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>PredicateBuilder</h2>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-k">func</span> <span class="pl-en">predicateBuilder</span>(<span class="pl-smi"><span class="pl-en">attribute</span></span>: <span class="pl-c1">String</span><span class="pl-k">!</span>, <span class="pl-smi"><span class="pl-en">value</span></span>: <span class="pl-c1">AnyObject</span>, <span class="pl-smi"><span class="pl-en">predicateOperator</span></span>: NSPredicateOperator) <span class="pl-k">-&gt;</span> NSPredicate<span class="pl-k">?</span> </pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#example-4" id="user-content-example-4"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Example</h4>
<div class="highlight highlight-source-swift"><pre><span class="pl-k">let</span> pokemonsName <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>Charmender<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Charizard<span class="pl-pds">"</span></span>]
<span class="pl-k">let</span> fireType <span class="pl-k">=</span> PokemonFactory.<span class="pl-c1">createType</span>(managedObjectContext, <span class="pl-c1">id</span>: .<span class="pl-smi">Fire</span>, <span class="pl-c1">name</span>: .<span class="pl-smi">Fire</span>)

NSPredicate.<span class="pl-c1">predicateBuilder</span>(<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>, <span class="pl-c1">value</span>: pokemonsName , <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">In</span>
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(name: "type IN %@", pokemonsName)</span>
<span class="pl-c"></span>
NSPredicate.<span class="pl-c1">predicateBuilder</span>(<span class="pl-s"><span class="pl-pds">"</span>level<span class="pl-pds">"</span></span>, <span class="pl-c1">value</span>: <span class="pl-c1">1</span>, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">NotEqual</span>)
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "level != 1") </span>
<span class="pl-c"></span>NSPredicate.<span class="pl-c1">predicateBuilder</span>(<span class="pl-s"><span class="pl-pds">"</span>type<span class="pl-pds">"</span></span>, <span class="pl-c1">value</span>: fireType, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">NotEqual</span>)
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "type != %@", fireType)</span>
<span class="pl-c"></span>NSPredicate.<span class="pl-c1">predicateBuilder</span>(<span class="pl-s"><span class="pl-pds">"</span>level<span class="pl-pds">"</span></span>, <span class="pl-c1">value</span>: <span class="pl-c1">16</span>, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">GreaterThan</span>)
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "level &gt; 16")</span>
<span class="pl-c"></span>NSPredicate.<span class="pl-c1">predicateBuilder</span>(<span class="pl-s"><span class="pl-pds">"</span>level<span class="pl-pds">"</span></span>, <span class="pl-c1">value</span>: <span class="pl-c1">16</span>, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">LessThan</span>)
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "level &lt; 16")</span>
<span class="pl-c"></span>NSPredicate.<span class="pl-c1">predicateBuilder</span>(<span class="pl-s"><span class="pl-pds">"</span>level<span class="pl-pds">"</span></span>, <span class="pl-c1">value</span>: <span class="pl-c1">16</span>, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">GreaterThanOrEqual</span>)
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "level &gt;= 16")</span>
<span class="pl-c"></span>NSPredicate.<span class="pl-c1">predicateBuilder</span>(<span class="pl-s"><span class="pl-pds">"</span>level<span class="pl-pds">"</span></span>, <span class="pl-c1">value</span>: <span class="pl-c1">16</span>, <span class="pl-c1">predicateOperator</span>: .<span class="pl-smi">LessThanOrEqual</span>)
<span class="pl-c"><span class="pl-c">//</span> NSPredicate(format: "level &lt;= 16")</span></pre></div>

        </div>

    </div>]