[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#front-end-bible" id="user-content-front-end-bible"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><strong>Front-End Bible</strong>
</h1>
<h3>
<a aria-hidden="true" class="anchor" href="#html" id="user-content-html"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>HTML</h3>
<ol>
<li>Use HTML5 Doctype declaration <code>&lt;!DOCTYPE html&gt;</code> unless stated otherwise in project details.</li>
<li>Validate every HTML page with <a href="http://validator.w3.org/" rel="nofollow">W3C</a>.</li>
<li>All pages must be tested on following browsers unless stated otherwise in project details:<br/>
<code>Chrome</code> - current version plus previous two versions.<br/>
<code>Firefox</code> - current version plus previous two versions.<br/>
<code>Edge</code> - current version plus previous two versions.<br/>
<code>Internet Explorer</code> - IE11, IE10 (IE9 should be tested based on project requirements).<br/>
<code>Mobile Safari</code> - iOS 8.0 to current version.<br/>
<code>Mobile Chrome</code> - Android from v.4.4 and iOS from 8.0 to latest.</li>
<li>Every page should have <code>&lt;title&gt;</code> tag defined.</li>
<li>Meta tag for character encoding should be set: <code>&lt;meta charset="utf-8"&gt;</code>.</li>
<li>Language attribute should be present: <code>&lt;html lang="en"&gt;</code>.</li>
<li>All special HTML characters should be properly encoded (e.g. <code>&amp;amp;</code>, <code>&amp;reg;</code>).</li>
<li>All responsive pages should have viewport meta tag declared.<br/>
<code>&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;</code>.</li>
<li>Properties <code>maximum-scale=1</code> and <code>user-scalable=no</code> should be used only if needed.</li>
<li>Every project should have favicons in the root directory with reference link in the head section.</li>
<li>Every project must have up to date <a href="https://bitbucket.org/devbridge/frontend-toolkit/wiki/Styleguide" rel="nofollow">Style Guide</a> page.</li>
</ol>
<h3>
<a aria-hidden="true" class="anchor" href="#css" id="user-content-css"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>CSS</h3>
<ol>
<li>
<p>No inline CSS</p>
</li>
<li>
<p>Global selectors should be avoided (e.g. <code>*{}</code>).</p>
</li>
<li>
<p>Use classes instead of ID's where is possible.</p>
</li>
<li>
<p>Main HTML elements should have default styles and alternative classes defined (e.g.: .heading1, .heading2, .heading3):
<code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, <code>&lt;h4&gt;</code><br/>
<code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code><br/>
<code>&lt;p&gt;</code><br/>
<code>&lt;a&gt;</code><br/>
<code>&lt;img&gt;</code><br/>
<code>&lt;h4 class="heading1"&gt;</code></p>
</li>
<li>
<p>HTML elements should be selected using class attribute where possible, especially form elements (e.g. <code>&lt;input class="text-field" /&gt;</code>).</p>
</li>
<li>
<p>Long CSS selectors should be avoided. Recommended length - up to three elements.</p>
</li>
<li>
<p><code>body</code> element should have default <code>font</code> style declaration, <code>background</code> color and <code>min-width</code> properties.</p>
</li>
<li>
<p>Use SVG sprites where possible.</p>
</li>
<li>
<p>Helper classes (e.g. <code>.active</code>, <code>.selected</code> ) should be never styled alone.</p>
</li>
<li>
<p>We use BEM methodology for naming convention. <a href="http://getbem.com/" rel="nofollow">More info</a></p>
</li>
</ol>
<h3>
<a aria-hidden="true" class="anchor" href="#javascript" id="user-content-javascript"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Javascript</h3>
<ol>
<li>
<p>No inline javascript of any kind.</p>
</li>
<li>
<p>Classes for javascript selectors should have <code>js-</code> prefixes and should never be styled.</p>
</li>
<li>
<p><del>Load your javascript code with <code>require.js</code> and/or place javascript file in the end of your document. Further reading:  <a href="http://www.devbridge.com/articles/understanding-amd-requirejs/" rel="nofollow">http://www.devbridge.com/articles/understanding-amd-requirejs/</a></del></p>
</li>
<li>
<p>Define variables at the top of the function.</p>
</li>
<li>
<p>Always declare <code>"use strict";</code> at the top of the module. Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a "strict" operating context. This strict context prevents certain actions from being taken and throws more exceptions.</p>
</li>
<li>
<p>Reduce global variables as much as you can.
Further reading:</p>
<ul>
<li>Module pattern: <a href="http://stackoverflow.com/questions/17776940/javascript-module-pattern-with-example" rel="nofollow">Link 1</a> <a href="http://www.yuiblog.com/blog/2007/06/12/module-pattern/" rel="nofollow">Link 2</a>
</li>
<li>Module loader: <a href="http://requirejs.org/" rel="nofollow">Link 1</a>
</li>
</ul>
</li>
<li>
<p>Don't use reserved keywords for naming. Don't use reserved words as keys. It won't work in IE8, list of reserved words <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Reserved_Words" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Reserved_Words</a></p>
</li>
<li>
<p>Try to avoid hardcoded values in the javascript code.</p>
</li>
<li>
<p>If you operate with DOM - be sure, that you have DOM ready event fired, try to use it only once:</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-en">$</span>(<span class="pl-k">function</span>() {
        <span class="pl-c"><span class="pl-c">//</span> Handler for .ready() called.</span>
    });</pre></div>
</li>
<li>
<p>Try to avoid user agent detection, instead try to detect features. Further reading:</p>
<ul>
<li><a href="http://modernizr.com/" rel="nofollow">Modernizr</a></li>
<li><a href="https://gist.github.com/cferdinandi/6269067">Pseudo selector support(checked, after, before and etc)</a></li>
</ul>
</li>
<li>
<p>Declare your variables at the top of the scope, do not use undeclared variables, combine them with one “var” declaration:</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-c"><span class="pl-c">//</span>Bad</span>
    <span class="pl-k">var</span> items <span class="pl-k">=</span> <span class="pl-en">getItems</span>();
    <span class="pl-k">var</span> goSportsTeam <span class="pl-k">=</span> <span class="pl-c1">true</span>;
    <span class="pl-k">var</span> dragonball <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>z<span class="pl-pds">"</span></span>;

    <span class="pl-c"><span class="pl-c">//</span>Good</span>
    <span class="pl-k">var</span> items <span class="pl-k">=</span> <span class="pl-en">getItems</span>(),
        goSportsTeam <span class="pl-k">=</span> <span class="pl-c1">true</span>,
        dragonBall <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>z<span class="pl-pds">"</span></span>;</pre></div>
</li>
</ol>
<p>Further reading: <a href="https://gist.github.com/hallettj/64478">https://gist.github.com/hallettj/64478</a></p>
<ol start="12">
<li>
<p>Declare variables outside of the for statement.</p>
</li>
<li>
<p>Use dot notation, then accessing properties. You can break this rule if property name is with not a valid name.</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-c"><span class="pl-c">//</span>Bad</span>
    <span class="pl-k">var</span> isDevbridge <span class="pl-k">=</span> devbridge[<span class="pl-s"><span class="pl-pds">'</span>property<span class="pl-pds">'</span></span>];

    <span class="pl-c"><span class="pl-c">//</span>Good</span>
    <span class="pl-k">var</span> isDevbridge <span class="pl-k">=</span> <span class="pl-smi">devbridge</span>.<span class="pl-smi">property</span>;</pre></div>
</li>
</ol>
<p>Further reading:
* <a href="http://mothereff.in/js-variables" rel="nofollow">http://mothereff.in/js-variables</a>
* <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors</a></p>
<ol start="14">
<li>
<p>For event binding, use <code>$(selector).on('event', function(){});</code>
Advantages:</p>
<ul>
<li>You can add context selector even with null value</li>
<li>Event namespacing</li>
<li>Consistency</li>
<li>Delegation</li>
</ul>
</li>
<li>
<p>Use shortcut conditional statements:</p>
<ul>
<li>Use <code>// FIXME:</code> to annotate problems,</li>
<li>Use <code>// TODO:</code> to annotate solutions to problems. These should be eliminated in production.</li>
</ul>
</li>
<li>
<p>Sometimes comments are essential part of code. Try to name variables/functions/modules properly and comment your code as needed.
Constants should be named in uppercase letters.</p>
</li>
<li>
<p>Use indentation when making long method chains:</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-c"><span class="pl-c">//</span>Bad</span>
    <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">'</span>#items<span class="pl-pds">'</span></span>).<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">'</span>.selected<span class="pl-pds">'</span></span>).<span class="pl-en">highlight</span>().<span class="pl-en">end</span>().<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">'</span>.open<span class="pl-pds">'</span></span>).<span class="pl-en">updateCount</span>();

    <span class="pl-c"><span class="pl-c">//</span>Good</span>
    <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">'</span>#items<span class="pl-pds">'</span></span>)
        .<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">'</span>.selected<span class="pl-pds">'</span></span>)
        .<span class="pl-en">highlight</span>()
        .<span class="pl-en">end</span>();</pre></div>
</li>
<li>
<p>Cache DOM lookups.</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-k">var</span> sidebar <span class="pl-k">=</span> <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">'</span>.sidebar<span class="pl-pds">'</span></span>);
    <span class="pl-smi">sidebar</span>.<span class="pl-en">hide</span>();
    <span class="pl-c"><span class="pl-c">//</span> Code</span>
    <span class="pl-smi">sidebar</span>.<span class="pl-en">show</span>();</pre></div>
</li>
<li>
<p>Never declare a function in a non-function block (if, while, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently.</p>
</li>
<li>
<p>Avoid <code>==</code>, then checking. Use <code>===</code> instead. Don’t change type of variable in it's lifespan.</p>
</li>
<li>
<p>Try to load libraries from CDN. How to make this with <code>require.js</code> see example here:</p>
<div class="highlight highlight-source-js"><pre>    jquery<span class="pl-k">:</span> [
        <span class="pl-s"><span class="pl-pds">'</span>http://somecdn.com/jquery.min<span class="pl-pds">'</span></span>, <span class="pl-c"><span class="pl-c">//</span> your cdn</span>
        <span class="pl-s"><span class="pl-pds">'</span>lib/jquery<span class="pl-pds">'</span></span> <span class="pl-c"><span class="pl-c">//</span> your fallback</span>
    ],</pre></div>
</li>
</ol>
<p>Resources for cdn files:
* <a href="https://developers.google.com/speed/libraries/devguide" rel="nofollow">https://developers.google.com/speed/libraries/devguide</a>
* <a href="http://cdnjs.com/" rel="nofollow">http://cdnjs.com/</a>
* <a href="http://cdncatalog.com/" rel="nofollow">http://cdncatalog.com/</a>
* <a href="http://www.jsdelivr.com/" rel="nofollow">http://www.jsdelivr.com/</a></p>
<ol start="22">
<li>
<p>When possible, use custom namespace for events. It's easier to unbind the exact event that you attached without affecting other events bound to the DOM element.</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">"</span>.js-attach<span class="pl-pds">"</span></span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">"</span>click.mySpecialClick<span class="pl-pds">"</span></span>, myEventHandler); <span class="pl-c"><span class="pl-c">//</span> GOOD</span>

    <span class="pl-c"><span class="pl-c">//</span> Later on, it's easier to unbind just your click event</span>
    <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">"</span>.js-attach<span class="pl-pds">"</span></span>).<span class="pl-en">off</span>(<span class="pl-s"><span class="pl-pds">"</span>click.mySpecialClick<span class="pl-pds">"</span></span>);</pre></div>
</li>
<li>
<p>Prevent animations from looping. Use stop(true, true).
Further reading:</p>
<ul>
<li><a href="http://api.jquery.com/stop/" rel="nofollow">http://api.jquery.com/stop/</a></li>
<li><a href="http://api.jquery.com/finish/" rel="nofollow">http://api.jquery.com/finish/</a></li>
<li><a href="http://api.jquery.com/clearqueue/" rel="nofollow">http://api.jquery.com/clearqueue/</a></li>
</ul>
</li>
<li>
<p>Check the compatibility of plugin with the jQuery version that you are using. Do not forget to include jQuery migrate script if library is written on jQuery, that is older than 1.9 version.
Further reading:</p>
<ul>
<li><a href="http://plugins.jquery.com/migrate/" rel="nofollow">http://plugins.jquery.com/migrate/</a></li>
<li><a href="http://jquery.com/upgrade-guide/1.9/" rel="nofollow">http://jquery.com/upgrade-guide/1.9/</a></li>
</ul>
</li>
<li>
<p>Do not mix CSS with jQuery.
Why: Harder to override, control and maintain.</p>
<div class="highlight highlight-source-js"><pre>    <span class="pl-c"><span class="pl-c">//</span>Bad</span>
    <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">'</span>#myDiv<span class="pl-pds">'</span></span>).<span class="pl-en">css</span>({<span class="pl-s"><span class="pl-pds">'</span>color<span class="pl-pds">'</span></span><span class="pl-k">:</span>red, <span class="pl-s"><span class="pl-pds">'</span>font-weight<span class="pl-pds">'</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">'</span>bold<span class="pl-pds">'</span></span>});

    <span class="pl-c"><span class="pl-c">//</span>Good</span>
    <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">'</span>#myDiv<span class="pl-pds">'</span></span>).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">'</span>error<span class="pl-pds">'</span></span>);</pre></div>
</li>
<li>
<p>DO NOT use Deprecated Methods. It is always important to keep an eye on deprecated methods for each new version and try avoid using them.
<a href="http://api.jquery.com/category/deprecated/" rel="nofollow">http://api.jquery.com/category/deprecated/</a></p>
</li>
<li>
<p>Be up to date, read, develop, share and contribute:</p>
<ul>
<li>Jslint (<a href="http://www.jslint.com/" rel="nofollow">http://www.jslint.com/</a>), jshint(<a href="http://www.jshint.com/" rel="nofollow">http://www.jshint.com/</a>)  - these tools will help you to check if your javascript source complies with coding rules.</li>
<li><a href="http://dailyjs.com/" rel="nofollow">http://dailyjs.com/</a></li>
<li><a href="http://javascriptweekly.com/" rel="nofollow">http://javascriptweekly.com/</a></li>
<li><a href="http://www.smashingmagazine.com/" rel="nofollow">http://www.smashingmagazine.com/</a></li>
<li><a href="http://tympanus.net/codrops/collective" rel="nofollow">http://tympanus.net/codrops/collective</a></li>
<li><a href="http://yuiblog.com/crockford/" rel="nofollow">http://yuiblog.com/crockford/</a></li>
<li><a href="http://24ways.org/" rel="nofollow">http://24ways.org/</a></li>
<li><a href="https://github.com/trending?l=javascript">https://github.com/trending?l=javascript</a></li>
</ul>
</li>
</ol>
<h3>
<a aria-hidden="true" class="anchor" href="#ide" id="user-content-ide"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>IDE</h3>
<ol>
<li>Webstorm settings folder <code>.idea</code> and <code>.sass-cache</code> folder should be excluded from the project and the repository.</li>
<li>For HTML and SCSS formatting use spaces of 4 tabs indentation.</li>
<li>Code before check-in should be well formatted (Ctrl + Alt + L).</li>
</ol>

        </div>

    </div>]