[<div class="wiki-body gollum-creole-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>In FrogattoFormulaLanguage, several functions are available that conditionally evaluate code. These are handy, since code that is not evaluated can't crash. Lines marked '(optionally)' aren't required for the statement, and can be safely left out.</p><h2>
<a aria-hidden="true" class="anchor" href="#if" id="user-content-if"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>if</h2><pre>if(&lt;this is not false&gt;, 
&lt;do this&gt;, 
(optionally) &lt;otherwise do this.&gt;)</pre><p>Essentially, the third arg for the if() is what other languages put after elseif statements. However, many else-if statements can gather a lot of close brackets at the end, so sometimes it's better to use a...</p><h2>
<a aria-hidden="true" class="anchor" href="#switch" id="user-content-switch"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>switch</h2><pre>switch(&lt;This&gt;, 
&lt;if This is x&gt;, &lt;then do this stuff.&gt;, 
(optionally) &lt;otherwise, if This is y&gt;, &lt;then do this other stuff.&gt;, 
(optionally) &lt;or, if This is z&gt;, &lt;then do this stuff here.&gt;, 
(optionally) ..., ..., (repeat previous line as needed)
(optionally) &lt;but, if This is Î±&gt;, &lt;then do this stuff.&gt;,
(optionally) &lt;do this stuff if nothing else matched.&gt;)</pre><p>The switch will crash if it can't return anything. This is very useful for catching out-of-bounds data.</p><h2>
<a aria-hidden="true" class="anchor" href="#map" id="user-content-map"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>map</h2><pre>map(&lt;this list&gt;, &lt;with each element named this string&gt;,
&lt;for each element in the list, execute this code here&gt;)</pre><p>map itself returns a list of the results of the last arg. You can map over the returned list, of course. Map neatly eliminates 99% of the use of the next section.</p><h3>
<a aria-hidden="true" class="anchor" href="#and" id="user-content-and"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>and</h3><pre>&lt;This&gt; and &lt;That&gt;</pre><p>results in either 0 or 1. It's not actually a function, and so doesn't need commas. However, it deserves mention here because it short-circuiting - if This evaluates to false, then there is no point evaluating That. Since there is no point, That is not evaluated. Since code that is not evaluated can't crash, you can check if the index you're trying to access is actually *in* the list before trying to access it. For example, with a variable-length <tt>list</tt>, <tt>index &gt; 0 and index &lt; size(list) and list[index] = value</tt> results in <tt>0</tt> if the index is not equal to value or that element doesn't actually <em>exist</em>. If we just checked <tt>list[index]</tt>, <tt>list</tt> might not be that long and we'd crash the program.</p>
        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p>More help can be found via IRC, <a href="irc://irc.freenode.net/#frogatto" rel="nofollow">#Frogatto</a> on freenode.net. This wiki is not a complete reference.</p>

          </div>
        </div>
    </div>]