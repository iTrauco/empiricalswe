[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#scheduler" id="user-content-scheduler"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Scheduler</h1>
<p>Scheduler is a feature introduced in v1.2.0 .</p>
<p>Scheduler is a cron-like implementation integrated inside ProxySQL with millisecond granularity. It is possible to be configured only through the Admin interface: configuration from config file is not supported yet and not in the roadmap.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#motivation" id="user-content-motivation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Motivation</h2>
<p>Scheduler allows ProxySQL to run custom scripts at regular interval for multiple purposes. The main motivation is the ability to reconfigure ProxySQL in case of external events that such custom scripts can detect.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#implementation" id="user-content-implementation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Implementation</h2>
<p>The current implementation is suppsted by two tables:</p>
<div class="highlight highlight-source-sql"><pre>Admin<span class="pl-k">&gt;</span> SHOW TABLES <span class="pl-k">LIKE</span> <span class="pl-s"><span class="pl-pds">'</span>%scheduler%<span class="pl-pds">'</span></span>;
<span class="pl-k">+</span><span class="pl-c"><span class="pl-c">--</span>-----------------+</span>
| tables            |
<span class="pl-k">+</span><span class="pl-c"><span class="pl-c">--</span>-----------------+</span>
| scheduler         |
| runtime_scheduler |
<span class="pl-k">+</span><span class="pl-c"><span class="pl-c">--</span>-----------------+</span>
<span class="pl-c1">2</span> rows <span class="pl-k">in</span> <span class="pl-k">set</span> (<span class="pl-c1">0</span>.<span class="pl-c1">00</span> sec)</pre></div>
<p>To enter into details:</p>
<ul>
<li>table <code>scheduler</code> is where the scheduler can be configured</li>
<li>table <code>runtime_scheduler</code> is the runtime representation (read only) of the scheduler</li>
</ul>
<p>Table <code>scheduler</code> has the following structure:</p>
<div class="highlight highlight-source-sql"><pre>Admin<span class="pl-k">&gt;</span> SHOW CREATE TABLE scheduler\G
<span class="pl-k">***************************</span> <span class="pl-c1">1</span>. row <span class="pl-k">***************************</span>
       table: scheduler
Create Table: CREATE TABLE scheduler (
    id <span class="pl-k">INTEGER</span> <span class="pl-k">PRIMARY KEY</span> AUTOINCREMENT <span class="pl-k">NOT NULL</span>,
    active <span class="pl-k">INT</span> <span class="pl-k">CHECK</span> (active <span class="pl-k">IN</span> (<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)) <span class="pl-k">NOT NULL</span> DEFAULT <span class="pl-c1">1</span>,
    interval_ms <span class="pl-k">INTEGER</span> <span class="pl-k">CHECK</span> (interval_ms<span class="pl-k">&gt;=</span><span class="pl-c1">100</span> <span class="pl-k">AND</span> interval_ms<span class="pl-k">&lt;=</span><span class="pl-c1">100000000</span>) <span class="pl-k">NOT NULL</span>,
    filename <span class="pl-k">VARCHAR</span> <span class="pl-k">NOT NULL</span>,
    arg1 <span class="pl-k">VARCHAR</span>,
    arg2 <span class="pl-k">VARCHAR</span>,
    arg3 <span class="pl-k">VARCHAR</span>,
    arg4 <span class="pl-k">VARCHAR</span>,
    arg5 <span class="pl-k">VARCHAR</span>,
    comment <span class="pl-k">VARCHAR</span> <span class="pl-k">NOT NULL</span> DEFAULT <span class="pl-s"><span class="pl-pds">'</span><span class="pl-pds">'</span></span>)
<span class="pl-c1">1</span> row <span class="pl-k">in</span> <span class="pl-k">set</span> (<span class="pl-c1">0</span>.<span class="pl-c1">00</span> sec)</pre></div>
<p>In details:</p>
<ul>
<li>
<code>id</code> : unique identifier of the scheduler job</li>
<li>
<code>active</code> : if set to 1, the job is active. Otherwise is not</li>
<li>
<code>interval_ms</code> : how often (in millisecond) the job will be started. Minimum interval_ms is 100 milliseconds</li>
<li>
<code>filename</code> : full path of the executable to be executed</li>
<li>
<code>arg1</code> to <code>arg5</code> : arguments (maximum 5) that can be passed to the job</li>
<li>
<code>comment</code> : an free form text field to annotate the purpose of the job</li>
</ul>
<p>For reference only, table <code>runtime_scheduler</code> has the same identical structure:</p>
<div class="highlight highlight-source-sql"><pre>Admin<span class="pl-k">&gt;</span> SHOW CREATE TABLE runtime_scheduler\G
<span class="pl-k">***************************</span> <span class="pl-c1">1</span>. row <span class="pl-k">***************************</span>
       table: runtime_scheduler
Create Table: CREATE TABLE runtime_scheduler (
    id <span class="pl-k">INTEGER</span> <span class="pl-k">PRIMARY KEY</span> AUTOINCREMENT <span class="pl-k">NOT NULL</span>,
    active <span class="pl-k">INT</span> <span class="pl-k">CHECK</span> (active <span class="pl-k">IN</span> (<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)) <span class="pl-k">NOT NULL</span> DEFAULT <span class="pl-c1">1</span>,
    interval_ms <span class="pl-k">INTEGER</span> <span class="pl-k">CHECK</span> (interval_ms<span class="pl-k">&gt;=</span><span class="pl-c1">100</span> <span class="pl-k">AND</span> interval_ms<span class="pl-k">&lt;=</span><span class="pl-c1">100000000</span>) <span class="pl-k">NOT NULL</span>,
    filename <span class="pl-k">VARCHAR</span> <span class="pl-k">NOT NULL</span>,
    arg1 <span class="pl-k">VARCHAR</span>,
    arg2 <span class="pl-k">VARCHAR</span>,
    arg3 <span class="pl-k">VARCHAR</span>,
    arg4 <span class="pl-k">VARCHAR</span>,
    arg5 <span class="pl-k">VARCHAR</span>,
    comment <span class="pl-k">VARCHAR</span> <span class="pl-k">NOT NULL</span> DEFAULT <span class="pl-s"><span class="pl-pds">'</span><span class="pl-pds">'</span></span>)
<span class="pl-c1">1</span> row <span class="pl-k">in</span> <span class="pl-k">set</span> (<span class="pl-c1">0</span>.<span class="pl-c1">00</span> sec)</pre></div>
<p>As for the rest of configuration tables in ProxySQL, after editing the data in this table, configuration needs to be loaded at runtime to be effective, and saved to disk to be persistent.
For this reason ProxySQL has new commands to support Scheduler:</p>
<ul>
<li>
<code>LOAD SCHEDULER TO RUNTIME</code> and <code>LOAD SCHEDULER FROM MEMORY</code> : load the configuration from <code>main</code>.<code>scheduler</code> to runtime, and becomes effective;</li>
<li>
<code>LOAD SCHEDULER TO MEMORY</code> and <code>LOAD SCHEDULER FROM DISK</code> : load the configuration from <code>disk</code>.<code>scheduler</code> to <code>main</code>.<code>scheduler</code>;</li>
<li>
<code>SAVE SCHEDULER FROM RUNTIME</code> and <code>SAVE SCHEDULER TO MEMORY</code> : save the configuration from runtime to <code>main</code>.<code>scheduler</code>;</li>
<li>
<code>SAVE SCHEDULER FROM MEMORY</code> and <code>SAVE SCHEDULER TO DISK</code> : save the configuration from <code>main</code>.<code>scheduler</code> to <code>disk</code>.<code>scheduler</code>, and becomes persistent across restart.</li>
</ul>
<p>The scheduler is implemented calling <code>fork()</code> and then <code>execve()</code>. If <code>execve()</code> fails the error is reported into error log.</p>

        </div>

    </div>]