[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h4>
<a aria-hidden="true" class="anchor" href="#automatic-deflating" id="user-content-automatic-deflating"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Automatic deflating</h4>
<p>The <code>HTTP.use(:auto_deflate)</code> option can be used for automatically compressing the request body before writing it to the socket:</p>
<div class="highlight highlight-source-ruby"><pre>response <span class="pl-k">=</span> <span class="pl-c1">HTTP</span>.use(<span class="pl-c1">:auto_deflate</span>)
               .post(<span class="pl-s"><span class="pl-pds">"</span>http://example.org/upload<span class="pl-pds">"</span></span>, <span class="pl-c1">body:</span> body)</pre></div>
<p>By default <code>gzip</code> encoding will be used, but <code>deflate</code> is also supported:</p>
<div class="highlight highlight-source-ruby"><pre>response <span class="pl-k">=</span> <span class="pl-c1">HTTP</span>.use(<span class="pl-c1">:auto_deflate</span> =&gt; {<span class="pl-c1">:method</span> =&gt; <span class="pl-c1">:deflate</span>})
               .post(<span class="pl-s"><span class="pl-pds">"</span>http://example.org/upload<span class="pl-pds">"</span></span>, <span class="pl-c1">body:</span> body)</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#automatic-inflating" id="user-content-automatic-inflating"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Automatic inflating</h4>
<p>The <code>HTTP.use(:auto_inflate)</code> option can be used for automatically decompressing the response body:</p>
<div class="highlight highlight-source-ruby"><pre>response <span class="pl-k">=</span> <span class="pl-c1">HTTP</span>.use(<span class="pl-c1">:auto_inflate</span>).headers(<span class="pl-s"><span class="pl-pds">"</span>Accept-Encoding<span class="pl-pds">"</span></span> =&gt; <span class="pl-s"><span class="pl-pds">"</span>gzip<span class="pl-pds">"</span></span>)
               .get(<span class="pl-s"><span class="pl-pds">"</span>http://example.org/large-file<span class="pl-pds">"</span></span>)</pre></div>

        </div>

    </div>]