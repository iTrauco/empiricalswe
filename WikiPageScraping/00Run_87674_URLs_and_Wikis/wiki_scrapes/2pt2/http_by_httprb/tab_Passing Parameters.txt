[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h4>
<a aria-hidden="true" class="anchor" href="#query-string-parameters" id="user-content-query-string-parameters"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Query string parameters</h4>
<p>Use the <code>:params</code> option to add query string parameters to requests:</p>
<div class="highlight highlight-source-ruby"><pre><span class="pl-c1">HTTP</span>.get(<span class="pl-s"><span class="pl-pds">"</span>http://example.com/resource<span class="pl-pds">"</span></span>, <span class="pl-c1">:params</span> =&gt; {<span class="pl-c1">:foo</span> =&gt; <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>})</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#form-data" id="user-content-form-data"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Form data</h4>
<p>Use the <code>:form</code> option to pass data serialized as form encoded:</p>
<div class="highlight highlight-source-ruby"><pre><span class="pl-c1">HTTP</span>.post(<span class="pl-s"><span class="pl-pds">"</span>http://example.com/resource<span class="pl-pds">"</span></span>, <span class="pl-c1">:form</span> =&gt; {<span class="pl-c1">:foo</span> =&gt; <span class="pl-s"><span class="pl-pds">"</span>42<span class="pl-pds">"</span></span>})</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#request-bodies" id="user-content-request-bodies"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Request bodies</h4>
<p>The <code>:body</code> option allows posting a raw request body:</p>
<div class="highlight highlight-source-ruby"><pre><span class="pl-c1">HTTP</span>.post(<span class="pl-s"><span class="pl-pds">"</span>http://example.com/resource<span class="pl-pds">"</span></span>, <span class="pl-c1">:body</span> =&gt; <span class="pl-s"><span class="pl-pds">"</span>foo=42&amp;bar=baz<span class="pl-pds">"</span></span>)</pre></div>
<p>Request bodies can be <code>String</code>, <code>Enumerable</code> or IO-like object. <code>Enumerable</code> and IO-like objects can be used for streaming request bodies.</p>
<p>The <code>:json</code> option allows serializing Ruby objects as JSON:</p>
<div class="highlight highlight-source-ruby"><pre><span class="pl-c1">HTTP</span>.post(<span class="pl-s"><span class="pl-pds">"</span>http://example.com/resource<span class="pl-pds">"</span></span>, <span class="pl-c1">:json</span> =&gt; { <span class="pl-c1">:foo</span> =&gt; <span class="pl-s"><span class="pl-pds">"</span>42<span class="pl-pds">"</span></span> })</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#file-uploads-via-form-data" id="user-content-file-uploads-via-form-data"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>File uploads (via form data)</h4>
<p>To upload files in multipart format, construct the form as follows:</p>
<div class="highlight highlight-source-ruby"><pre><span class="pl-c1">HTTP</span>.post(<span class="pl-s"><span class="pl-pds">"</span>http://example.com/resource<span class="pl-pds">"</span></span>, <span class="pl-c1">:form</span> =&gt; {
  <span class="pl-c1">:username</span> =&gt; <span class="pl-s"><span class="pl-pds">"</span>ixti<span class="pl-pds">"</span></span>,
  <span class="pl-c1">:avatar</span>   =&gt; <span class="pl-c1">HTTP</span>::<span class="pl-c1">FormData</span>::<span class="pl-c1">File</span>.<span class="pl-k">new</span>(<span class="pl-s"><span class="pl-pds">"</span>/home/ixit/avatar.png<span class="pl-pds">"</span></span>)
})</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#file-uploads-raw" id="user-content-file-uploads-raw"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>File uploads (raw)</h4>
<p>To upload files in raw format, pass the file as the request body:</p>
<div class="highlight highlight-source-ruby"><pre><span class="pl-c1">HTTP</span>.post(<span class="pl-s"><span class="pl-pds">"</span>http://example.com/resource<span class="pl-pds">"</span></span>, <span class="pl-c1">body:</span> <span class="pl-c1">File</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>/home/ixit/avatar.png<span class="pl-pds">"</span></span>))</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#see-also" id="user-content-see-also"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>See also</h3>
<ul>
<li><a class="internal present" href="/httprb/http/wiki/Making-Requests">Making Requests</a></li>
<li><a class="internal present" href="/httprb/http/wiki/Response-Handling">Response Handling</a></li>
<li><a class="internal present" href="/httprb/http/wiki/Cookies">Cookies</a></li>
</ul>

        </div>

    </div>]