[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#tutorial-07---bouncing-logo" id="user-content-tutorial-07---bouncing-logo"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Tutorial 07 - Bouncing logo</h1>
<ul>
<li>Tutorial 07 - Bouncing logo
<ul>
<li>Preparing variables</li>
<li>Getting the logo size</li>
<li>Main loop</li>
<li>Expected output</li>
<li>Full example</li>
</ul>
</li>
</ul>
<p>The final tutorial expects you to have ran the previous tutorials. In this example, we will just bounce the Lua-SDL2 logo to the window borders.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#preparing-variables" id="user-content-preparing-variables"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Preparing variables</h2>
<pre><code>local running   = true
local graphics  = { }
local pos       = { }
local dir       = { 1, 1 }
local width     = 640
local height    = 480
</code></pre>
<ul>
<li>The width, height will be the window size and used to compute the borders boundary,</li>
<li>The pos table will be used to determine the Lua-SDL2 logo position,</li>
<li>The dir table is the increase position factor</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#getting-the-logo-size" id="user-content-getting-the-logo-size"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting the logo size</h2>
<p>Now we need to query the logo size to determine the initial position</p>
<pre><code>local img, ret = image.load("Lua-SDL2.png")
if not img then
error(err)
end

local logo, err = rdr:createTextureFromSurface(img)
if not logo then
error(err)
end

-- Store in global graphics
graphics.win    = win
graphics.rdr    = rdr
graphics.logo   = logo

-- Get the size of the logo
local f, a, w, h = logo:query()

pos.x = width / 2 - w / 2
pos.y = height / 2 - h / 2
pos.w = 256
pos.h = 256
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#main-loop" id="user-content-main-loop"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Main loop</h2>
<p>In the main loop, we just increase the position and test if it goes to a border boundary, in that case we toggle the direction factor.</p>
<pre><code>while running do
for e in SDL.pollEvent() do
if e.type == SDL.event.Quit then
                        running = false
end
end

        graphics.rdr:clear()
        graphics.rdr:copy(graphics.logo, nil, pos)
        graphics.rdr:present()

        pos.x = pos.x + dir[1]
        pos.y = pos.y + dir[2]

if dir[1] &gt; 0 and pos.x &gt; width - 256 then
                dir[1] = -1
elseif dir[1] &lt; 0 and pos.x &lt;= 0 then
                dir[1] = 1
end

if dir[2] &gt; 0 and pos.y &gt; height - 256 then
                dir[2] = -1
elseif dir[2] &lt; 0 and pos.y &lt;= 0 then
                dir[2] = 1
end

        SDL.delay(20)
end
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#expected-output" id="user-content-expected-output"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Expected output</h2>
<p><img alt="" src="img/screenshot-07.png"/></p>
<h2>
<a aria-hidden="true" class="anchor" href="#full-example" id="user-content-full-example"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Full example</h2>
<p>Download <a href="file/07-bouncing.tgz">07-bouncing.tgz</a></p>

        </div>

    </div>]