[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <ol>
<li>정량화
<ol>
<li>노드 추가/제거시에 정량적으로 몇개까지 테스트할지 정하기
<ol>
<li>최소 10개 정도면 적절하지 않을까?</li>
<li>마스터 1 + 슬레이브 2(즉, 마스터 10개, 슬레이브 20개)</li>
<li>아니면 처음에는 5개에서 서비스 중단하지 않고 10개까지 늘린다던지</li>
</ol>
</li>
<li>노드의 10%가 정상작동하지 않을 때도 전체 노드가 정량적으로 얼마나 되는
환경에서 최적화할지 정하기
<ol>
<li>위와 같은 조건으로</li>
<li>최소 10개의 노드에서, 1개의 노드가 죽어도 동작하게
<ol>
<li>즉, 마스터와 슬레이브 합쳐서 3개까지 죽어도 동작할 수 있게</li>
<li>동시에 죽는 세 개의 노드가 마스터와 해당 마스터의 슬레이브
2개인 경우는 생각하지 않음</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>퍼포먼스(추가 점수로 퍼포먼스 성능을 주는것으로)
<ol>
<li>성능쪽에 대해서 추가적인 스펙은 없을지 담당자와 논의</li>
<li>eg. &lt;= 200ms 이면 몇점, 400ms 이면 몇점</li>
</ol>
</li>
<li>구현 환경 (물리적)
<ol>
<li>클라우드를 써보거나 실습실 환경 쓰는것도 고려해보기</li>
<li>실습실 서버 개수가 목표로 하는 노드 개수보다 많기 때문에 충분하다고 판단</li>
</ol>
</li>
<li>장/단점을 설명할 수 있다. 용례에 대해서 설명할 수 있다.
<ol>
<li>장/단점이 몇개씩을 설명할 수 있다. 용례를 몇개 들 수 있다.</li>
<li>한개당 1/n 점수식으로</li>
</ol>
</li>
<li>다양한 형태의 key가 가능해야 한다.(Client Library)
<ol>
<li>다양한(X), 어떤 type이 되어야 하는지</li>
<li>int</li>
<li>float</li>
<li>string</li>
<li>하나 구현할 때 마다 1/n 점수식으로</li>
</ol>
</li>
<li>복잡한 형태의 value가 가능해야 한다.
<ol>
<li>다양한(X), 어떤 type이 되어야 하는지</li>
<li>set</li>
<li>list</li>
<li>dict</li>
<li>하나 구현할 때마다 1/n 점수식으로</li>
</ol>
</li>
<li>균형있게 저장된다는 것도 정량화(교수님 지적은 없었음)
<ol>
<li>뭐 예로 들면 저장된 key의 개수를 Normalize 했을 때 2sigma 안으로 들어와야
한다.</li>
</ol>
</li>
</ol>

        </div>

    </div>]