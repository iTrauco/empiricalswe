[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Welcome to <code>Moss</code> a micro framework, that provides basic tools for building simple web pages or APIs it can also handle something bigger.</p>
<p>So what's the difference between other micro-frameworks?</p>
<p><code>Moss</code> isn't some kind of cropped full stack framework, that was cut down to fit into <em>micro</em> segment.</p>
<p><code>Moss</code> is developed as a solution with small footprint, that is easy to extend and with as little dependencies as possible - and still simple to use.</p>
<p><code>Moss</code> also wants to be <em>fashionable</em> and follows trends: <code>dependency injection</code>, <code>event dispatching</code>, <code>request-response objects</code>, <code>clean code</code>.
Not because its fancy to be <em>trendy</em>, but because it makes sense and code benefits from them.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#features" id="user-content-features"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Features</h1>
<ul>
<li>fully grown <code>Router</code> (not powerful but working :) ),</li>
<li>
<code>Request</code> and <code>Response</code> objects (got http auth, and easy header management),</li>
<li>flash messages</li>
<li>dependency injection container</li>
<li>event dispatcher with <code>AOP</code>
</li>
<li>closure and class controllers (that can be organized into bundles with fluent directory structure),</li>
<li>simple view that can be easily extended with bridge to use <code>Twig</code> (as package in composer)</li>
<li>and clean code</li>
<li>and more</li>
</ul>
<h1>
<a aria-hidden="true" class="anchor" href="#quickstart" id="user-content-quickstart"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Quickstart</h1>
<p>Add to <code>composer.json</code>:</p>
<div class="highlight highlight-source-json"><pre>    {
        <span class="pl-s"><span class="pl-pds">"</span>require<span class="pl-pds">"</span></span>: {
            <span class="pl-s"><span class="pl-pds">"</span>moss/framework<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>
        }
    }</pre></div>
<p>Or from console</p>
<pre><code>    php composer.phar require moss/framework
</code></pre>
<p>Then create entry file, eg <code>./web/index.php</code> containing:</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1">    <span class="pl-k">&lt;</span>?<span class="pl-c1">php</span></span>
<span class="pl-s1">    <span class="pl-k">use</span> <span class="pl-c1">Moss\Config\Config</span>;</span>
<span class="pl-s1">    <span class="pl-k">use</span> <span class="pl-c1">Moss\Container\ContainerInterface</span>;</span>
<span class="pl-s1">    <span class="pl-k">use</span> <span class="pl-c1">Moss\Http\Response\Response</span>;</span>
<span class="pl-s1">    <span class="pl-k">use</span> <span class="pl-c1">Moss\Kernel\App</span>;</span>
<span class="pl-s1">    </span>
<span class="pl-s1">    <span class="pl-k">require</span> <span class="pl-c1">__DIR__</span> <span class="pl-k">.</span> <span class="pl-s"><span class="pl-pds">'</span>/vendor/autoload.php<span class="pl-pds">'</span></span>;</span>
<span class="pl-s1">    </span>
<span class="pl-s1">    <span class="pl-smi">$app</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-c1">App</span>(<span class="pl-k">new</span> <span class="pl-c1">Config</span>());</span>
<span class="pl-s1">    <span class="pl-smi">$app</span><span class="pl-k">-&gt;</span>route(<span class="pl-s"><span class="pl-pds">'</span>main<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>/<span class="pl-pds">'</span></span>, <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-c1">Response</span>(<span class="pl-s"><span class="pl-pds">'</span>Hello World<span class="pl-pds">'</span></span>); });</span>
<span class="pl-s1">    <span class="pl-smi">$app</span><span class="pl-k">-&gt;</span>run()<span class="pl-k">-&gt;</span>send();</span></pre></div>
<p>Or just download simple demo app from <a href="https://github.com/potfur/moss-demo-app">github</a></p>

        </div>

    </div>]