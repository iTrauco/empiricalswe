[<div class="wiki-body gollum-mediawiki-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          
<p>Using this system requires the inclusion of one C++ header, <a href="https://github.com/SimonMcCallum/WebTics/blob/master/CppAPI/inc/WebTics.h">Webtics.h</a>. 
The system uses a second header file,<a href="https://github.com/SimonMcCallum/WebTics/blob/master/CppAPI/inc/WebticsDefines.h">WebticsDefines.h</a>, containing the enumerated types and labels describing the events to be logged. This header is not included by the programmer, but is loaded as part of the Webtics.h file. It may need to be included elsewhere to provide the event types to other program files. The functionality is provided by adding a single source file, Webtics.cpp. Alternatively the static library Webtics.lib may be linked into the project.
</p>
<p>What follows is a summary of the usage of the API we discuss. This process is relatively simple as you only need to include a couple of setup methods for identification and tracking of the player and game session. The Game Metrics class has been implemented using the Singleton design pattern. This enables the metrics systems to be accessed from any location in the program, and controls the problem of multiple instantiations.  
</p>
<p>Creation of the metric system does not establish a connection to the logging system. A session must be opened explicitly. Any LogEvent() calls used to log an event before the session is opened will have no effect.</p>
        </div>

    </div>]