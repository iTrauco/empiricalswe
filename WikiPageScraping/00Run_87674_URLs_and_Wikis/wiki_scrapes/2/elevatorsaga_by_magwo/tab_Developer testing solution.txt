[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>This is the code I'm currently using for testing when developing elevatorsaga.</p>
<div class="highlight highlight-source-js"><pre>{
    <span class="pl-en">init</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">elevators</span>, <span class="pl-smi">floors</span>) {
        <span class="pl-k">var</span> rotator <span class="pl-k">=</span> <span class="pl-c1">0</span>;
        <span class="pl-smi">_</span>.<span class="pl-en">each</span>(floors, <span class="pl-k">function</span>(<span class="pl-smi">floor</span>) {
            <span class="pl-smi">floor</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">"</span>up_button_pressed down_button_pressed<span class="pl-pds">"</span></span>, <span class="pl-k">function</span>() {
                <span class="pl-k">var</span> elevator <span class="pl-k">=</span> elevators[(rotator<span class="pl-k">++</span>) <span class="pl-k">%</span> <span class="pl-smi">elevators</span>.<span class="pl-c1">length</span>];
                <span class="pl-smi">elevator</span>.<span class="pl-en">goToFloor</span>(<span class="pl-smi">floor</span>.<span class="pl-smi">level</span>);
            }); 
        });
        <span class="pl-smi">_</span>.<span class="pl-en">each</span>(elevators, <span class="pl-k">function</span>(<span class="pl-smi">elevator</span>) {
            <span class="pl-smi">elevator</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">"</span>floor_button_pressed<span class="pl-pds">"</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">floorNum</span>) {
                <span class="pl-smi">elevator</span>.<span class="pl-en">goToFloor</span>(floorNum);
            });
            <span class="pl-smi">elevator</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">"</span>idle<span class="pl-pds">"</span></span>, <span class="pl-k">function</span>() {
                <span class="pl-smi">elevator</span>.<span class="pl-en">goToFloor</span>(<span class="pl-c1">0</span>);
            });
        });
    },
    <span class="pl-en">update</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">dt</span>, <span class="pl-smi">elevators</span>, <span class="pl-smi">floors</span>) {
    }
}</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#things-to-note" id="user-content-things-to-note"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Things to note</h3>
<p>I introduced a rotator variable to use all the elevators in a round-robin fashion, which sort of distributes the workload, although in a pretty inefficient manner. This rotator variable is only used when travellers press buttons on the floors, obviously.</p>
<p>The rest of the code is pretty obvious - go to the floor that each traveller wants to go to, and go to floor 0 when idle - floor 0 is where most travellers will appear.</p>
<p>Also, instead of for loops, I'm using <a href="https://lodash.com/docs" rel="nofollow">Lo-Dash</a> to iterate over all the elevators and floors. It has a more convenient syntax and results in more expressive code in my opinion.</p>

        </div>

    </div>]