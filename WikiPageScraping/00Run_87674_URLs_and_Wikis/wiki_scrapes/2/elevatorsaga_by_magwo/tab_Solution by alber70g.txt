[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>In progress of fullfillment: <a href="https://gist.github.com/Alber70g/8b9f77161471ca8c43ff">https://gist.github.com/Alber70g/8b9f77161471ca8c43ff</a></p>
<p>This solution works for every challenge up to 9 (din't look further yet).</p>
<p>When the challenge has to be done with max 'x' number of moves, change the <code>var e = 0</code> in the foreach to <code>var e = &lt;all elevators minus 1&gt;</code>.</p>
<div class="highlight highlight-source-js"><pre>{
    <span class="pl-en">init</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">elevators</span>, <span class="pl-smi">floors</span>) {
        <span class="pl-k">var</span> floorsWithPassengersDown <span class="pl-k">=</span> [];
        <span class="pl-k">var</span> floorsWithPassengersUp <span class="pl-k">=</span> [];
        
        <span class="pl-k">for</span> (<span class="pl-k">var</span> e <span class="pl-k">=</span> <span class="pl-c1">0</span>; e <span class="pl-k">&lt;</span> <span class="pl-smi">elevators</span>.<span class="pl-c1">length</span>; e<span class="pl-k">++</span>){
            elevators[e].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">"</span>idle<span class="pl-pds">"</span></span>, <span class="pl-k">function</span>() {
                <span class="pl-k">var</span> floorsWithPassengers <span class="pl-k">=</span> <span class="pl-smi">floorsWithPassengersDown</span>.<span class="pl-c1">concat</span>(floorsWithPassengersUp);
                <span class="pl-c"><span class="pl-c">//</span> go to a floor with passengers</span>
                <span class="pl-k">if</span>(<span class="pl-smi">floorsWithPassengers</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){
                    <span class="pl-k">var</span> floorNumber <span class="pl-k">=</span> floorsWithPassengers[<span class="pl-c1">0</span>];
                    <span class="pl-en">removeFloorFromPassengersOnFloor</span>(floorNumber);
                    <span class="pl-c1">this</span>.<span class="pl-en">goToFloor</span>(floorNumber);
                } <span class="pl-k">else</span> {
                    <span class="pl-c1">this</span>.<span class="pl-en">goToFloor</span>(<span class="pl-c1">0</span>);
                }
            });
            
            elevators[e].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">"</span>passing_floor<span class="pl-pds">"</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">floorNum</span>, <span class="pl-smi">direction</span>) {
                <span class="pl-c"><span class="pl-c">//</span> below 0.7 there might be place for another passenger</span>
                <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">loadFactor</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">0.7</span>){
                    
                    <span class="pl-k">if</span>(direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">"</span>up<span class="pl-pds">"</span></span>){
                        <span class="pl-c"><span class="pl-c">//</span> if the elevator is going UP</span>
                        <span class="pl-c"><span class="pl-c">//</span> we only pick up from floors where people want to go UP</span>
                        <span class="pl-k">if</span>(<span class="pl-en">passengersOnFloorUp</span>(floorNum)){
                            <span class="pl-c"><span class="pl-c">//</span> if there are passengers, make next stop that floor</span>
                            <span class="pl-c1">this</span>.<span class="pl-smi">destinationQueue</span>.<span class="pl-c1">unshift</span>(floorNum);
                            <span class="pl-c1">this</span>.<span class="pl-en">checkDestinationQueue</span>();
                            <span class="pl-c"><span class="pl-c">//</span> dont let other elevators go there</span>
                            <span class="pl-en">removeFloorFromPassengersOnFloor</span>(floorNum);
                        }
                    }
                    
                    <span class="pl-k">if</span>(direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">"</span>down<span class="pl-pds">"</span></span>){
                        <span class="pl-c"><span class="pl-c">//</span> if the elevator is going DOWN</span>
                        <span class="pl-c"><span class="pl-c">//</span> we only pick up from floors where people want to go DOWN</span>
                        <span class="pl-k">if</span>(<span class="pl-en">passengersOnFloorDown</span>(floorNum)){
                            <span class="pl-c"><span class="pl-c">//</span> if there are passengers, make next stop that floor</span>
                            <span class="pl-c1">this</span>.<span class="pl-smi">destinationQueue</span>.<span class="pl-c1">unshift</span>(floorNum);
                            <span class="pl-c1">this</span>.<span class="pl-en">checkDestinationQueue</span>();
                            <span class="pl-c"><span class="pl-c">//</span> dont let other elevators go there</span>
                            <span class="pl-en">removeFloorFromPassengersOnFloor</span>(floorNum);
                        }
                    }
                }
            });
            
            elevators[e].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">"</span>floor_button_pressed<span class="pl-pds">"</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">floorNum</span>) {
                <span class="pl-c"><span class="pl-c">//</span> @todo: SORT the destinationQueue starting at the current floor, in direction that we are moving first</span>
                <span class="pl-c"><span class="pl-c">//</span> That is: direction: down, currentfloor: 3</span>
                <span class="pl-c"><span class="pl-c">//</span> Order: 2 1 0 1 2 3 4 5 (etc.)</span>
                <span class="pl-c1">this</span>.<span class="pl-smi">destinationQueue</span>.<span class="pl-c1">push</span>(floorNum);
                <span class="pl-c1">this</span>.<span class="pl-en">checkDestinationQueue</span>();
            });
        }

        <span class="pl-k">for</span>(<span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-c1">0</span>; f <span class="pl-k">&lt;</span> <span class="pl-smi">floors</span>.<span class="pl-c1">length</span>; f<span class="pl-k">++</span>){
            floors[f].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">'</span>up_button_pressed<span class="pl-pds">'</span></span>, <span class="pl-k">function</span>(){
                <span class="pl-c"><span class="pl-c">//</span> register passengers that want to go UP</span>
                <span class="pl-smi">floorsWithPassengersUp</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">level</span>);
            });
            
            floors[f].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">'</span>down_button_pressed<span class="pl-pds">'</span></span>, <span class="pl-k">function</span>(){
                <span class="pl-c"><span class="pl-c">//</span> register passengers that want to go DOWN</span>
                <span class="pl-smi">floorsWithPassengersDown</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">level</span>);
            });
        }
        
        <span class="pl-k">function</span> <span class="pl-en">passengersOnFloorUp</span>(<span class="pl-smi">floorNumber</span>){
            <span class="pl-c"><span class="pl-c">//</span> Are there passengers on the floor that want to go UP</span>
            <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">floorsWithPassengersUp</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>){
                <span class="pl-k">if</span>(floorsWithPassengersUp[i] <span class="pl-k">==</span> floorNumber){
                    <span class="pl-k">return</span> <span class="pl-c1">true</span>;
                }
            }
        }
        
        <span class="pl-k">function</span> <span class="pl-en">passengersOnFloorDown</span>(<span class="pl-smi">floorNumber</span>){
            <span class="pl-c"><span class="pl-c">//</span> Are there passengers on the floor that want to go DOWN</span>
            <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">floorsWithPassengersDown</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>){
                <span class="pl-k">if</span>(floorsWithPassengersDown[i] <span class="pl-k">==</span> floorNumber){
                    <span class="pl-k">return</span> <span class="pl-c1">true</span>;
                }
            }
        }
        
        <span class="pl-k">function</span> <span class="pl-en">removeFloorFromPassengersOnFloor</span>(<span class="pl-smi">floorNumber</span>){
            <span class="pl-c"><span class="pl-c">//</span> Remove the floor from registration</span>
            <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">floorsWithPassengersDown</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>){
                <span class="pl-k">if</span>(floorsWithPassengersDown[i] <span class="pl-k">==</span> floorNumber){
                    <span class="pl-smi">floorsWithPassengersDown</span>.<span class="pl-c1">splice</span>(i,<span class="pl-c1">1</span>);
                }
            }
            
            <span class="pl-k">for</span>(<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> <span class="pl-smi">floorsWithPassengersUp</span>.<span class="pl-c1">length</span>; j<span class="pl-k">++</span>){
                <span class="pl-k">if</span>(floorsWithPassengersUp[j] <span class="pl-k">==</span> floorNumber){
                    <span class="pl-smi">floorsWithPassengersUp</span>.<span class="pl-c1">splice</span>(j,<span class="pl-c1">1</span>);
                }
            }
        }
    },
    <span class="pl-en">update</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">dt</span>, <span class="pl-smi">elevators</span>, <span class="pl-smi">floors</span>) {
    }
}</pre></div>

        </div>

    </div>]