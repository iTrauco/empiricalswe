[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>每个策略类必须实现4个接口：<code>on_init</code>, <code>on_symbol</code>, <code>on_bar</code>, <code>on_exit</code>。其中交易相关的买卖函数，查询函数，比如<code>ctx.buy</code>, <code>ctx.cash()</code>等，
只能在<code>on_bar</code>中被调用。系统内部通过调用<code>Context.process_trading_events</code> 来开始一次价格撮合。我们把价格数据分为k线数据和tick数据两类。
两则的撮合机制不一样。</p>
<ul>
<li>
<p>k线数据
表示当根k线开盘和收盘时间区间内的open, close, high, low四个价格。系统会分别在开盘时间和收盘时间做一个价格撮合。因此，当根k线的开盘时间
才是“当前”时间。收盘时间的价格撮合是未了确保交易能在当前k线时间区间内成交，但对<code>on_bar</code>是不可见的，它只能对应到当根k线的开盘时间，并且
任何交易最早只能在收盘时间成交。假设我们当前在第i根k线上，那么以下情况不存引用未来数据的问题：</p>
<ul>
<li>使用了open数据，</li>
<li>引用了第j(j&lt;i)根k线的数据</li>
</ul>
</li>
<li>
<p>tick数据（待实现）
只有一个时间点，任何交易最早只能在下个时间点成交，以下情况不存在引用未来数据问题：</p>
<ul>
<li>引用当前数据</li>
<li>引用前面的tick数据</li>
</ul>
</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#%E4%B8%8A%E4%B8%80%E8%8A%82%E4%BA%A4%E6%98%93%E4%B8%8A%E4%B8%8B%E6%96%87---%E4%B8%8B%E4%B8%80%E8%8A%82%E6%97%B6%E5%BA%8F%E5%8F%98%E9%87%8F" id="user-content-上一节交易上下文---下一节时序变量"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><em>上一节</em> <a class="internal present" href="/QuantFans/quantdigger/wiki/%E4%BA%A4%E6%98%93%E4%B8%8A%E4%B8%8B%E6%96%87">交易上下文</a>        <em>下一节</em> <a class="internal present" href="/QuantFans/quantdigger/wiki/%E6%97%B6%E5%BA%8F%E5%8F%98%E9%87%8F">时序变量</a> </h2>

        </div>

    </div>]