[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>High level goals of <code>generator-aspnet</code></p>
<ul>
<li>Provide a first class experience to command line users to get started with new projects and files for ASP.NET 5</li>
<li>Ship a new version on the same day as ASP.NET Core runtime builds are released</li>
<li>Enable the community to drive changes in ASP.NET Core Visual Studio templates</li>
</ul>
<p>We believe that the <code>generator-aspnet</code> generators should provide the <em>equivalent experience</em> as to what is available in Visual Studio 2015. That way users can be sure that when they start with <code>generator-aspnet</code> that they are getting high quality templates and can share with Visual Studio users in a seamless fashion. Also users of both Visual Studio and yo aspnet should be able to follow the same tutorials.</p>
<p>Since the goal of <code>generator-aspnet</code> is to be equivalent to Visual Studio we should not try and shove in additional generators that strays far beyond what Visual Studio offers out of the box. Instead of this we believe that we should enable the creation of additional generators which can bring in such behavior. What we can do is to create a "<em>family of generators</em>" which users can discover and use to get the desired content. I believe that yeoman has been designed in this way as well. There is no reason to try and have one <em>uber generator</em> with all the options under the sky. I'm proposing that we create generators using the naming convention <code>generator-aspnet-&lt;name&gt;</code> for ASP.NET generators to make it easy to discover related generators. We can also promote related generators in this repository and potentially on <a href="omnisharp.net">omnisharp.net</a>. There is plenty of precendent here as well, just take a look at the search results on npm for <a href="https://www.npmjs.com/search?q=generator-angular" rel="nofollow"><code>generator-angular</code></a></p>
<p>Related generators can live anywhere. In some cases it will make sense to add them to the <a href="https://github.com/OmniSharp">OmniSharp organization</a> and in other cases in other repositories. If you've developed a related generator and you feel that it should be in the OmniSharp org please contact me and we can discuss it.</p>
<p>We have already added a section, <a href="https://github.com/OmniSharp/generator-aspnet/wiki#related-generators">related generators</a> to the <a href="https://github.com/OmniSharp/generator-aspnet/wiki">wiki home page</a>. The only generator listed there is currently <a href="https://github.com/OmniSharp/generator-csharp"><code>generator-csharp</code></a>. <code>generator-csharp</code> doesn't meet the naming convention described above because they are not specific to ASP.NET. The goals for <code>generator-csharp</code> will be similar to <code>generator-aspnet</code> and have related generators with the naming convention <code>generator-csharp-*</code>.</p>
<p>If you are interested in creating a new related generator but you do not know where to start please reach out to <a href="mailto:sayedha@micrsofot.com">Sayed Ibrahim Hashimi</a> and he will help you get started.</p>

        </div>

    </div>]