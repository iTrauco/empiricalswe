[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><img alt="uSkyblock-Revived" data-canonical-src="http://i.imgur.com/JbSV18m.png" src="https://camo.githubusercontent.com/43b331855d78e2edf5af474b8c81507041804405/687474703a2f2f692e696d6775722e636f6d2f4a62535631386d2e706e67"/></p>
<h1>
<a aria-hidden="true" class="anchor" href="#versioning-scheme" id="user-content-versioning-scheme"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Versioning Scheme</h1>
<p>We follow a versioning scheme that is somewhat ever changing.</p>
<p>We have a Travis CI setup to automatically compile and publish jar-files back to GitHub when a tag is detected on a push.</p>
<p>Since Travis CI (as opposed to a Jenkins CI) doesn't host the release-artefacts, we have to make "releases", even for development-snapshots, used for testing.</p>
<p>This influences our versioning-scheme.</p>
<p>Scheme: <code>{major}.{minor}[-HF{hotfixnumber}[a-z]]</code></p>
<p>We use the <code>major</code> version to indicate backward compatibility breaking changes. I.e. as long as we do not require an offline conversion or import from previous versions, the major version number will be <code>2</code>.</p>
<p>The <code>minor</code> version number indicates major feature-releases. I.e. <code>v2.2</code> introduced a lot of features, most notable the dynamic challenges/ranks support.</p>
<p>A <code>HF</code> release is a smaller increment based on a minor-release (i.e. one feature added).
The sub-identifier on HF-releases (a, b, c, ...) indicates bug-fixes to the features introduced in the first HF.</p>
<p><em>Example</em></p>
<pre><code>v2.2-HF11b
</code></pre>
<p>This release is based on the <code>v2.2</code> release, and is the 11th <em>hotfix</em> (aka <em>feature addition or bugfix</em>). It's also the 2nd iteration of that particular feature-release (we've found bugs or improvements 2 times to the <code>HF11</code> release).</p>
<p>I hope this makes sense.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#releasing" id="user-content-releasing"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Releasing</h1>
<p>Since we have a Travis CI configured, all that is required to make a release is:</p>
<ol>
<li>Commit (and push) your changes to GitHub.</li>
<li>Identify the right release-name (run <code>git tag</code> to get a clue).</li>
<li>Tag the last commit (<code>git tag v2.2-HF13b</code>) and push the tag to GitHub (<code>git push --tags</code>).</li>
</ol>
<p>Travis will now take over, and 3-5 minutes later, a new release will be available under the <a href="https://github.com/rlf/uSkyBlock/releases">https://github.com/rlf/uSkyBlock/releases</a></p>
<p>Once the release has been tested (see <a class="internal present" href="/rlf/uSkyBlock/wiki/Test-Cases">Test Cases</a>) it can be published to Bukkit (Dutchy1001) and Spigot (R4zorax).</p>

        </div>

    </div>]