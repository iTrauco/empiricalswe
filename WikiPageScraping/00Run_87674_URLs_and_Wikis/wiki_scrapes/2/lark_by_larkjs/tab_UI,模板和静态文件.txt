[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>本文介绍lark.js前端开发相关内容。lark.js 默认对前端开发提供了如下辅助功能:</p>
<ul>
<li>自动重载前端代码 (live reload) 功能</li>
<li>前端代码检查</li>
<li>css/js压缩,压缩后的.map功能支持，less/sass支持，grunt, gulp 支持</li>
<li>前端单元测试支持和模拟测试支持(casperjs)</li>
</ul>
<p>你不需要配置一行代码就可以使用以上功能。</p>
<h2>
<a aria-hidden="true" class="anchor" href="#ui" id="user-content-ui"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>UI</h2>
<p>前端UI有很多优良的解决方案，lark.js 推荐在使用 <a href="http://getbootstrap.com/" rel="nofollow">bootstrap</a> 或者 <a href="https://github.com/mobframe/mob">mob</a>  (移动UI框架)</p>
<h3>
<a aria-hidden="true" class="anchor" href="#cssjs%E5%8E%8B%E7%BC%A9" id="user-content-cssjs压缩"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>css/js压缩</h3>
<p>lark.js 默认集成了基于grunt的js和css压缩功能。在您使用  <code>lark create 项目名</code> 创建项目后，可以在项目路径下的 Gruntfile.js 中找到并修改该功能。</p>
<h3>
<a aria-hidden="true" class="anchor" href="#%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5" id="user-content-前端代码检查"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>前端代码检查</h3>
<p>lark.js 默认集成了基于jshint的前端代码检查功能。在您使用  <code>lark create 项目名</code> 创建项目后，可以在项目路径下的 .jshintrc 中找到并修改该功能。</p>
<h3>
<a aria-hidden="true" class="anchor" href="#%E7%83%AD%E5%8A%A0%E8%BD%BD-live-reload" id="user-content-热加载-live-reload"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>热加载 (live reload)</h3>
<p>在您使用 <code>lark run</code>启动调试模式的lark服务后，您的服务就自动启动了live reload功能，在修改每一个js/css文件或者node.js代码后，服务都会自动重新启动.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#%E6%A8%A1%E6%9D%BF" id="user-content-模板"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>模板</h2>
<p>静态文件默认都放在程序根目录的views目录下, 在controller层调用渲染。</p>
<h2>
<a aria-hidden="true" class="anchor" href="#%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6" id="user-content-静态文件"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>静态文件</h2>
<p>静态文件默认都放在程序根目录的statics目录下。启动服务后输入 ·<a href="http://url/statics/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%96%87%E4%BB%B6%E5%A4%B9%E8%B7%AF%E5%BE%84/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E5%90%8D%C2%B7%E5%8D%B3%E5%8F%AF%E8%AE%BF%E9%97%AE%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E3%80%82" rel="nofollow">http://url/statics/静态文件文件夹路径/静态文件名·即可访问静态文件。</a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#%E6%B5%8B%E8%AF%95" id="user-content-测试"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>测试</h2>
<p>lark.js 使用 mocha 进行单元测试，使用casperjs 进行业务逻辑测试和监控。您只需把相关单元测试/业务测试代码放 tests 文件夹里，并运行 <code>lark test</code> 即可。</p>

        </div>

    </div>]