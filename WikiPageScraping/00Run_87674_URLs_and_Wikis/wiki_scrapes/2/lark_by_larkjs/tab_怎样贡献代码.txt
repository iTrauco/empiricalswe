[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>这篇文章将描述我们大家如何一起完善lark.js框架的机制。</p>
<h2>
<a aria-hidden="true" class="anchor" href="#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C" id="user-content-准备工作"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>准备工作</h2>
<p>贡献代码前需要先了解git工具的使用和github网站的使用。</p>
<ul>
<li>git 工具用法可以查看<a href="http://git-scm.com/book/zh/v1" rel="nofollow">git官方书籍</a>,至少阅读：第一，第二，第三，第五，共4章，即可入门。</li>
<li>github 网站使用可以查看<a href="http://www.worldhello.net/gotgithub/" rel="nofollow">中文版的github书籍</a>, 或者看这个<a href="http://segmentfault.com/blog/sam/1190000000736629" rel="nofollow">简单版</a> <a href="http://rogerdudler.github.io/git-guide/index.zh.html" rel="nofollow">简单版2</a>
</li>
<li>git 协作流程可以查看这篇文章<a href="http://www.ruanyifeng.com/blog/2015/12/git-workflow.html" rel="nofollow">Git协作流程</a>
</li>
<li>(可选)查看 <a href="https://github.com/larkjs/lark/wiki/Lark-%E6%80%BB%E4%BD%93%E8%AE%BE%E8%AE%A1">lark.js 总体设计</a>，了解设计思路和长期规划。</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#github-%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81%E6%B5%81%E7%A8%8B" id="user-content-github-贡献代码流程"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>github 贡献代码流程</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#%E6%8F%90issue" id="user-content-提issue"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>提issue</h3>
<p>不管你是修复lark.js的bug还是新增lark.js的功能，在你提交代码之前，在lark.js的github上提交一个 issue, 描述你要修复的问题或者要增加的功能。这么做有几个好处：</p>
<ul>
<li>不会与其它开发者的开发或是他们对这个项目的计划发生冲突.</li>
<li>lark.js的维护人员会对你提的bug或者新增功能进行相关讨论，确定该修改是不是必要，有没有提升的空间或更好的办法。</li>
<li>在达成一致后再提交代码，减少双方沟通成本，也减少pull request被拒绝的情况。</li>
</ul>
<h3>
<a aria-hidden="true" class="anchor" href="#%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81" id="user-content-获取源码"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>获取源码</h3>
<p>要修改或新增功能，在提issue后，点击左上角的<code>fork</code>按钮，复制一份lark.js主干代码到你的代码仓库。</p>
<p>（如果你是lark.js github维护人员,有lark.js在github上的权限，那么你要贡献代码时可以直接拉取主干最新代码。）</p>
<h3>
<a aria-hidden="true" class="anchor" href="#%E6%8B%89%E5%88%86%E6%94%AF" id="user-content-拉分支"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>拉分支</h3>
<p>lark.js 所有修改都在分支上进行，修改完后提交 <code>pull request</code> ， 在code review 后由项目维护人员 merge 到主干。
因此，在获取源码步骤介绍后，你需要：</p>
<ul>
<li>下载代码到本地</li>
</ul>
<pre><code>git clone https://github.com/你的仓库名/lark.git 
</code></pre>
<ul>
<li>拉分支准备修改代码</li>
</ul>
<pre><code>git branch update_xxx_feature
</code></pre>
<p>执行完上述命令后，你的代码仓库就切换到相应分支了。执行如下命令可以看到你当前分支：</p>
<pre><code>git branch -a
</code></pre>
<p>如果你想切换回主干，执行下面命令:</p>
<pre><code>git checkout -b master
</code></pre>
<p>如果你想切换回分支，执行下面命令：</p>
<pre><code>git checkout -b "branchName"
</code></pre>
<p>想直接从github上拉取分支到本地</p>
<pre><code>git clone -b branchname https://xxx.git
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#%E4%BF%AE%E6%94%B9%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%9C%B0" id="user-content-修改代码提交到本地"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>修改代码提交到本地</h3>
<p>拉完分支后，就可以修改代码了。</p>
<h4>
<a aria-hidden="true" class="anchor" href="#%E4%BF%AE%E6%94%B9%E4%BB%A3%E7%A0%81%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" id="user-content-修改代码注意事项"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>修改代码注意事项</h4>
<ul>
<li>代码风格保持一致</li>
</ul>
<p>lark.js 通过 jshint 保持代码风格的一致。首先你要安装jshint工具。</p>
<pre><code>sudo npm install -g jshint
</code></pre>
<p>在你修改完代码后，准备提交代码之前，运行</p>
<pre><code>jshint .
</code></pre>
<p>jshint 会自动检查代码风格是否符合要求，并对不符合要求的代码进行提示。你安装提示修改完代码，直到不再有错误提示。这时候你的代码就符合lark.js约定俗成的代码风格了。</p>
<ul>
<li>
<p>补充单元测试代码</p>
<ul>
<li>新有修改应该通过已有的单元测试.</li>
<li>应该提供新的单元测试来证明以前的代码存在bugs，而新的代码已经解决了这些bugs</li>
</ul>
</li>
</ul>
<p>你可以用如下命令运行所有测试</p>
<pre><code>npm test
</code></pre>
<ul>
<li>代码修改完后进行性能测试</li>
</ul>
<h4>
<a aria-hidden="true" class="anchor" href="#%E5%85%B6%E5%AE%83%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" id="user-content-其它注意事项"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>其它注意事项</h4>
<ul>
<li>请保持你编辑的代码的原有风格</li>
<li>对于无用的注释, 请删除它们</li>
<li>对逻辑和功能不容易被理解的地方添加注释</li>
<li>更新文档</li>
</ul>
<p>修改完代码后，执行如下命令提交所有修改到本地:</p>
<pre><code>git commit -am '添加本次提交说明'
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93" id="user-content-提交代码到远程仓库"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>提交代码到远程仓库</h3>
<p>在代码提交到本地后，就是与远程仓库同步代码了。执行如下命令提交本地修改到github上：</p>
<pre><code>git push origin "branchname"
</code></pre>
<p>需要注意的是，如果你没有lark.js代码仓库的权限，那么这里的 origin 是你的代码仓库，而不是lark.js的代码仓库</p>
<h3>
<a aria-hidden="true" class="anchor" href="#%E6%8F%90%E4%BA%A4%E5%90%88%E5%B9%B6%E4%BB%A3%E7%A0%81%E5%88%B0%E4%B8%BB%E5%B9%B2%E7%9A%84%E8%AF%B7%E6%B1%82" id="user-content-提交合并代码到主干的请求"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>提交合并代码到主干的请求</h3>
<p>在你的代码提交到github后，并一切准备就绪后，你就可以发送请求来把你改好的代码合入lark.js主干代码了。此时你需要进入你的github上的对应仓库，按右上角的 pull request按钮。系统会通知lark.js的维护人员，有一份新的代码修改提交了。lark.js维护人员会review你的代码，符合要求后就会合入主干，成为lark.js的一部分。</p>
<h4>
<a aria-hidden="true" class="anchor" href="#%E4%BB%A3%E7%A0%81review" id="user-content-代码review"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>代码review</h4>
<p>在你提交代码后，你的代码会被指派给至少一个代码维护人员review。请保持耐心。如果在数天后，仍然没有人对你的补丁给予任何回复，请给予一些友好的提示。</p>
<p>在你按了pull request按钮后，你可以去之前提的 issue 下面恢复该提交的 hash 值，让本次提交和issue关联上，方面reviewer 检查相关情况。</p>
<p>reviewer的意见会提交到对应issue。如果你觉得其它人的建议是合理的，也请你把这些建议加入到你的补丁中。</p>
<h4>
<a aria-hidden="true" class="anchor" href="#%E5%90%88%E5%B9%B6%E4%BB%A3%E7%A0%81%E5%88%B0%E4%B8%BB%E5%B9%B2" id="user-content-合并代码到主干"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>合并代码到主干</h4>
<p>在代码review 通过后，就由larkjs 维护人员操作合入主干了。如果你是larkjs的维护人员，拥有larkjs仓库权限，并且代码提交到了larkjs的主干，那么你需要进入larkjs的代码仓库, 这时在仓库的页面头部会有github提示的合并分支到主干的提示，按下这个按钮进行合并就好了。</p>
<h3>
<a aria-hidden="true" class="anchor" href="#npm-%E5%8F%91%E5%B8%83" id="user-content-npm-发布"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>npm 发布</h3>
<p>代码合入主干后，会随定期发布的新版发布到npm上。</p>
<p>如果你是npm上的larkjs包管理员，你可以通过如下步骤发布新版本到npm上</p>
<p>查看有larkjs npm 管理权限的用户组</p>
<pre><code>npm owner ls
</code></pre>
<p>如果你没有权限，找相关人员给你添加权限</p>
<pre><code>npm owner add &lt;user&gt; 
</code></pre>
<p>更多细节查看<a href="https://docs.npmjs.com/cli/owner" rel="nofollow">npm官方文档</a></p>
<p>最后，请注意一点：即使你的补丁没有被提交，它仍然有用的。</p>
<p>相关文档：
<a href="http://nvie.com/posts/a-successful-git-branching-model/" rel="nofollow">git flow</a></p>

        </div>

    </div>]