[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#lark-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D" id="user-content-lark-命令行工具介绍"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>lark 命令行工具介绍</h2>
<p>lark 命令行是一个为了协助快速开发  lark 项目而创建的项目，您可以通过 lark 命令 快速创建项目、开发热重启、开发测试以及开发完之后打包发布的一整套从创建、开发到部署的方案。</p>
<h2>
<a aria-hidden="true" class="anchor" href="#lark-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85" id="user-content-lark-命令行安装"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>lark 命令行安装</h2>
<div class="highlight highlight-source-shell"><pre>$ npm install lark -g</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#lark-%E5%91%BD%E4%BB%A4" id="user-content-lark-命令"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>lark 命令</h2>
<p>lark is a tool for managing lark app.</p>
<p>Usage:</p>
<pre><code>lark command [arguments]
</code></pre>
<p>The commands are:</p>
<pre><code>-h, --help         output usage information
-V, --version      output the version number
-e, --environment  switch project's environment
n, new             create an application base on lark framework
a, api             create an api application base on lark framework
g, generate        source code generator
destroy            destroy the code generated by `generate` command
r, run, server     run the lark app in development
s, start           run the lark app in production
benchmark          profile the project
test               run project's unit tests
</code></pre>
<h3>
<a aria-hidden="true" class="anchor" href="#new-%E5%91%BD%E4%BB%A4" id="user-content-new-命令"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>new 命令</h3>
<p>new 命令是新建一个 Web 项目，我们在命令行下执行 lark new &lt;项目名&gt; 创建一个新的项目。但是注意当前目录下不能存在和项目名相同的文件夹</p>
<div class="highlight highlight-source-shell"><pre>$ lark new lark-web-demo
</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#api-%E5%91%BD%E4%BB%A4" id="user-content-api-命令"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>api 命令</h3>
<div class="highlight highlight-source-shell"><pre>$ lark api lark-api-demo</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#run-%E5%91%BD%E4%BB%A4" id="user-content-run-命令"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>run 命令</h3>
<p>由于 Node.js 的运行机制，每一次我们修改代码，都要去手动重启项目。run 命令会监听文件的变化，当发现文件更新，会自动重启。用来开发时使用。</p>
<p><em>监控文件的功能尚未实现</em></p>
<div class="highlight highlight-source-shell"><pre>$ lark run</pre></div>
<h3>
<a aria-hidden="true" class="anchor" href="#start-%E5%91%BD%E4%BB%A4" id="user-content-start-命令"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>start 命令</h3>
<p>start 命令是对 pm2命令的封装，用来在线上使用，会默认开启cluster模式</p>
<h3>
<a aria-hidden="true" class="anchor" href="#watch-%E5%91%BD%E4%BB%A4" id="user-content-watch-命令"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>watch 命令</h3>
<p>watch 命令也是对 pm2命令的封装，该命令会通过pm2的watch模式启动app，在这种模式下，app目录下的所有文件被改动都会引起app的重启。</p>
<p><em>pm2的watch模式用到了nodejs的fs.watch接口，这是一个unstable的借口，在某些平台上无法使用</em></p>
<h3>
<a aria-hidden="true" class="anchor" href="#generate-%E5%91%BD%E4%BB%A4" id="user-content-generate-命令"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>generate 命令</h3>
<p>包含 controller、api、model、pageservice、dataservice</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> 根据路由生成对应目录以及 js</span>
$ lark generate controller user/list
<span class="pl-c"><span class="pl-c">#</span> 生成restapi</span>
$ lark generate rest user
<span class="pl-c"><span class="pl-c">#</span> 生成 pageservice</span>
$ lark generate pageservice user
<span class="pl-c"><span class="pl-c">#</span> 生成 model</span>
$ lark generate model user</pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#lark-%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BE%9D%E8%B5%96%E5%BA%93" id="user-content-lark-命令行依赖库"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>lark 命令行依赖库</h2>
<p>lark 命令行解析基于 <a href="https://github.com/tj/commander.js">command.js</a>开发。commandjs非常灵活，很方便开发复杂的命令行工具，另外还可以提供自动的 help 命令生成</p>
<div class="highlight highlight-source-js"><pre><span class="pl-k">var</span> program <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>commander<span class="pl-pds">'</span></span>);

program
  .<span class="pl-c1">version</span>(<span class="pl-s"><span class="pl-pds">'</span>0.0.1<span class="pl-pds">'</span></span>)
  .<span class="pl-en">option</span>(<span class="pl-s"><span class="pl-pds">'</span>-C, --chdir &lt;path&gt;<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>change the working directory<span class="pl-pds">'</span></span>)
  .<span class="pl-en">option</span>(<span class="pl-s"><span class="pl-pds">'</span>-c, --config &lt;path&gt;<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>set config path. defaults to ./deploy.conf<span class="pl-pds">'</span></span>)
  .<span class="pl-en">option</span>(<span class="pl-s"><span class="pl-pds">'</span>-T, --no-tests<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>ignore test hook<span class="pl-pds">'</span></span>)


program
  .<span class="pl-en">command</span>(<span class="pl-s"><span class="pl-pds">'</span>exec &lt;cmd&gt;<span class="pl-pds">'</span></span>)
  .<span class="pl-en">alias</span>(<span class="pl-s"><span class="pl-pds">'</span>ex<span class="pl-pds">'</span></span>)
  .<span class="pl-c1">description</span>(<span class="pl-s"><span class="pl-pds">'</span>execute the given remote cmd<span class="pl-pds">'</span></span>)
  .<span class="pl-en">option</span>(<span class="pl-s"><span class="pl-pds">"</span>-e, --exec_mode &lt;mode&gt;<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Which exec mode to use<span class="pl-pds">"</span></span>)
  .<span class="pl-c1">action</span>(<span class="pl-k">function</span>(<span class="pl-smi">cmd</span>, <span class="pl-smi">options</span>){
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">'</span>exec "%s" using %s mode<span class="pl-pds">'</span></span>, cmd, <span class="pl-smi">options</span>.<span class="pl-smi">exec_mode</span>);
  }).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">'</span>--help<span class="pl-pds">'</span></span>, <span class="pl-k">function</span>() {
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">'</span>  Examples:<span class="pl-pds">'</span></span>);
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>();
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">'</span>    $ deploy exec sequential<span class="pl-pds">'</span></span>);
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">'</span>    $ deploy exec async<span class="pl-pds">'</span></span>);
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>();
  });

<span class="pl-smi">program</span>.<span class="pl-c1">parse</span>(<span class="pl-c1">process</span>.<span class="pl-smi">argv</span>);</pre></div>
<p>为了方便一些文件的操作，还引入了<a href="https://github.com/arturadib/shelljs">shell.js</a>。shelljs提供了跨平台的shell 命令，可以很方便的开发命令行工具。</p>
<div class="highlight highlight-source-js"><pre><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>shelljs/global<span class="pl-pds">'</span></span>);

<span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">which</span>(<span class="pl-s"><span class="pl-pds">'</span>git<span class="pl-pds">'</span></span>)) {
  <span class="pl-en">echo</span>(<span class="pl-s"><span class="pl-pds">'</span>Sorry, this script requires git<span class="pl-pds">'</span></span>);
  <span class="pl-en">exit</span>(<span class="pl-c1">1</span>);
}

<span class="pl-c"><span class="pl-c">//</span> Copy files to release dir</span>
<span class="pl-en">mkdir</span>(<span class="pl-s"><span class="pl-pds">'</span>-p<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>out/Release<span class="pl-pds">'</span></span>);
<span class="pl-en">cp</span>(<span class="pl-s"><span class="pl-pds">'</span>-R<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>stuff/*<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>out/Release<span class="pl-pds">'</span></span>);</pre></div>

        </div>

    </div>]