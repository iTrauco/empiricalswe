[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#1-how-do-i-implement-my-own-agent" id="user-content-1-how-do-i-implement-my-own-agent"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>1. How do I implement my own agent?</h1>
<p>In order to help you in this task, we prepared two files:</p>
<ul>
<li><a href="https://github.com/mcastron/BBRL/blob/master/templates/XXXAgent.cpp">XXXAgent.cpp</a></li>
<li><a href="https://github.com/mcastron/BBRL/blob/master/templates/XXXAgent.h">XXXAgent.h</a></li>
</ul>
<p>We will perform the appropriate modifications in BBRL in order to create a new agent for the BBRL library, which will be usable in <a href="https://github.com/mcastron/BBRL/wiki/Run-experiments">BBRL-DDS</a> program as well.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#step-1---give-a-name-to-your-agent" id="user-content-step-1---give-a-name-to-your-agent"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 1 - Give a name to your agent</h2>
<p>If you want to call your agent <code>YYYAgent</code>, replace the string <code>XXXAgent</code> by <code>YYYAgent</code> in the two files, and rename them <code>YYYAgent.cpp</code> and <code>YYYAgent.h</code>, respectively.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#step-2---complete-yyyagentcpp-and-yyyagenth" id="user-content-step-2---complete-yyyagentcpp-and-yyyagenth"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 2 - Complete YYYAgent.cpp and YYYAgent.h</h2>
<ul>
<li>Implement <code>int getAction(int xt)</code><sup><a href="#footnotes">1</a></sup>.</li>
<li>Complete <code>learnOffline_aux(...)</code><sup><a href="#footnotes">2</a></sup>.</li>
<li>Complete <code>learnOnline(...)</code><sup><a href="#footnotes">3</a></sup>.</li>
<li>Complete <code>void reset()</code><sup><a href="#footnotes">4</a></sup>.</li>
<li>Complete <code>void freeData()</code><sup><a href="#footnotes">5</a></sup>.</li>
<li>Complete <code>serialize(...)</code> and <code>deserialize(...)</code><sup><a href="#footnotes">6</a></sup>.</li>
<li>Complete <code>checkIntegrity()</code><sup><a href="#footnotes">7</a></sup>.</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#step-3---insert-yyyagent-in-dds-namespace" id="user-content-step-3---insert-yyyagent-in-dds-namespace"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 3 - Insert YYYAgent in dds namespace</h2>
<ul>
<li>
<p>Move your files into <code>src/DDS/src/Agent/</code>.</p>
</li>
<li>
<p>in <code>dds.h</code>...</p>
<ul>
<li>Write <code>class YYYAgent;</code> inside <code>dds</code> namespace<sup><a href="#footnotes">8</a></sup>.</li>
</ul>
<div class="highlight highlight-source-c++"><pre></pre></div>
</li>
</ul>
<p>// in 'dds.h'
...
namespace dds
{
// =====================================================================
//     Classes
// =====================================================================
...
class YYYAgent; // &lt;-- here</p>
<pre><code> // =====================================================================
 //     Namespaces
 // =====================================================================
 ...
</code></pre>
<p>}
...
```</p>
<ul>
<li>
<p>In <code>dds.cpp</code>...</p>
<ul>
<li>Write <code>#include "Agent/YYYAgent.h"</code> on top<sup><a href="#footnotes">9</a></sup>.</li>
<li>Write <code>Serializable::checkIn&lt;YYYAgent&gt;(&amp;Serializable::createInstance&lt;YYYAgent&gt;);</code> inside <code>dds::init()</code> method<sup><a href="#footnotes">10</a></sup>.</li>
</ul>
<div class="highlight highlight-source-c++"><pre></pre></div>
</li>
</ul>
<p>// in 'dds.cpp'
...
#include "YYYAgent.h" // &lt;-- here
...
#include "dds.h"
...
void dds::init()
{
...
//     Agents
...
Serializable::checkIn(                    // &lt;-- here
&amp;Serializable::createInstance); // &lt;-- here</p>
<pre><code> //     FVariables
 ...
</code></pre>
<p>}
...
```</p>
<ul>
<li>
<p>In <code>DDSLib.h</code>...</p>
<ul>
<li>Write <code>#include "src/Agent/YYYAgent.h";</code> on top.</li>
</ul>
<div class="highlight highlight-source-c++"><pre></pre></div>
</li>
</ul>
<p>// in 'DDSLib.h'</p>
<p>#include "src/dds.h"
...
#include "src/Agent/YYYAgent.h" // &lt;-- here
...
```</p>
<h2>
<a aria-hidden="true" class="anchor" href="#step-4---integrate-yyyagent-in-bbrl-dds" id="user-content-step-4---integrate-yyyagent-in-bbrl-dds"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Step 4 - Integrate YYYAgent in BBRL-DDS</h2>
<ul>
<li>
<p>In <code>Agent.cpp</code>...</p>
<ul>
<li>Write <code>#include "YYYAgent.h";</code> on top<sup><a href="#footnotes">11</a></sup>.</li>
</ul>
<div class="highlight highlight-source-c++"><pre></pre></div>
</li>
</ul>
<p>// in 'Agent.cpp
#include "YYYAgent.h";
...
```</p>
<pre><code>* Complete `Agent::parse()`&lt;sup&gt;[12](#footnotes)&lt;/sup&gt;.

```cpp
</code></pre>
<p>Agent* Agent::parse(int argc, char* argv[]) throw (parsing::ParsingException)
{<br/>
...
//   'agentFile' not provided
catch (parsing::ParsingException&amp; e)
{<br/>
//   Get 'agent'
...<br/>
if (agentClassName == YYYAgent::toString()) // &lt;-- here
{                                           // &lt;-- here
...                                    // &lt;-- here
//   Return                            // &lt;-- here
return new YYYAgent(...);              // &lt;-- here
}                                           // &lt;-- here
}</p>
<pre><code> throw parsing::ParsingException("--agent");
</code></pre>
<p>}
```</p>
<h1>
<a aria-hidden="true" class="anchor" href="#" id=""><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><a name="user-content-footnotes"></a>
</h1>
<p><sub>1: This method is called whenever the agent has to choose an action to perform, from its current state <code>xt</code>.</sub><br/>
<sub>2: This method is called during the offline learning phase. It allows your agent to learn from a given MDP distribution.</sub><br/>
<sub>3: This method is called whenever a transition is observed by the agent. It allows your agent to learn from the transition observed.</sub><br/>
<sub>4: This method is called right before interacting with a new MDP. Its purpose is to remove all information learned from the interaction with the previous MDP.</sub><br/>
<sub>5: This method is called right after reaching the horizon limit when interacting with an MDP. Its purpose is to free all useless data. During the offline learning phase, when applying the <strong>OPPS-DS</strong> meta-learning scheme, this method can be necessary to avoid memory overflow.</sub><br/>
<sub>6: Check the <strong><a href="https://github.com/mcastron/BBRL/wiki/Serializable-class">Serializable class</a></strong> page for more information.</sub><br/>
<sub>7: This method is called whenever your agent modifies its attributes. Its purpose is to ensure your agent's attributes are still consistent. This method is only called in <a href="https://github.com/mcastron/BBRL/wiki/Developer-Guide#debugging-mode">debugging mode</a>.</sub><br/>
<sub>8: We need to specify that <code>YYYAgent</code> is part of the <code>dds</code> namespace.</sub><br/>
<sub>9: We cannot include <code>YYYAgent.h</code> in <code>dds.h</code> since <code>dds.h</code> is already included in <code>YYYAgent.h</code>. However, we need to know how <code>YYYAgent</code> works, which is the reason why we need to include <code>YYYAgent.h</code> in <code>dds.cpp</code>.</sub><br/>
<sub>10: This is necessary most of the time in order to be able to call a specific function later. <code>dds::init()</code> is the first method called by <code>BBRL-DDS</code>. For more information, check this <a href="https://github.com/mcastron/BBRL/wiki/Serializable-class#optional-step-5---call-serializablecheckin-method-before-using-class-b">section</a>.</sub><br/>
<sub>11: We cannot include <code>YYYAgent.h</code> in <code>Agent.h</code> since <code>Agent.h</code> is already included in <code>YYYAgent.h</code>. However, we need to know how <code>YYYAgent</code> works, which is the reason why we need to include <code>YYYAgent.h</code> in <code>Agent.cpp</code>.</sub><br/>
<sub>12: This method is called by <code>BBRL-DDS</code> in order to parse an agent from the command-line options. We defined several methods in the <code>utils::parsing</code> namespace to help you to parse <code>argv</code>. Check <code>utils.h</code> for more information.</sub></p>

        </div>

    </div>]