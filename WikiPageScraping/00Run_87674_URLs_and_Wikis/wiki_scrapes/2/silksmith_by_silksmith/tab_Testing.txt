[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>###Testing
Like in other builds in gradle there is also a test configuration <code>testWeb</code> that extends the <code>web</code> configuration. So if you need to include test libraries like chai or sinon you can add them via the test configuration</p>
<pre><code>dependencies {
    testWeb "io.silksmith.libs:mocha:2.2.5+smith.1" //required
    testWeb "io.silksmith.libs:chai:1.10.0+smith.0"
    testWeb "io.silksmith.libs:sinon:1.12.1+smith.0"
    testWeb "io.silksmith.libs:sinon-chai:2.6.0+smith.0"
}
</code></pre>
<p>####Testing with Mocha</p>
<pre><code>goog.require("sample.App"); // require what you want to test

describe("sample.App", function(){
  describe("getName", function(){
  
    it("should return the name given via the constructor", function(){
      var app = new sample.App("foo");
      chai.expect(app.getName()).to.equal("foo"); //chai expect to assert
    });
    
  });
});
</code></pre>
<p>Silksmith comes with a builtin mocha test runner, so you can run <code>gradle testJS</code>, which will start a browser and run the tests. In the current version, the test server uses the same port as the develop server so make sure you are not running <code>server</code> while executing <code>testJS</code>.
To run the server in watch mode, append <code>-Pwatch</code>.</p>
<p>####Testing on Saucelab
TBD</p>

        </div>

    </div>]