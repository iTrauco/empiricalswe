[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h2>
<a aria-hidden="true" class="anchor" href="#variable" id="user-content-variable"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Variable</h2>
<p><code>csv_delimiter</code> - The delimiter to be used by the 'csv' rendering style</p>
<h2>
<a aria-hidden="true" class="anchor" href="#description" id="user-content-description"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h2>
<p>Controls the column delimiter that will be used by the 'csv' display style. The default
delimiter is a comma (,), like so:</p>
<pre><code>1&gt; values('a', 'b')
2&gt; go --no-headers -m csv
a,b
</code></pre>
<p>however, may be changed like so:</p>
<pre><code>1&gt; \set csv_delimiter='|'
1&gt; values('a', 'b')
2&gt; go --no-headers -m csv
a|b
</code></pre>
<p>The delimiter need not be just a single character:</p>
<pre><code>1&gt; \set csv_delimiter=XXX
1&gt; values('a', 'b')
2&gt; go --no-headers -m csv
aXXXb
</code></pre>
<p>The following special escape sequences may also be used within a delimiter</p>
<ul>
<li>
<strong>\t</strong>
Specifies a literal tab character</li>
<li>
<strong>\n</strong>
Specifies a literal newline character</li>
<li>
<strong>\r</strong>
Specifies a literal carriage return</li>
<li>
<strong>\f</strong>
Specifies a literal form feed return</li>
<li>
<strong>\ooo</strong>
Where <code>ooo</code> is a valid octal value, expands to the character value of the number</li>
<li>
<strong>\xHH</strong>
Where <code>HH</code> is a valid hexidecimal value, expands to the character value of the number</li>
<li>
<strong>\uHHHH</strong>
Where <code>HHHH</code> is a valid hexidecimal value, expands to the unicode character
value provided</li>
<li>
<strong>\</strong>
Specifies a literal '\' character</li>
</ul>
<p>Care should be taken to use single quotes when specifying these escape sequences
For example:</p>
<pre><code>1&gt; \set csv_delimiter='\t'
1&gt; values('a', 'b')
2&gt; go --no-headers -m csv
a       b
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#see-also" id="user-content-see-also"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>See also</h2>
<p><a class="internal present" href="/scgray/jsqsh/wiki/style">style</a>, <a class="internal present" href="/scgray/jsqsh/wiki/csv_quote">csv_quote</a>, <a class="internal present" href="/scgray/jsqsh/wiki/csv_quote_esc">csv_quote_esc</a>, <a class="internal present" href="/scgray/jsqsh/wiki/csv_null">csv_null</a></p>

        </div>

    </div>]