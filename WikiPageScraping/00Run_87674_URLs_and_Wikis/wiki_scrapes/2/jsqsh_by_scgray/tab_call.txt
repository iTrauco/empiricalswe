[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#call" id="user-content-call"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>\call</h1>
<p>Call a prepared statement</p>
<h2>
<a aria-hidden="true" class="anchor" href="#synopsis" id="user-content-synopsis"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Synopsis</h2>
<p><code>\call [-f file] [-i] [arg ...]</code></p>
<h2>
<a aria-hidden="true" class="anchor" href="#description" id="user-content-description"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Description</h2>
<p>NOTE: The <code>\call</code> command may not be as necessary with the addition of jsqsh's
special handling of the CALL statement.  See <a class="internal present" href="/scgray/jsqsh/wiki/storedprocs">storedprocs</a> for details.</p>
<p>The <code>\call</code> command is similar to the <code>\go</code> command except that the SQL contained
the the SQL buffer is treated as a callable (prepared) statement. The arguments
for the statement can be supplied either as arguments on the command line, or
can be read from a file full of comma separated values (CSV format).</p>
<h2>
<a aria-hidden="true" class="anchor" href="#options" id="user-content-options"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Options</h2>
<h3>
<a aria-hidden="true" class="anchor" href="#--filefile--f-file" id="user-content---filefile--f-file"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>--file=<em>file</em> (-f <em>file</em>)</h3>
<p>Indicates that the arguments for the query should be pulled from a CSV file,
provided. See <strong>File input parameters</strong>, below.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#--ignore-header--i" id="user-content---ignore-header--i"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>--ignore-header (-i)</h3>
<p>If a CSV file is to be used for input, this indicates that the first line of
the input file is assumed to be header information and discarded.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#command-line-parameters" id="user-content-command-line-parameters"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Command line parameters</h2>
<p>The simplest form of executing <code>\call</code> is to pass the parameters to the
statement on the command line, such as:</p>
<pre><code>1&gt; select * from sysobjects where name = ?
2&gt; \call syscolumns
</code></pre>
<p>Or, if you want to call a stored procedure, you can do:</p>
<pre><code>1&gt; {call sp_who(?)}
2&gt; \call 112
</code></pre>
<p>See <strong>Typed parameters</strong>, below for how to deal with parameters of types other
than strings.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#file-input-parameters" id="user-content-file-input-parameters"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>File input parameters</h2>
<p>Perhaps the most powerful feature of the <code>\call</code> command is its ability
to utilize an input comma separated values (CSV) file for a source
of arguments to the query or stored procedure.  In this case, the
query is executed once for each line in the source file.</p>
<p>For example, assuming that you have a file called <code>test.csv</code>  that looks
like:</p>
<pre><code>1,2,3
4,5,6
</code></pre>
<p>you can do:</p>
<pre><code>1&gt; select ?, ?, ?
2&gt; \call --file test.csv
</code></pre>
<p>which will result in:</p>
<pre><code>+---+---+---+
|   |   |   |
+---+---+---+
| 1 | 2 | 3 |
+---+---+---+
1 row in results
ok. (first row: 2ms; total: 2ms)
+---+---+---+
|   |   |   |
+---+---+---+
| 4 | 5 | 6 |
+---+---+---+
1 row in results
ok. (first row: 0ms; total: 1ms)
</code></pre>
<p>In this example, the fields in the input file exactly match those
of the query being executed, however in cases where you wish to
selectively utilize fields in the input file, you can specify
the field number from the file on the command line, like so:</p>
<pre><code>[T:]#N
</code></pre>
<p>where <code>T:</code> is the optional type (see <strong>Typed parmeters</strong>, below) and
<em>N</em> refers to the field number from the input file you wish to utilize,
starting from 1. For example, using our example above:</p>
<pre><code>1&gt; select ?, ?, ?
2&gt; \call --file test.csv #3 #2 #1
 
+---+---+---+
|   |   |   |
+---+---+---+
| 3 | 2 | 1 |
+---+---+---+
1 row in results
ok. (first row: 2ms; total: 2ms)
+---+---+---+
|   |   |   |
+---+---+---+
| 6 | 5 | 4 |
+---+---+---+
1 row in results
ok. (first row: 0ms; total: 1ms)
</code></pre>
<p>using this syntax, field can be selectively used, rearranged, or discarded
as desired.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#csv-file-format" id="user-content-csv-file-format"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>CSV file format</h2>
<p>The following assumptions are made when interpreting the contents of
the CSV file:</p>
<ul>
<li>It conforms to: <a href="http://www.creativyst.com/Doc/Articles/CSV/CSV01.htm" rel="nofollow">http://www.creativyst.com/Doc/Articles/CSV/CSV01.htm</a>
</li>
<li>Completely empty fields are treated as NULL values.</li>
<li>Zero-length strings should be given as fields with ""</li>
</ul>
<p>Note that this lines up exactly with how the "csv" display style outputs its
data (hint hint).</p>
<h2>
<a aria-hidden="true" class="anchor" href="#mixing-file-and-command-line-parameters" id="user-content-mixing-file-and-command-line-parameters"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Mixing file and command line parameters</h2>
<p>If desired, you may also mix command line parameters and file based
parameters together, like so:</p>
<pre><code>1&gt; select ?, ?, ?
2&gt; \call --file test.csv #3 a #1
  
+---+---+---+
|   |   |   |
+---+---+---+
| 3 | a | 1 |
+---+---+---+
1 row in results
ok. (first row: 2ms; total: 2ms)
+---+---+---+
|   |   |   |
+---+---+---+
| 6 | a | 4 |
+---+---+---+
1 row in results
ok. (first row: 0ms; total: 1ms)
</code></pre>
<h2>
<a aria-hidden="true" class="anchor" href="#typed-parameters" id="user-content-typed-parameters"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Typed parameters</h2>
<p>For most platforms, the parameters passed to a prepared statement must
be of the appropriate datatype for the query. For these cases, the <code>\call</code>
command allows a datatype prefix for the arguments provided. These
prefixes are:</p>
<table>
<thead>
<tr>
<th>Argument</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>S:<em>value</em>
</td>
<td>Specifies a string value</td>
</tr>
<tr>
<td>C:<em>value</em>
</td>
<td>Specifies a character value</td>
</tr>
<tr>
<td>Z:<em>value</em>
</td>
<td>Specifies a boolean value</td>
</tr>
<tr>
<td>D:<em>value</em>
</td>
<td>Specifies a double value</td>
</tr>
<tr>
<td>I:<em>value</em>
</td>
<td>Specifies an integer value</td>
</tr>
<tr>
<td>J:<em>value</em>
</td>
<td>Specifies a long (64 bit integer) value</td>
</tr>
<tr>
<td>R:</td>
<td>(Oracle or DB2) Output a REFCURSOR</td>
</tr>
</tbody>
</table>
<p>The <code>R:</code> argument acts as a place holder for dealing with Oracle or DB2
REFCURSOR output parameters. After the call is executed, the contents
of the refcursor will be displayed.</p>
<p>for example:</p>
<pre><code>1&gt; select * from sysobjects where id = ?
2&gt; \call I:1234
</code></pre>
<p>or:</p>
<pre><code>1&gt; select ?, ?, ?
2&gt; \call --file test.csv #1 I:#2 #3
</code></pre>
<p>indicates that field #2 in test.csv is an integer field.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#refcursors" id="user-content-refcursors"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>REFCURSORS</h2>
<p>Unlike most "normal" databases, Oracle and DB2 stored procedures are incapable
of directly streaming result sets back to the user and procedures are
instead expected to return results via special output parameters of type
REFCURSOR.  For example, the following procedures:</p>
<pre><code>create or replace procedure ref_example (
    i_owner in varchar2
    o_rc1   out sys_refcursor
)
as
begin
    open o_rc1 for
    select * 
      from SYS.ALL_OBJECTS
     where OWNER = i_owner
end;
</code></pre>
<p>If you were to just execute the procedure like so:</p>
<pre><code>1&gt; {call ref_example (?)}
2&gt; \call SYS
</code></pre>
<p>you would get no results back. Instead, you must let <code>\call</code> know that
the second argument is a refcursor with the special <code>r:</code> place holder:</p>
<pre><code>1&gt; {call ref_example (?, ?)}
2&gt; \call SYS r:
</code></pre>
<p>upon execution, jsqsh will open the REFCURSOR argument and display its
results just as if it were a normal result set.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#see-also" id="user-content-see-also"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>See also</h2>
<p><a class="internal present" href="/scgray/jsqsh/wiki/go">\go</a>, <a class="internal present" href="/scgray/jsqsh/wiki/storedprocs">storedprocs</a>, <a class="internal present" href="/scgray/jsqsh/wiki/style">style</a></p>

        </div>

    </div>]