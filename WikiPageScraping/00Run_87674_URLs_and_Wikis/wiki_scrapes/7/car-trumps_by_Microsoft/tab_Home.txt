[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#getting-started" id="user-content-getting-started"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting started</h1>
<h2>
<a aria-hidden="true" class="anchor" href="#compatibility" id="user-content-compatibility"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Compatibility</h2>
<p>Car Trumps is compatible with Windows Phone 8 devices and has been tested on Nokia Lumia 820 and Nokia Lumia 920. Windows Phone 7 is not supported as the application is specifically demonstrating the use of the new Windows Phone 8 Proximity API.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#using-the-prebuilt-installation-package" id="user-content-using-the-prebuilt-installation-package"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Using the prebuilt installation package</h2>
<p>Download the XAP file and install it on your device by using the Application Deployment tool that comes with the Windows Phone 8 SDK.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#building-the-application" id="user-content-building-the-application"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Building the application</h2>
<p>Download the application solution <a href="https://github.com/Microsoft/car-trumps/archive/master.zip">source code</a> and open the <code>CarTrumps.sln</code> file in the Microsoft Visual Studio Express for Windows Phone 8. Start building and running the application by hitting F5 or selecting Start Debugging from the Debug menu.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#design" id="user-content-design"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Design</h1>
<p>Car Trumps is a Windows Phone 8 example game demonstrating the use of the <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.networking.proximity.proximitydevice(v=win.10).aspx" rel="nofollow">ProximityDevice</a> API to transfer data between two devices over the NFC. It is based on a well-known children's card game. Basically the aim of the game is to select such a card and statistic from your hand which you think can beat the opponent's selection. This is a two player game, and requires two phones with NFC support.</p>
<p>The game starts when the players touch the phones together. A random hand is given to both players from the deck. Both players select a card and pick one statistic from it, and touch the devices together to compare the selections. Both players must select the same statistic. The winner gets the opponent's losing card. The game ends when either player runs out of cards.</p>
<p><img alt="Screenshot 1" data-canonical-src="https://raw.github.com/Microsoft/car-trumps/master/doc/screenshots/car-trumps-main-view_small.png" src="https://camo.githubusercontent.com/39a7310d3cfede3e98534a7834512df5d85daa27/68747470733a2f2f7261772e6769746875622e636f6d2f4d6963726f736f66742f6361722d7472756d70732f6d61737465722f646f632f73637265656e73686f74732f6361722d7472756d70732d6d61696e2d766965775f736d616c6c2e706e67"/> 
<img alt="Screenshot 2" data-canonical-src="https://raw.github.com/Microsoft/car-trumps/master/doc/screenshots/car-trumps-card-view_small.png" src="https://camo.githubusercontent.com/20ba8e76150a2b77f48606d074d78e7d80d65ff9/68747470733a2f2f7261772e6769746875622e636f6d2f4d6963726f736f66742f6361722d7472756d70732f6d61737465722f646f632f73637265656e73686f74732f6361722d7472756d70732d636172642d766965775f736d616c6c2e706e67"/> 
<img alt="Screenshot 3" data-canonical-src="https://raw.github.com/Microsoft/car-trumps/master/doc/screenshots/car-trumps-comparison-view_small.png" src="https://camo.githubusercontent.com/821541d0886c6cc8bb4fc6864a9f2222983ae23d/68747470733a2f2f7261772e6769746875622e636f6d2f4d6963726f736f66742f6361722d7472756d70732f6d61737465722f646f632f73637265656e73686f74732f6361722d7472756d70732d636f6d70617269736f6e2d766965775f736d616c6c2e706e67"/> 
<img alt="Screenshot 4" data-canonical-src="https://raw.github.com/Microsoft/car-trumps/master/doc/screenshots/car-trumps-result-view_small.png" src="https://camo.githubusercontent.com/06008bf0bee5cbcde25bd2d775b76dda7a895e91/68747470733a2f2f7261772e6769746875622e636f6d2f4d6963726f736f66742f6361722d7472756d70732f6d61737465722f646f632f73637265656e73686f74732f6361722d7472756d70732d726573756c742d766965775f736d616c6c2e706e67"/></p>
<h1>
<a aria-hidden="true" class="anchor" href="#implementation" id="user-content-implementation"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Implementation</h1>
<h2>
<a aria-hidden="true" class="anchor" href="#architecture" id="user-content-architecture"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Architecture</h2>
<p><img alt="Architecture" data-canonical-src="https://raw.github.com/Microsoft/car-trumps/master/doc/architecture.png" src="https://camo.githubusercontent.com/1cf8d627af1d5de1643811ec5158b54f3ae29a54/68747470733a2f2f7261772e6769746875622e636f6d2f4d6963726f736f66742f6361722d7472756d70732f6d61737465722f646f632f6172636869746563747572652e706e67"/></p>
<h3>
<a aria-hidden="true" class="anchor" href="#user-interface" id="user-content-user-interface"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>User interface</h3>
<p>User interface of the application consists of <code>MainPage</code>, <code>GamePage</code>, <code>WinnerPage</code>, and informational <code>InfoPage</code>, all derived from <code>PhoneApplicationPage</code>. <code>MainPage</code> is the landing page for this example application, instructing the user to touch the opponents phone to start a new game. User makes his game selections on <code>GamePage</code> displaying a car with its statistics. <code>WinnerPage</code> is shown after determining the winner of each round.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#windows-phone-proximity-api" id="user-content-windows-phone-proximity-api"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Windows Phone Proximity API</h3>
<p>Windows Phone Proximity APIs under the namespace <code>Windows.Networking.Proximity</code> are used for communicating over NFC. To be able to use proximity services the application must have <code>ID_CAP_PROXIMITY</code> capability specified in <code>WMAppManifest.xml</code> file.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#transferring-data-over-the-nfc" id="user-content-transferring-data-over-the-nfc"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Transferring data over the NFC</h2>
<p>The application uses <code>ProximityDevice.PublishBinaryMessage</code> and <code>ProximityDevice.SubscribeBinaryMessage</code> for data exchange between two devices. The exchanged messages are standard NDEF messages, with application specific XML content.</p>
<p>The initialisation of the <code>ProximityDevice</code> is simple:</p>
<div class="highlight highlight-source-cs"><pre><span class="pl-k">public</span> <span class="pl-en">NfcManager</span>()
{
	<span class="pl-c"><span class="pl-c">//</span> Use and initialise the default proximity device.</span>
	<span class="pl-smi">_proximityDevice</span> <span class="pl-k">=</span> <span class="pl-smi">ProximityDevice</span>.<span class="pl-en">GetDefault</span>();
	...
}</pre></div>
<p>Peer-to-peer protocol requires synchronisation in message sending and receiving from both sides to eliminate mutual message flooding that would happen with non-controlled peer-to-peer. The synchronisation implementation in protocol causes considerable overhead. Client-server scheme is simpler, so it is chosen.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#protocol" id="user-content-protocol"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Protocol</h3>
<p>There are three types of messages in the protocol:</p>
<ol>
<li>Initialisation message</li>
<li>Deal cards message</li>
<li>Card exchange message</li>
</ol>
<h4>
<a aria-hidden="true" class="anchor" href="#initialisation-message" id="user-content-initialisation-message"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Initialisation message</h4>
<p>Before conversation starts between the devices, there is a negotiation phase with initialisation message exchange. The initialisation message is sent and received by both devices. The message conveys a random number generated by each counterpart. When the message is received, each recipient compares the received number to its own to decide its role in the conversation. After the message negotiation is complete, "Client" devices will subscribe to "server" messages until the end of the application session.</p>
<div class="highlight highlight-source-cs"><pre>    <span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">NfcInitiationMessage</span>
    {
    ...
        [<span class="pl-en">DataContract</span>]
        <span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">InitialMessage</span>
        {
            [<span class="pl-en">DataMember</span>(<span class="pl-en">Name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>devicetime<span class="pl-pds">"</span></span>)]
            <span class="pl-k">public</span> <span class="pl-k">double</span> <span class="pl-smi">devicetime</span>;
        }
    ...
    }</pre></div>
<p>Note that the member variable name "devicetime" is a bit confusing. It does not have anything to do with actual device time; it is just a random number based on the board clock.</p>
<h4>
<a aria-hidden="true" class="anchor" href="#deal-cards-message" id="user-content-deal-cards-message"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Deal cards message</h4>
<p>Deal cards message is used to offer a card set to client when the game starts. The message data is shown below:</p>
<div class="highlight highlight-source-cs"><pre>    <span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">NfcMessage</span>
    {
        [<span class="pl-en">DataContract</span>]
        <span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">Message</span>
        {
            ...

            <span class="pl-c"><span class="pl-c">///</span> &lt;<span class="pl-ent"><span class="pl-ent">summary</span></span>&gt;</span>
            <span class="pl-c"><span class="pl-c">///</span> Used in EDealCards message. Random Card IDs from the deck (the hand).</span>
            <span class="pl-c"><span class="pl-c">///</span> &lt;/<span class="pl-ent"><span class="pl-ent">summary</span></span>&gt;</span>
            [<span class="pl-en">DataMember</span>]
            <span class="pl-k">public</span> <span class="pl-k">int</span>[] <span class="pl-smi">CardIds</span>
            {
                <span class="pl-k">get</span>;
                <span class="pl-k">set</span>;
            }

            ...
        }
    }</pre></div>
<h4>
<a aria-hidden="true" class="anchor" href="#card-exchange-message" id="user-content-card-exchange-message"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Card exchange message</h4>
<p>Card exchange message is used during the game. The message data is shown below:</p>
<div class="highlight highlight-source-cs"><pre>    <span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">NfcMessage</span>
    {
        [<span class="pl-en">DataContract</span>]
        <span class="pl-k">public</span> <span class="pl-k">class</span> <span class="pl-en">Message</span>
        {
...
            <span class="pl-c"><span class="pl-c">///</span> &lt;<span class="pl-ent"><span class="pl-ent">summary</span></span>&gt;</span>
            <span class="pl-c"><span class="pl-c">///</span> Used in EShowCard message. The id of the selected card.</span>
            <span class="pl-c"><span class="pl-c">///</span> &lt;/<span class="pl-ent"><span class="pl-ent">summary</span></span>&gt;</span>
            [<span class="pl-en">DataMember</span>]
            <span class="pl-k">public</span> <span class="pl-k">int</span> <span class="pl-smi">CardId</span>
            {
                <span class="pl-k">get</span>;
                <span class="pl-k">set</span>;
            }

            <span class="pl-c"><span class="pl-c">///</span> &lt;<span class="pl-ent"><span class="pl-ent">summary</span></span>&gt;</span>
            <span class="pl-c"><span class="pl-c">///</span> Used in EShowCard message. The selected card property.</span>
            <span class="pl-c"><span class="pl-c">///</span> &lt;/<span class="pl-ent"><span class="pl-ent">summary</span></span>&gt;</span>
            [<span class="pl-en">DataMember</span>]
            <span class="pl-k">public</span> <span class="pl-k">string</span> <span class="pl-smi">SelectedCardProperty</span>
            {
                <span class="pl-k">get</span>;
                <span class="pl-k">set</span>;
            }
...</pre></div>
<p>Here is an example of the message body passed via NFC:</p>
<div class="highlight highlight-text-xml"><pre>&lt;<span class="pl-ent">Message</span> <span class="pl-e">xmlns</span><span class="pl-e">:</span><span class="pl-e">i</span>=<span class="pl-s"><span class="pl-pds">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="pl-pds">"</span></span> <span class="pl-e">xmlns</span>=<span class="pl-s"><span class="pl-pds">"</span>http://schemas.datacontract.org/2004/07/CarTrumps.nfc<span class="pl-pds">"</span></span>&gt;
	&lt;<span class="pl-ent">CardId</span>&gt;0&lt;/<span class="pl-ent">CardId</span>&gt;
	&lt;<span class="pl-ent">CardIds</span> <span class="pl-e">xmlns</span><span class="pl-e">:</span><span class="pl-e">d2p1</span>=<span class="pl-s"><span class="pl-pds">"</span>http://schemas.microsoft.com/2003/10/Serialization/Arrays<span class="pl-pds">"</span></span>&gt;
		&lt;<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;4&lt;/<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;&lt;<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;1&lt;/<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;&lt;<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;7&lt;/<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;&lt;<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;2&lt;/<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;&lt;<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;6&lt;/<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;&lt;<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;0&lt;/<span class="pl-ent">d2p1</span><span class="pl-ent">:</span><span class="pl-ent">int</span>&gt;
	&lt;/<span class="pl-ent">CardIds</span>&gt;
	&lt;<span class="pl-ent">MessageType</span>&gt;EDealCards&lt;/<span class="pl-ent">MessageType</span>&gt;
	&lt;<span class="pl-ent">SelectedCardProperty</span> <span class="pl-e">i</span><span class="pl-e">:</span><span class="pl-e">nil</span>=<span class="pl-s"><span class="pl-pds">"</span>true<span class="pl-pds">"</span></span> /&gt;
	&lt;<span class="pl-ent">UniqueId</span>&gt;877800297&lt;/<span class="pl-ent">UniqueId</span>&gt;
&lt;/<span class="pl-ent">Message</span>&gt;</pre></div>
<p>A <code>ShowCard</code> message is exchanged when the players have selected a card and statistic, and touch the devices together. The message contains the selected card id and the selected statistic.</p>
<p>Here is an example of the message:</p>
<div class="highlight highlight-text-xml"><pre>&lt;<span class="pl-ent">Message</span> <span class="pl-e">xmlns</span><span class="pl-e">:</span><span class="pl-e">i</span>=<span class="pl-s"><span class="pl-pds">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="pl-pds">"</span></span> <span class="pl-e">xmlns</span>=<span class="pl-s"><span class="pl-pds">"</span>http://schemas.datacontract.org/2004/07/CarTrumps.nfc<span class="pl-pds">"</span></span>&gt;
	&lt;<span class="pl-ent">CardId</span>&gt;4&lt;/<span class="pl-ent">CardId</span>&gt;
	&lt;<span class="pl-ent">CardIds</span> <span class="pl-e">xmlns</span><span class="pl-e">:</span><span class="pl-e">d2p1</span>=<span class="pl-s"><span class="pl-pds">"</span>http://schemas.microsoft.com/2003/10/Serialization/Arrays<span class="pl-pds">"</span></span> <span class="pl-e">i</span><span class="pl-e">:</span><span class="pl-e">nil</span>=<span class="pl-s"><span class="pl-pds">"</span>true<span class="pl-pds">"</span></span> /&gt;
	&lt;<span class="pl-ent">MessageType</span>&gt;EShowCard&lt;/<span class="pl-ent">MessageType</span>&gt;
	&lt;<span class="pl-ent">SelectedCardProperty</span>&gt;Engine&lt;/<span class="pl-ent">SelectedCardProperty</span>&gt;
	&lt;<span class="pl-ent">UniqueId</span>&gt;0&lt;/<span class="pl-ent">UniqueId</span>&gt;
&lt;/<span class="pl-ent">Message</span>&gt;</pre></div>
<p>See <a href="https://github.com/Microsoft/car-trumps/blob/master/CarTrumps/Nfc/NfcInitiationMessage.cs">NfcInitiationMessage.cs</a>, <a href="https://github.com/Microsoft/car-trumps/blob/master/CarTrumps/Nfc/NfcMessage.cs">NfcMessage.cs</a> and <a href="https://github.com/Microsoft/car-trumps/blob/master/CarTrumps/Nfc/NfcManager.cs">NfcManager.cs</a> for more information.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#interoperability" id="user-content-interoperability"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Interoperability</h2>
<p>The <code>ProximityDevice</code> uses standard NDEF messages pushed from one device to another. You can receive the above XML messages from a Windows Phone 8 device running the Car Trumps with an Android device by using, for example, <a href="https://play.google.com/store/apps/details?id=se.anyro.nfc_reader&amp;hl=en" rel="nofollow">NFC Reader</a>. See [NFC Basics](<a href="http://developer.android.com/guide/topics/connectivity/nfc/nfc.html" rel="nofollow">http://developer.android.com/guide/topics/connectivity/nfc/nfc.html</a> NFC Basics), Android Beam
in particular if you are interested in implementing a similar application.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#further-reading" id="user-content-further-reading"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Further reading</h1>
<p>See <a href="http://www.developer.nokia.com/Resources/Library/Lumia/#!opening-sockets-with-nfc.html" rel="nofollow">Opening sockets with NFC</a> for more in-depth information on the use of Proximity API and NFC functionality.</p>
<p>There's also another project dealing with Proximity API and NFC, <a href="https://github.com/Microsoft/nfc-talk">NFC Talk</a>, a simple chat application demonstrating NFC tap initiated connection establishment and further data transfer.</p>
<h1>
<a aria-hidden="true" class="anchor" href="#licensing" id="user-content-licensing"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Licensing</h1>
<p>All the car images were taken from en.wikipedia.org. Here is a complete list of the used images:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/File:2005-07_Volvo_V70.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:2005-07_Volvo_V70.jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:Volvo_V70R.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:Volvo_V70R.jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:Volvo-850-wagon-rear.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:Volvo-850-wagon-rear.jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:1988-1991_Volvo_240_GL_station_wagon_(2011-06-15)_01.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:1988-1991_Volvo_240_GL_station_wagon_(2011-06-15)_01.jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:Volvo-XC60-DC.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:Volvo-XC60-DC.jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:3rd_Volvo_XC70_--_11-26-2011.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:3rd_Volvo_XC70_--_11-26-2011.jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:2nd_Volvo_XC70_--_03-16-2012.JPG" rel="nofollow">http://en.wikipedia.org/wiki/File:2nd_Volvo_XC70_--_03-16-2012.JPG</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:2011-2012_Volvo_C30_--_01-07-2012.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:2011-2012_Volvo_C30_--_01-07-2012.jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:2000-2002_Volvo_S40_2.0_sedan_(2011-11-17).jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:2000-2002_Volvo_S40_2.0_sedan_(2011-11-17).jpg</a></li>
<li><a href="http://en.wikipedia.org/wiki/File:2005-07_Volvo_V70.jpg" rel="nofollow">http://en.wikipedia.org/wiki/File:2005-07_Volvo_V70.jpg</a></li>
</ul>
<p>The images are licensed under <a href="http://en.wikipedia.org/wiki/GNU_Free_Documentation_License" rel="nofollow">GNU Free Documentation License</a>.</p>
<p>The example application and its source code is licensed under <a href="https://github.com/Microsoft/car-trumps/blob/master/Licence.txt">a permissive proprietary license</a>.</p>

        </div>

    </div>]