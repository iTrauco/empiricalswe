[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Welcome to the PyMongeAmpere wiki!</p>
<h2>
<a aria-hidden="true" class="anchor" href="#getting-started" id="user-content-getting-started"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Getting started</h2>
<p>First of all, you have to download <a href="https://github.com/mrgt/MongeAmpere">MongeAmpere</a>. Note that it's not necessary to compile it. Then go into the same directory as MongeAmpere and type in a terminal:</p>
<div class="highlight highlight-source-shell"><pre>git clone https://github.com/mrgt/PyMongeAmpere.git
<span class="pl-c1">cd</span> PyMongeAmpere <span class="pl-k">&amp;&amp;</span> git submodule update --init --recursive</pre></div>
<p>Once you have installed all the dependencies, as explained <a href="wiki/InstallingDependencies">here</a>, building is rather straightforward. Create a out-of-source build folder and then configure (using cmake) and build :</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c1">cd</span> /path/to/PyMongeAmpere/..
mkdir PyMongeAmpere-build <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">cd</span> PyMongeAmpere-build
cmake ../PyMongeAmpere
make</pre></div>
<p>NB: If you encounter problem during the building step, you can use the ccmake tool, enabling you to modify easily the paths to the dependencies and the compilation options. On OSX, linking the X11 librairies may be a problem during the compilation step, you must then check (with the toggle command in ccmake) that all the X11 related paths to include and libs are the same (something like /usr/local/... or /opt/X11/).</p>
<h2>
<a aria-hidden="true" class="anchor" href="#examples" id="user-content-examples"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Examples</h2>
<p>The directory <code>examples/</code> contains several examples on how to use the PyMongeAmpere API. To check that everything works properly you can try the following command, which by default produces and displays an optimized sampling of the <a href="http://en.wikipedia.org/wiki/Lenna" rel="nofollow">Lena picture</a>:</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c1">cd</span> examples
python /path/to/PyMongeAmpere-build/bluenoise.py</pre></div>

        </div>

    </div>]