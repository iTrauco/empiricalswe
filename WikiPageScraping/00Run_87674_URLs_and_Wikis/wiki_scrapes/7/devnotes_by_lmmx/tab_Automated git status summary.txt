[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>Uses the regular format from the <code>--porcelain</code> flag to produce a string summarising <code>git status</code>.</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-k">function</span> <span class="pl-en">gnews</span>		  {
	gitnews=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-s"><span class="pl-pds">$(</span>git status --porcelain<span class="pl-pds">)</span></span><span class="pl-pds">"</span></span><span class="pl-k">;</span>
	<span class="pl-k">export</span> gitnews<span class="pl-k">;</span>
	gitreport=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-s"><span class="pl-pds">$(</span>python -c <span class="pl-s"><span class="pl-pds">'</span>from os import environ as e; gnew=e["gitnews"].split("\n");\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	mods=[stat[3:] for stat in gnew if stat[0]=="M"];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	adds=[stat[3:] for stat in gnew if stat[0]=="A"];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	dels=[stat[3:] for stat in gnew if stat[0]=="D"];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	rens=[stat[3:] for stat in gnew if stat[0]=="R"];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	cops=[stat[3:] for stat in gnew if stat[0]=="C"];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	upds=[stat[3:] for stat in gnew if stat[0]=="U"];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	modreport=["Changed ".join(["",", ".join(statuslist)]) for statuslist in [mods] if len(mods)&gt;0];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	addreport=["Added ".join(["",", ".join(statuslist)]) for statuslist in [adds] if len(adds)&gt;0];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	delreport=["Deleted ".join(["",", ".join(statuslist)]) for statuslist in [dels] if len(dels)&gt;0];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	renreport=["Renamed ".join(["",", ".join(statuslist)]) for statuslist in [rens] if len(rens)&gt;0];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	copreport=["Copied ".join(["",", ".join(statuslist)]) for statuslist in [cops] if len(cops)&gt;0];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	updreport=["Updated ".join(["",", ".join(statuslist)]) for statuslist in [upds] if len(upds)&gt;0];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	report=[". ".join(stats) for stats in [modreport,addreport,delreport,renreport,copreport,updreport] if len(stats)&gt;0];\</span></span></span>
<span class="pl-s"><span class="pl-s"><span class="pl-s">	print ". ".join(report)<span class="pl-pds">'</span></span><span class="pl-pds">)</span></span><span class="pl-pds">"</span></span><span class="pl-k">;</span>
	<span class="pl-c1">unset</span> gitnews<span class="pl-k">;</span>
	<span class="pl-c1">echo</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-smi">$gitreport</span><span class="pl-pds">"</span></span><span class="pl-k">;</span>
}
<span class="pl-k">function</span> <span class="pl-en">getgot</span>		  {
	git add <span class="pl-c1">.</span><span class="pl-k">;</span>
	commitment=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-s"><span class="pl-pds">$(</span>gnews<span class="pl-pds">)</span></span><span class="pl-pds">"</span></span><span class="pl-k">;</span>
	git commit -m <span class="pl-s"><span class="pl-pds">"</span><span class="pl-smi">$commitment</span><span class="pl-pds">"</span></span><span class="pl-k">;</span>
	git push origin master<span class="pl-k">;</span>
}</pre></div>
<blockquote>
<p><a href="https://gist.github.com/lmmx/99d2f45c690d16e2a307">gist</a></p>
</blockquote>
<h3>
<a aria-hidden="true" class="anchor" href="#gnews" id="user-content-gnews"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><code>gnews</code>
</h3>
<p><code>gnews</code> reports the <code>git status --porcelain</code> on a single line - this output uses the same syntax as the short format and will remain stable in the future of git (see <a href="https://www.kernel.org/pub/software/scm/git/docs/git-status.html" rel="nofollow">man pages</a>). Python is run inline to parse the format neatly, but since regular indent-parsing can't be used, it's done with iterable lists (feel free to <a href="https://github.com/lmmx/devnotes/issues/new">make an issue</a> if you see a more concise way to write the above). The output is a 'report' string such as</p>
<ul>
<li>Changed myfile.txt</li>
<li>Changed myfile.txt, myotherfile.txt</li>
<li>Changed myfile.txt. Added myotherfile.txt</li>
</ul>
<p>and so on, for all possible variations of git-monitored activity. This is similar to the feature seen on GitHub, when modifying a file and allowing the web interface to make an automatic commit message.</p>
<h3>
<a aria-hidden="true" class="anchor" href="#getgot" id="user-content-getgot"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a><code>getgot</code>
</h3>
<p>This wrapper for <code>gnews</code> runs the <code>git add</code> command on the current directory, makes a commit with the <code>gnews</code>-generated report and pushes to <code>origin master</code>.</p>
<p><strong>Disclaimer</strong> Odd function names are for ease of tab completion unique to my .bashrc and installed programs, feel free to rename for your own system <img align="absmiddle" alt=":smile:" class="emoji" data-canonical-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png" height="20" src="https://camo.githubusercontent.com/9d8dc7a0d4c53e76fb8f56cbb1785d887c8bdf24/68747470733a2f2f6173736574732d63646e2e6769746875622e636f6d2f696d616765732f69636f6e732f656d6f6a692f756e69636f64652f31663630342e706e67" title=":smile:" width="20"/></p>

        </div>

        <div class="wiki-footer gollum-markdown-content boxed-group" id="wiki-footer">
          <div class="boxed-group-inner wiki-auxiliary-content markdown-body">
            <p><a href="https://github.com/lmmx/devnotes/wiki">Main page</a></p>

          </div>
        </div>
    </div>]