[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <h1>
<a aria-hidden="true" class="anchor" href="#dbpersian---database-persistence-annotations-for-android" id="user-content-dbpersian---database-persistence-annotations-for-android"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>DBPersian - Database Persistence Annotations for Android</h1>
<p>DBPersian is a simple and elegant framework to simplify life of Android developers. This is a pretty thin layer in between SQLite database and Android application, mostly designed to provide a convenient way to serialize/deserialize entities to/from SQLite database based on Java annotations. The primary goal was to keep developer as close to the database as possible while getting rid of some burden and boilerplate code. Also performance is key consideration for DBPersian, so no reflections and other relatively slow approaches, everything is done via generating code in compile time (you might want to google about annotation processor, if you are not familiar yet, but it is definitely not a requirement for successful usage of DBPersian).</p>
<p>Alright, let's get down to business:</p>
<p>Android Studio tutorial</p>

        </div>

    </div>]