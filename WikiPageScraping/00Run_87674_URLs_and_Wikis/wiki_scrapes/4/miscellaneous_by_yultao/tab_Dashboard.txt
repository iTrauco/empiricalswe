[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p>package tt.lab.ml.ui;</p>
<p>import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.ToolBar;
import org.eclipse.swt.widgets.ToolItem;</p>
<p>public class Dashboard {
private static Display display;
private static Shell shell;</p>
<pre><code>public static void main(String[] args) {
	display = Display.getDefault();
	
	shell = new Shell();
	shell.setMaximized(true);
	shell.setText("NN &amp;&amp; DL");
	shell.setLayout(new GridLayout());
	
	createContents();
	
	shell.open();
	shell.layout();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch()) {
			display.sleep();
		}
	}
}

private static void createContents() {
	//createMenuBar(shell);
</code></pre>
<p>//		createToolbar(shell);
createTab(shell);
}</p>
<pre><code>private static void createMenuBar(Shell shell) {
	Menu bar = new Menu(shell, SWT.BAR);
	shell.setMenuBar(bar);
	MenuItem fileItem = new MenuItem(bar, SWT.CASCADE);
	fileItem.setText("&amp;File");
	Menu submenu = new Menu(shell, SWT.DROP_DOWN);
	fileItem.setMenu(submenu);
	MenuItem item = new MenuItem(submenu, SWT.PUSH);
	item.addListener(SWT.Selection, new Listener() {
		public void handleEvent(Event e) {
			System.out.println("Select All");
		}
	});
	item.setText("Select &amp;All\tCtrl+A");
	item.setAccelerator(SWT.MOD1 + 'A');
}

private static void createToolbar(final Shell shell) {
	final ToolBar toolBar = new ToolBar(shell, SWT.None);
	for (int i = 0; i &lt; 8; i++) {
		ToolItem item = new ToolItem(toolBar, SWT.PUSH);
		item.setText("Item " + i);
	}
	/*
	 * shell.addListener(SWT.Resize, new Listener() { public void handleEvent(Event e) { Rectangle rect = shell.getClientArea(); Point size = toolBar.computeSize(rect.width,
	 * SWT.DEFAULT); ///toolBar.setSize(size); } });
	 */
	Rectangle clientArea = shell.getClientArea();
	toolBar.setLocation(clientArea.x, clientArea.y);
	toolBar.computeSize(clientArea.width, SWT.DEFAULT);
	// toolBar.pack();
}

private static void createTab(final Shell shell) {
</code></pre>
<p>//		new NeuralNetwork().createComposite(shell, display);
//
final TabFolder tabFolder = new TabFolder(shell, SWT.NONE);
//no need to set grid data for tabFolder as it is not in a grid layout
GridData gridData = new GridData(GridData.FILL_BOTH);
gridData.grabExcessHorizontalSpace = true;
gridData.grabExcessVerticalSpace = true;
tabFolder.setLayoutData(gridData);</p>
<pre><code>	Rectangle clientArea = shell.getClientArea();
	tabFolder.setLocation(clientArea.x, clientArea.y);

	TabItem item = null;
	
	//nn
	item = new TabItem(tabFolder, SWT.NONE);
	item.setText(NeuralNetworkTabItemContent.TITLE);
	item.setControl(new NeuralNetworkTabItemContent().createComposite(tabFolder, display));
	
	
	
	tabFolder.pack();
}
</code></pre>
<p>}</p>

        </div>

    </div>]