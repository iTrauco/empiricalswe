[<div class="wiki-body gollum-markdown-content instapaper_body" id="wiki-body">
        <div class="markdown-body">
          <p><a href="https://nodei.co/npm/nanoscope/" rel="nofollow"><img alt="NPM" data-canonical-src="https://nodei.co/npm/nanoscope.png?compact=true" src="https://camo.githubusercontent.com/1a5e79c4156e370c649e03bd62ce5c3b973d28f4/68747470733a2f2f6e6f6465692e636f2f6e706d2f6e616e6f73636f70652e706e673f636f6d706163743d74727565"/></a></p>
<p><img data-canonical-src="https://travis-ci.org/5outh/nanoscope.svg?branch=master" src="https://camo.githubusercontent.com/04332637cbee100314e4a37b54940cf6ec21d47d/68747470733a2f2f7472617669732d63692e6f72672f356f7574682f6e616e6f73636f70652e7376673f6272616e63683d6d6173746572"/> <a href="https://coveralls.io/r/5outh/nanoscope?branch=master" rel="nofollow"><img alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/5outh/nanoscope/badge.svg?branch=master" src="https://camo.githubusercontent.com/e842930e48d203f86c57d3835d98e26b893727e1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f356f7574682f6e616e6f73636f70652f62616467652e7376673f6272616e63683d6d6173746572"/></a></p>
<h2>
<a aria-hidden="true" class="anchor" href="#what-is-nanoscope" id="user-content-what-is-nanoscope"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>What is nanoscope?</h2>
<p><code>nanoscope</code> lets you wrangle your data like never before. It enables:</p>
<ul>
<li>Safe access of deeply-nested objects</li>
<li>Complex modifications of arbitrary data structures</li>
<li>Immutable data transformations</li>
<li>and more!</li>
</ul>
<h2>
<a aria-hidden="true" class="anchor" href="#what-can-i-do-with-nanoscope" id="user-content-what-can-i-do-with-nanoscope"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>What can I do with nanoscope?</h2>
<p>Using <code>nanoscope</code> typically looks like this:</p>
<ol>
<li>Provide the structure you want to get pieces from and/or transform to <code>nanoscope</code>,</li>
<li>Add lens rules to the <code>nanoscope</code> instance, which specify the pieces you want to look at, and finally</li>
<li>call <code>get()</code>, <code>set()</code> or <code>map()</code> to perform some action on your data.</li>
</ol>
<p>Let's look at an example:</p>
<div class="highlight highlight-source-js"><pre><span class="pl-k">var</span> nanoscope <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>nanoscope<span class="pl-pds">'</span></span>);

<span class="pl-c"><span class="pl-c">//</span> A theoretical representation of a game</span>
<span class="pl-k">var</span> game <span class="pl-k">=</span> {
    player<span class="pl-k">:</span> {
        name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>Benjamin<span class="pl-pds">'</span></span>,
        coordinates<span class="pl-k">:</span> {
            x<span class="pl-k">:</span> <span class="pl-c1">58</span>,
            y<span class="pl-k">:</span> <span class="pl-c1">99</span>,
            z<span class="pl-k">:</span> <span class="pl-c1">100</span>
        }
    }
};

game <span class="pl-k">=</span> <span class="pl-en">nanoscope</span>(game)    <span class="pl-c"><span class="pl-c">//</span> Focus on the game</span>
    .<span class="pl-en">path</span>(<span class="pl-s"><span class="pl-pds">'</span>player.name<span class="pl-pds">'</span></span>)  <span class="pl-c"><span class="pl-c">//</span> Follow a path to player's name</span>
    .<span class="pl-c1">set</span>(<span class="pl-s"><span class="pl-pds">'</span>5outh<span class="pl-pds">'</span></span>);        <span class="pl-c"><span class="pl-c">//</span> Set the player's name to 5outh and return a new game.</span>

<span class="pl-c"><span class="pl-c">//</span> Create a reusable lens constructor</span>
<span class="pl-k">var</span> <span class="pl-en">xyCoordinates</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">game</span>) {
    <span class="pl-k">return</span> <span class="pl-en">nanoscope</span>(game)               <span class="pl-c"><span class="pl-c">//</span> Focus on the game</span>
        .<span class="pl-en">following</span>(<span class="pl-s"><span class="pl-pds">'</span>player.coordinates<span class="pl-pds">'</span></span>) <span class="pl-c"><span class="pl-c">//</span> 'following' is an alias for 'path'</span>
        .<span class="pl-en">plucking</span>([<span class="pl-s"><span class="pl-pds">'</span>x<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>y<span class="pl-pds">'</span></span>]);           <span class="pl-c"><span class="pl-c">//</span> Pluck the x and y coordinates from</span>
                                         <span class="pl-c"><span class="pl-c">//</span> the focus.</span>
};

game <span class="pl-k">=</span> <span class="pl-en">xyCoordinates</span>(game)  <span class="pl-c"><span class="pl-c">//</span> View the x and y coordinates of the game</span>
    .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">val</span>) {   <span class="pl-c"><span class="pl-c">//</span> Add one to both coordinates and return a new</span>
        <span class="pl-k">return</span> val <span class="pl-k">+</span> <span class="pl-c1">1</span>;     <span class="pl-c"><span class="pl-c">//</span> game object.</span>
    });

<span class="pl-en">xyCoordinates</span>(game).<span class="pl-c1">get</span>(); <span class="pl-c"><span class="pl-c">//</span> Returns { x: 59, y: 100 }</span></pre></div>
<h2>
<a aria-hidden="true" class="anchor" href="#what-next" id="user-content-what-next"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>What next?</h2>
<p>View more examples and the API documentation at <a href="http://kovach.me/nanoscope/" rel="nofollow">the official nanoscope website</a>.</p>
<h2>
<a aria-hidden="true" class="anchor" href="#contributing" id="user-content-contributing"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" fill-rule="evenodd"></path></svg></a>Contributing</h2>
<p>Feature requests, pull requests, code reviews, comments and concerns are more than welcome. If you have an issue with
nanoscope, please file it <a href="https://github.com/5outh/nanoscope/issues">on github</a>. When submitting pull requests, please create a feature branch and explain in detail what
you've changed and why.</p>
<p>Before adding features, please submit a feature request through <a href="https://github.com/5outh/nanoscope/issues">the issue tracker on github</a>. I will not add features to nanoscope blindly, but would love to hear
your ideas! Once a feature request is approved (I'll just comment saying it's cool), anyone can work on it and submit a pull request for review.</p>
<p>When submitting pull requests, please:</p>
<ol>
<li>Make sure that tests are passing (run <code>npm test</code> with mocha installed globally (<code>npm install -g mocha</code>)), and</li>
<li>Add at least one test that tests the feature you are adding or fixing.</li>
</ol>
<p>All pull requests will be run through Travis for automatic testing and Coveralls for code coverage information. If the code coverage percentage
has dropped, please explain why in your pull request.</p>
<p>Thanks your support of the project, and happy hacking!</p>

        </div>

    </div>]